{"version":3,"sources":["components/Link.js","components/NavLink.js","components/Nav.js","data.js","rules/rules.js","components/FileInput.js","components/RangeInput.js","components/TextInput.js","components/FontPreview.js","components/Log.js","templates/DetailView.js","templates/DetailViewOverlay.js","templates/ListView.js","templates/ListViewOverlay.js","App.js","index.js"],"names":["linkRule","props","to","className","setContentIsVisible","isActive","useContext","ContentVisibilityContext","navigate","useNavigate","css","useFela","params","onClick","e","preventDefault","setTimeout","children","NavLink","Link","pattern","location","console","log","navRule","fontFamily","padding","position","top","menuItemRule","aboutRule","content","subUlRule","display","flexDirection","Nav","homeRef","useRef","setNavHeight","filterRoutes","useLocation","handleOnResize","height","current","getBoundingClientRect","useEffect","window","addEventListener","removeEventListener","ref","pathname","map","route","index","key","title","startsWith","type","filterIdentifier","numberOfLayers","layerColors","variableFontControlSliders","inputs","label","name","min","max","default","column","nth","gridColumn","fullscreenDragRule","fileIsDragged","fontSize","backgroundColor","opacity","left","right","bottom","draggedRule","FileInput","fileInputRef","dragState","useState","cursorDrag","setCursorDrag","InputFontContext","inputFont","setInputFont","setFileIsDragged","handleDrop","stopPropagation","dataTransfer","files","length","handleDragEnter","handleDragLeave","handleDragOver","clientX","clientY","document","body","querySelector","style","pointerEvents","removeProperty","onChange","target","accept","click","valueIndicatorRule","fontVariantNumeric","buttonRule","placeholderRule","visibility","inputRule","appearance","width","RangeInput","defaultValue","tag","animatable","disabled","inputRef","animationInterval","animating","setAnimating","DetailViewContext","FormInputsContext","formInputValues","setFormInputValue","currentValue","setCurrentValue","value","clearInterval","counter","start","setInterval","Math","round","offset","cos","PI","aria-label","checkValidity","parseInt","background","outline","border","TextInput","overlayItemRule","previewedFontFamily","visible","color","userSelect","transitionDuration","transitionProperty","transitionTimingFunction","extend","condition","filter","contentRule","whiteSpace","transform","containerRule","zIndex","justifyContent","alignItems","overflow","flexGrow","inListView","FontPreview","fontVariations","onMount","didMount","contentRef","setVisible","setPreviewedFontFamily","previewedChildren","setPreviewedChildren","offsetWidth","opacityTransition","fontVariationSettings","Object","keys","join","Log","lastTimeStamp","message","createContext","formWrapperRule","marginTop","formRule","gridTemplateColumns","gap","gridAutoRows","fullscreenRule","navHeight","minHeight","isProcessingWrapperRule","isProcessingRule","animationName","paddingBottom","animationDuration","animationIterationCount","animationDirection","animationPlayState","isProcessing","CancelToken","axios","DetailView","PreviewedInputFontContext","previewedInputFont","setPreviewedInputFont","logContent","setLogContent","setPreviewedOutputFonts","PreviewedOutputFontsContext","FontSizeContext","setFontSize","isMounted","fontSizeRef","cancel","undefined","PreviewStringsContext","previewStrings","setPreviewString","previewedString","setPreviewedString","getFormVisible","setGetFormVisible","setIsProcessing","FontVariationsContext","setFontVariations","now","Date","formData","FormData","append","forEach","method","cancelToken","c","url","data","headers","then","response","warnings","outputFontsArrays","fonts","fontBase64","Uint8Array","from","atob","charCodeAt","Promise","all","arrayBuffer","inputFontBuffer","FontFace","outputFontArray","outputFonts","add","outputFont","family","catch","thrown","detail","isCancel","finally","sendRequest","Provider","contentWidth","bodyWidth","clientWidth","scale","letter","animationDelay","input","Boolean","Error","DetailViewOverlay","previewedOutputFonts","layerColor","fontPreviewContainerRule","ListView","handleOnFontPreviewMount","filterRoute","ListViewOverlay","_formInputValues","reduce","collector","inputCollector","contentOverlayRule","contentIsVisible","transition","contentBackgroundRule","isTouching","transitionWidth","appRule","touchAction","App","_setFormInputsValue","setIsTouching","setTouchAction","setTransitionWidth","cursorY","setCursorY","dragX","setDragX","listViewFontSize","setListViewFontSize","contentBackground","lastTouchTimestamp","Array","_setPreviewedOutputFonts","slider","_setFontVariations","handleCursorY","pageY","handleTouchStart","touches","pageX","handleTouchEnd","handleTouchCancel","handleOnTouchMove","_setPreviewString","element","path","renderer","createRenderer","plugins","embedded","multipleSelectors","responsiveValue","values","margin","renderStatic","boxSizing","textDecoration","maxWidth","overflowX","listStyleType","textAlign","minWidth","ReactDOM","render","RendererProvider","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.44dfec23.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { Link, NavLink, useNavigate } from \"react-router-dom\";\nimport { ContentVisibilityContext } from \"../App\";\n\nconst linkRule = () => ({\n  \"-webkit-tap-highlight-color\": \"transparent\",\n});\n\nexport default function (props) {\n  const { to, className = \"\", isActive } = props;\n  const setContentIsVisible = useContext(ContentVisibilityContext);\n  const navigate = useNavigate();\n  const { css } = useFela();\n\n  function delayAndGo(e) {\n    e.preventDefault();\n    setContentIsVisible(false);\n    setTimeout(() => {\n      navigate(to);\n      setContentIsVisible(true);\n    }, 350);\n  }\n  const params = {\n    to,\n    onClick: delayAndGo,\n    className: `${css(linkRule)} ${className}`,\n  };\n  return (\n    <NavLink {...params}>{props.children}</NavLink>\n    // ) : (\n    // <Link {...params}>{props.children}</Link>\n  );\n}\n","import React from 'react'\nimport Link from './Link'\n\nfunction NavLink(props) {\n    const {to, className} = props\n    function isActive(pattern, location){\n        console.log(pattern, location)\n    }\n    return (\n        <Link to={to} className={className} NavLink={true} isActive={isActive}>{props.children}</Link>\n    )\n}\n\nexport default NavLink\n","import React, { useEffect, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { useLocation } from \"react-router\";\nimport Link from \"./Link\";\nimport NavLink from \"./NavLink\";\n\nconst navRule = () => ({\n  fontFamily: \"test\",\n  padding: \"10px\",\n  position: \"sticky\",\n  top: 0,\n});\n\nconst menuItemRule = () => ({});\n\nconst aboutRule = () => ({\n  \":before\": {\n    content: '\", \"',\n  },\n});\n\nconst subUlRule = () => ({\n  display: \"flex\",\n  flexDirection: \"row\"\n})\n\nfunction Nav(props) {\n  const homeRef = useRef();\n  const { setNavHeight, filterRoutes } = props;\n  const { css } = useFela();\n  const location = useLocation();\n\n  function handleOnResize() {\n    const { height } = homeRef.current.getBoundingClientRect();\n    console.log(height);\n    setNavHeight(height + 20);\n  }\n\n  useEffect(() => {\n    handleOnResize();\n  }, [location]);\n\n  useEffect(() => {\n    handleOnResize();\n    window.addEventListener(\"resize\", handleOnResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleOnResize);\n    };\n  }, []);\n\n  return (\n    <nav className={css(navRule)}>\n      <ul>\n        <li ref={homeRef} className={css(menuItemRule)}>\n          <ul className={css(subUlRule)}>\n            <li>\n              <NavLink to={\"/\"}>no design foundry</NavLink>\n            </li>\n            {(location.pathname === \"/\" || location.pathname === \"/about\") &&\n            <li>\n              <NavLink to={\"/about\"} className={css(aboutRule)}>\n                about\n              </NavLink>\n            </li>\n            }\n          </ul>\n        </li>\n        {location.pathname !== \"/\" &&\n          filterRoutes.map((route, index) => (\n            <li key={`nav_${index}`}>\n              <ul className={css(subUlRule)}>\n                <li className={css(menuItemRule)}>\n                  <NavLink to={route.route}>{route.title}</NavLink>\n                </li>\n                {location.pathname.startsWith(route.route) &&\n                <li>\n                  <NavLink\n                    to={`${route.route}/about`}\n                    className={css(aboutRule)}\n                  >\n                    about\n                  </NavLink>\n                </li>\n                }\n              </ul>\n            </li>\n          ))}\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","export default [\n  {\n    type: \"filterListView\",\n    route: \"/\",\n  },\n  {\n    type: \"filterDetailView\",\n    title: \"Rotorizer\",\n    filterIdentifier: \"rotorizer\",\n    route: \"/rotorizer\",\n    numberOfLayers: 2,\n    layerColors: [\"gray\", \"#000\"],\n    variableFontControlSliders: [{\n      \"label\": \"rotation\",\n      \"tag\": \"RTTX\",\n      \"min\": 0,\n      \"max\": 360,\n      \"default\": 0,\n    }],\n    inputs: [\n      {\n        type: \"range\",\n        label: \"depth\",\n        name: \"depth\",\n        min: 2,\n        max: 600,\n        default: 20,\n      },\n    ],\n  },\n  {\n    type: \"filterDetailView\",\n    title: \"Rastr\",\n    filterIdentifier: \"rasterizer\",\n    route: \"/rasterizer\",\n    numberOfLayers: 1,\n    layerColors: [\"#000\"],\n    inputs: [\n      {\n        type: \"range\",\n        label: \"resolution\",\n        name: \"resolution\",\n        min: 10,\n        max: 150,\n        default: 20,\n      },\n    ],\n  }\n];\n","export const column = (nth) => () => ({\n    gridColumn: nth\n  })\n\nexport const width = (value) => () => ({\n    width: value\n  })","import React, { useContext, useRef, useEffect, useState } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { InputFontContext } from \"../App\";\nimport { column } from \"../rules/rules\";\n\n\nconst fullscreenDragRule = ({ fileIsDragged }) => ({\n  position: \"fixed\",\n  fontSize: \"4em\",\n  top: 0,\n  backgroundColor: \"#fff\",\n  opacity: 1,\n  left: 0,\n  right: 0,\n  bottom: 0,\n});\n\nconst draggedRule = () => ({\n  position: \"absolute\",\n  // transform: \"translate(-50%, -50%)\"\n});\n\nconst dropItRule = () => ({\n  display: [\"none\", \"block\"]\n})\n\nconst buttonRule = () => ({\n  height: \"100%\",\n  display: \"flex\",\n  alignItems: \"center\",\n  fontSize: \".9em\"\n})\n\nfunction FileInput(props) {\n  const { label } = props;\n  const fileInputRef = useRef();\n  const dragState = useRef();\n  const [ cursorDrag, setCursorDrag ] = useState({});\n  const { inputFont, setInputFont } = useContext(InputFontContext);\n  const [fileIsDragged, setFileIsDragged] = useState(false);\n  const { css } = useFela({ fileIsDragged });\n\n  useEffect(() => {\n    if (fileIsDragged) {\n      document.body.querySelector(\"#root\").style.pointerEvents = \"none\";\n      dragState.current = \"moving\";\n    } else {\n      document.body\n        .querySelector(\"#root\")\n        .style.removeProperty(\"pointer-events\");\n    }\n  }, [fileIsDragged]);\n\n  function handleDrop(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.dataTransfer?.files.length === 1) {\n      setInputFont(e.dataTransfer.files[0]);\n      dragState.current = null;\n    }\n    setFileIsDragged(false);\n  }\n\n  function handleDragEnter(e) {\n    dragState.current = \"entered\";\n    e.preventDefault();\n    e.stopPropagation();\n    setFileIsDragged(true);\n  }\n\n  function handleDragLeave(e) {\n    if (dragState.current === \"moving\") {\n      e.preventDefault();\n      e.stopPropagation();\n      setFileIsDragged(false);\n      dragState.current = \"left\";\n    }\n  }\n\n  function handleDragOver(e) {\n    const { clientX: left, clientY: top } = e;\n    setCursorDrag({left, top});\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  function handleOnChange(e) {\n    if (e.target.files.length === 1) {\n      setInputFont(e.target.files[0]);\n    }\n  }\n\n  function handleOnClick(e) {\n    fileInputRef.current.click();\n  }\n\n  useEffect(() => {\n    document.body.addEventListener(\"dragenter\", handleDragEnter);\n    document.body.addEventListener(\"dragleave\", handleDragLeave);\n    document.body.addEventListener(\"dragover\", handleDragOver);\n    document.body.addEventListener(\"drop\", handleDrop);\n    return () => {\n      document.body.removeEventListener(\"dragleave\", handleDragLeave);\n      document.body.removeEventListener(\"dragenter\", handleDragEnter);\n      document.body.removeEventListener(\"dragover\", handleDragOver);\n      document.body.removeEventListener(\"drop\", handleDrop);\n    };\n  }, []);\n  return (\n    <>\n      <label className={css(column(1))}>{label}</label>\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        onChange={handleOnChange}\n        style={{ display: \"none\" }}\n        accept=\".ttf,.otf,woff,woff2\"\n      ></input>\n      <button className={css(column(3))} onClick={handleOnClick}>\n        {inputFont?.name ?? \"select file or drop it\"}\n      </button>\n      {/* <span className={css(dropItRule, column(\"4 / span 2\"))}> or drop it</span> */}\n      {fileIsDragged && (\n        <div className={css(fullscreenDragRule)}>\n          <span className={css(draggedRule)} style={cursorDrag}>Drop it</span>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default FileInput;\n","import React, { useEffect, useRef, useContext, useState } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { FormInputsContext } from \"../App\";\nimport { column } from \"../rules/rules\";\nimport { DetailViewContext } from \"../templates/DetailView\";\n\nconst valueIndicatorRule = () => ({\n  fontVariantNumeric: \"tabular-nums\",\n  padding: \"0 .2em\",\n});\n\nconst buttonRule = () => ({\n  height: \"100%\",\n  // overflow: \"hidden\",\n  display: \"flex\",\n  flexDirection: \"column\",\n})\n\nconst placeholderRule = () => ({\n  visibility: \"hidden\"\n})\n\nconst inputRule = () => ({\n  '::-webkit-slider-thumb, ::-moz-range-thumb, ::-ms-thumb': {\n    appearance: \"none\",\n    \"-webkit-appearance\": \"none\",\n    width: \"20px\",\n    height: \"20px\"\n  }\n})\n\nfunction RangeInput(props) {\n  const {\n    label,\n    name,\n    min,\n    max,\n    tag,\n    defaultValue,\n    onChange,\n    animatable = false,\n    disabled = false,\n  } = props;\n  const inputRef = useRef();\n  const animationInterval = useRef();\n  const [animating, setAnimating] = useState();\n  const { filterIdentifier } = useContext(DetailViewContext);\n  const { formInputValues, setFormInputValue } = useContext(FormInputsContext);\n  const [currentValue, setCurrentValue] = useState(\n    formInputValues[filterIdentifier][name]\n  );\n  const { css } = useFela({animating});\n\n  useEffect(() => {\n    inputRef.current.value = currentValue || defaultValue;\n    if (!currentValue) {\n      setCurrentValue(defaultValue);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (inputRef.current.value !== currentValue) {\n      inputRef.current.value = currentValue;\n      if (onChange) {\n        onChange(currentValue);\n      }\n    }\n  }, [currentValue]);\n\n  function handleOnChange(e) {\n    if (inputRef.current.checkValidity()) {\n      const value = parseInt(e.target.value);\n      setCurrentValue(value);\n      if (name) {\n        setFormInputValue(filterIdentifier, name, value);\n      }\n    }\n  }\n\n  function handleOnClickAnimate() {\n    if (animating === true) {\n      clearInterval(animationInterval.current);\n    } else {\n      let counter = 0;\n      const start = currentValue;\n      animationInterval.current = setInterval(() => {\n        const position = (start + counter) % 720;\n        const value = Math.round(position - 360 < 0 ? position : 360 - (position % 360))\n        setCurrentValue(value)\n        const offset =\n          10 - ((Math.cos((Math.PI * position) / 180) + 1) / 2) * 9;\n        counter += offset;\n      }, 1000 / 30);\n    }\n    setAnimating(!animating);\n  }\n\n  return (\n    <>\n      <label className={css(column(1))}>{label}</label>\n      {animatable && (\n        <button className={css(buttonRule, column(2))} onClick={handleOnClickAnimate}>\n          <span>{animating ? \"stop\" : \"play\"}</span>\n          <span className={css(placeholderRule)} aria-label=\"hidden\">play</span>\n          <span className={css(placeholderRule)} aria-label=\"hidden\">stop</span>\n        </button>\n      )}\n      <input\n        ref={inputRef}\n        className={css(inputRule, column(3))}\n        type=\"range\"\n        onChange={handleOnChange}\n        min={min}\n        max={max}\n        disabled={disabled}\n      ></input>\n      <div className={css(valueIndicatorRule)} disabled={disabled}>\n        {currentValue}\n      </div>\n    </>\n  );\n}\n\nexport default RangeInput;\n","import React, { useEffect, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { column } from \"../rules/rules\";\n\nconst inputRule = () => ({\n  background: \"transparent\",\n  outline: \"none\",\n  border: \"none\"\n})\n\nfunction TextInput(props) {\n  const { label, defaultValue, onChange, disabled } = props;\n  const inputRef = useRef();\n  const { css } = useFela();\n  useEffect(() => {\n    if (defaultValue) {\n      inputRef.current.value = defaultValue;\n    }\n  }, []);\n\n  function handleOnChange() {\n    if (inputRef.current.checkValidity()) {\n      if (onChange) {\n        onChange(inputRef.current.value);\n      }\n    }\n  }\n  return (\n    <>\n      <label className={css(column(1))}>{label}</label>\n      <input\n        ref={inputRef}\n        className={css(inputRule, column(3))}\n        type=\"text\"\n        onChange={handleOnChange}\n        disabled={disabled}\n      ></input>\n    </>\n  );\n}\n\nexport default TextInput;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\n\nconst opacityTransition = 350;\n\nconst overlayItemRule = ({ previewedFontFamily, visible, color }) => ({\n  userSelect: \"none\",\n  // position: \"absolute\",\n  // transform: \"translate(-50%, -50%)\",\n  transitionDuration: `${opacityTransition}ms`,\n  transitionProperty: \"opacity, filter\",\n  transitionTimingFunction: \"ease-in\",\n  extend: [\n    {\n      condition: previewedFontFamily,\n      style: {\n        fontFamily: previewedFontFamily,\n      },\n    },\n    {\n      condition: color,\n      style: {\n        color\n      }\n    },\n    {\n      condition: !visible,\n      style: {\n        opacity: 0,\n        filter: \"blur(.025em)\",\n      },\n    },\n  ],\n});\n\nconst contentRule = () => ({\n  whiteSpace: \"nowrap\",\n  transform: \"translateZ(0)\"\n})\n\nconst containerRule = ({ inListView }) => ({\n  zIndex: -1,\n  userSelect: \"none\",\n  pointerEvents: \"none\",\n  position: \"absolute\",\n  top: 0,\n  left: 0,\n  width: \"100vw\",\n  height: \"100vh\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  overflow: \"hidden\",\n  flexGrow: 1,\n  extend: [\n    {\n      condition: inListView,\n      style: {\n        alignItems: \"flex-start\",\n        height: \"100%\",\n      },\n    },\n  ],\n});\n\nfunction FontPreview(props) {\n  const {\n    fontSize,\n    inListView = false,\n    fontFamily,\n    fontVariations = {},\n    color,\n    onMount\n  } = props;\n  const didMount = useRef(false);\n  const contentRef = useRef();\n  const [visible, setVisible] = useState(true);\n  const [previewedFontFamily, setPreviewedFontFamily] = useState(fontFamily);\n  const [previewedChildren, setPreviewedChildren] = useState(props.children);\n\n  useEffect(() => {\n    if (!didMount.current && onMount) {\n      onMount(contentRef.current.offsetWidth)\n      didMount.current = true\n    }    \n  }, [fontSize, onMount])\n\n  useEffect(() => {\n    if (fontFamily !== previewedFontFamily) {\n      setVisible(false);\n      setTimeout(() => {\n        setPreviewedFontFamily(fontFamily);\n        setPreviewedChildren(props.children);\n        setVisible(true);\n      }, opacityTransition + 50);\n    }\n  }, [fontFamily]);\n\n  const { css } = useFela({ visible, inListView, previewedFontFamily, color });\n  return (\n    <div className={css(containerRule)} style={{ fontSize: `${fontSize}px` }}>\n      <div>\n        <div className={css(overlayItemRule)}>\n          <span\n            ref={contentRef}\n            className={css(contentRule)}\n            style={{\n              fontVariationSettings: Object.keys(fontVariations)\n                .map((key) => `\"${key}\" ${fontVariations[key]}`)\n                .join(\", \"),\n            }}\n          >\n            {previewedChildren}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FontPreview;\n","import React from \"react\";\n\nfunction Log(props) {\n  const { content } = props;\n  return <ul>\n    {content.map((message, index) => <li key={index}>{message}</li>)}\n  </ul>;\n}\n\nexport default Log;\n","import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport {\n  FontSizeContext,\n  FormInputsContext,\n  InputFontContext,\n  PreviewedInputFontContext,\n  PreviewedOutputFontsContext,\n  PreviewStringsContext,\n  FontVariationsContext,\n} from \"../App\";\nimport FileInput from \"../components/FileInput\";\nimport RangeInput from \"../components/RangeInput\";\nimport TextInput from \"../components/TextInput\";\nimport { useFela } from \"react-fela\";\nimport { column, width } from \"../rules/rules\";\nimport FontPreview from \"../components/FontPreview\";\nimport axios from \"axios\";\nimport Log from \"../components/Log\";\n\nexport const DetailViewContext = createContext();\n\nconst formWrapperRule = () => ({\n  marginTop: \"auto\",\n});\nconst formRule = () => ({\n  pointerEvents: \"all\",\n  display: \"grid\",\n  gridTemplateColumns: [\n    \"min-content min-content auto 3ch\",\n    \"repeat(4, min-content) 3ch\",\n  ],\n  width: [\"100%\", \"auto\"],\n  gap: \"0px 6px\",\n  gridAutoRows: \"1.2em\",\n  whiteSpace: \"nowrap\",\n  alignItems: \"center\",\n  bottom: 0,\n  left: 0,\n});\n\nconst fullscreenRule = ({ navHeight }) => ({\n  minHeight: `100vh`,\n  top: 0,\n  position: \"absolute\",\n  width: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  padding: \"10px\",\n  pointerEvents: \"none\"\n});\n\nconst isProcessingWrapperRule = () => ({\n  display: \"flex\",\n  alignItems: \"flex-end\",\n  flexDirection: \"row\",\n});\n\nconst isProcessingRule = ({ isProcessing }) => ({\n  display: \"block\",\n  animationName: {\n    \"0%\": { paddingBottom: \".5em\" },\n    \"40%\": { paddingBottom: \"0\" },\n    \"100%\": { paddingBottom: \"0\" },\n  },\n  animationDuration: \"1s\",\n  animationIterationCount: \"infinite\",\n  animationDirection: \"alternate-reverse\",\n  animationPlayState: isProcessing ? \"processing\" : \"paused\",\n});\n\nconst CancelToken = axios.CancelToken;\nlet lastTimeStamp;\n\nfunction DetailView(props) {\n  const { inputs, variableFontControlSliders, filterIdentifier, navHeight } =\n    props;\n  const { previewedInputFont, setPreviewedInputFont } = useContext(\n    PreviewedInputFontContext\n  );\n  const [ logContent, setLogContent ] = useState([])\n  const { setPreviewedOutputFonts } = useContext(PreviewedOutputFontsContext);\n  const { formInputValues } = useContext(FormInputsContext);\n  const { fontSize, setFontSize } = useContext(FontSizeContext);\n  const { inputFont } = useContext(InputFontContext);\n  const isMounted = useRef(false);\n  const fontSizeRef = useRef(200)\n  const cancel = useRef(undefined);\n  const { previewStrings, setPreviewString } = useContext(\n    PreviewStringsContext\n  );\n  const [previewedString, setPreviewedString] = useState(\n    previewStrings[filterIdentifier]\n  );\n  const [getFormVisible, setGetFormVisible] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const { fontVariations, setFontVariations } = useContext(\n    FontVariationsContext\n  );\n  const { css } = useFela({ navHeight, isProcessing });\n\n  function cancelRequest() {\n    if (cancel.current !== undefined) {\n      setIsProcessing(false);\n      cancel.current(\"cancelled by user\");\n      cancel.current = undefined;\n    }\n  }\n\n\n\n  function sendRequest() {\n    const formData = new FormData();\n    formData.append(\"font_file\", inputFont);\n    formData.append(\"preview_string\", previewedString);\n    Object.keys(formInputValues[filterIdentifier]).forEach((key) =>\n      formData.append(key, formInputValues[filterIdentifier][key])\n    );\n    setIsProcessing(true);\n    axios({\n      method: \"post\",\n      cancelToken: new CancelToken(function executor(c) {\n        cancel.current = c;\n      }),\n      url: `http://0.0.0.0:5000/filters/${filterIdentifier}`,\n      data: formData,\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    })\n      .then((response) => {\n        setLogContent(response.data.warnings)\n        const outputFontsArrays = response.data.fonts.map((fontBase64) =>\n          Uint8Array.from(atob(fontBase64), (c) => c.charCodeAt(0))\n        );\n        return Promise.all([inputFont.arrayBuffer(), outputFontsArrays]);\n      })\n      .then(([inputFontBuffer, outputFontsArrays]) => [\n        new FontFace(`preview-input-font-${Date.now()}`, inputFontBuffer),\n        outputFontsArrays.map(\n          (outputFontArray, index) =>\n            new FontFace(\n              `preview-output-font-${Date.now()}-${index}`,\n              outputFontArray\n            )\n        ),\n      ])\n      .then(([inputFont, outputFonts]) => {\n        document.fonts.add(inputFont);\n        outputFonts.map((outputFont) => document.fonts.add(outputFont));\n        return [inputFont, outputFonts];\n      })\n      .then(([inputFont, outputFonts]) => {\n        setPreviewedInputFont(inputFont.family);\n        setPreviewedOutputFonts(\n          filterIdentifier,\n          outputFonts.map((outputFont) => outputFont.family)\n        );\n      })\n      .catch((thrown) => {\n        const detail = thrown?.response?.data?.detail ?? null\n        if (axios.isCancel(thrown)) {\n          console.log(thrown.message);\n        } else {\n          console.log(thrown);\n        }\n      })\n      .finally(() => {\n        setIsProcessing(false);\n      });\n  }\n\n  // form auto-submit\n  useEffect(() => {\n    if (isMounted.current && inputFont) {\n      const now = Date.now();\n      lastTimeStamp = now;\n      setTimeout(function () {\n        if (now === lastTimeStamp) {\n          setPreviewString(filterIdentifier, previewedString);\n          sendRequest();\n        }\n      }, 500);\n    }\n  }, [formInputValues, inputFont, previewedString, filterIdentifier]);\n\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n      setGetFormVisible(false);\n      cancelRequest();\n    };\n  }, []);\n\n  function handleOnFontPreviewMount(contentWidth) {\n    const bodyWidth = document.body.clientWidth - 20\n    if (contentWidth > bodyWidth) {\n      const scale = fontSize*(bodyWidth/contentWidth)\n      if (scale < fontSizeRef.current) {\n        // setFontSize(scale)\n        fontSizeRef.current = scale\n      }\n    }\n  }\n\n  return (\n    <DetailViewContext.Provider value={{ filterIdentifier }}>\n      <div className={css(fullscreenRule)}>\n        <FontPreview fontFamily={previewedInputFont} fontSize={fontSize} onMount={handleOnFontPreviewMount}>\n          {previewStrings[filterIdentifier]}\n        </FontPreview>\n        <div className={css(formWrapperRule)}>\n            {isProcessing && (\n              <div\n                className={css(isProcessingWrapperRule)}\n              >\n                {[...\"loading...........\"].map((letter, index) => (\n                  <span\n                    key={`loading-${index}`}\n                    className={css(isProcessingRule, () => ({\n                      animationDelay: `${index / 10}s`,\n                    }))}\n                  >\n                    {letter}\n                  </span>\n                ))}\n              </div>\n            )}\n            <Log content={logContent}/>\n          <div className={css(formRule)}>\n            {variableFontControlSliders?.map((input, index) => (\n              <RangeInput\n                label={input.label}\n                key={`font_ui_${index}`}\n                min={input.min}\n                max={input.max}\n                tag={input.tag}\n                defaultValue={fontVariations[filterIdentifier][input.tag]}\n                onChange={(value) =>\n                  setFontVariations(filterIdentifier, input.tag, value)\n                }\n                animatable={true}\n              />\n            ))}\n            <RangeInput\n              label={\"font size\"}\n              min={20}\n              max={400}\n              defaultValue={200}\n              onChange={(value) => setFontSize(value)}\n            />\n            <TextInput\n              label={\"preview\"}\n              defaultValue={previewStrings[filterIdentifier]}\n              onChange={(value) => setPreviewedString(value)}\n              disabled={!Boolean(inputFont)}\n            ></TextInput>\n            <FileInput label=\"font file\"></FileInput>\n            {inputs.map((input, index) => {\n              switch (input.type) {\n                case \"range\":\n                  return (\n                    <RangeInput\n                      label={input.label}\n                      name={input.name}\n                      key={`input_${filterIdentifier}_${index}`}\n                      min={input.min}\n                      max={input.max}\n                      disabled={!Boolean(inputFont)}\n                    ></RangeInput>\n                  );\n                default:\n                  throw new Error(\"component not found\");\n              }\n            })}\n            <button\n              className={css(column(1))}\n              onClick={() => setGetFormVisible(!getFormVisible)}\n              disabled={!Boolean(inputFont)}\n            >\n              {getFormVisible ? \"hide\" : \"get\"}\n            </button>\n            {/* <button onClick={() => cancelRequest()}>cancel</button> */}\n            {getFormVisible && (\n              <>\n                <hr className={css(column(\"1 / span 5\"), width(\"100%\"))} />\n                <TextInput label={\"font name\"} />\n                <button className={css(column(\"5\"))}>download</button>\n                <TextInput label={\"email\"} />\n                <button className={css(column(\"5\"))}>send</button>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </DetailViewContext.Provider>\n  );\n}\n\nexport default DetailView;\n","import React, { useContext } from \"react\";\nimport { useFela } from \"react-fela\";\nimport {\n  FontSizeContext,\n  FontVariationsContext,\n  PreviewedOutputFontsContext,\n  PreviewStringsContext,\n} from \"../App\";\nimport FontPreview from \"../components/FontPreview\";\n\nconst containerRule = ({ navHeight }) => ({\n  marginTop: `${navHeight}px`,\n});\n\n\nfunction DetailViewOverlay(props) {\n  const { filterIdentifier, navHeight, layerColors } = props;\n  const { fontSize } = useContext(FontSizeContext);\n  const { previewStrings } = useContext(PreviewStringsContext);\n  const { previewedOutputFonts } = useContext(PreviewedOutputFontsContext);\n  const { fontVariations } = useContext(FontVariationsContext)\n  const { css } = useFela({ navHeight });\n\n  return (\n    <div className={css(containerRule)}>\n      <div>\n        {layerColors.map((layerColor, index) => (\n        <FontPreview \n          key={`${filterIdentifier}-overlay-${index}`}\n          fontFamily={previewedOutputFonts[filterIdentifier][index]}\n          fontSize={fontSize}\n          fontVariations={fontVariations[filterIdentifier]}\n          color={layerColor}\n        >\n          {previewStrings[filterIdentifier]}\n        </FontPreview>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default DetailViewOverlay;\n","import React, { useState, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\nimport FontPreview from \"../components/FontPreview\";\nimport Link from \"../components/Link\";\n\nexport const fontPreviewContainerRule = ({ fontSize }) => ({\n  position: \"relative\",\n  height: `${fontSize * 1.1}px`,\n});\n\nfunction ListView(props) {\n  const { filterRoutes, fontSize, setFontSize } = props;\n  const { css } = useFela({ fontSize });\n  const fontSizeRef = useRef(200);\n\n  function handleOnFontPreviewMount(contentWidth) {\n    const bodyWidth = document.body.clientWidth - 20;\n    if (contentWidth > bodyWidth) {\n      const scale = fontSize * (bodyWidth / contentWidth);\n      if (scale < fontSizeRef.current) {\n        setFontSize(scale);\n        fontSizeRef.current = scale;\n      }\n    }\n  }\n\n  return (\n    <ul>\n      {filterRoutes.map((filterRoute, index) => (\n        <li key={`list-view-${filterRoute.route}`}>\n          <Link to={filterRoute.route}>\n            <div className={css(fontPreviewContainerRule)}>\n              <FontPreview\n                fontSize={fontSize}\n                inListView={true}\n                onMount={handleOnFontPreviewMount}\n              >\n                {filterRoute.title}\n              </FontPreview>\n            </div>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ListView;\n","import React from \"react\";\nimport { useFela } from \"react-fela\";\nimport FontPreview from \"../components/FontPreview\";\nimport Link from \"../components/Link\";\nimport { fontPreviewContainerRule } from \"./ListView\";\n\nconst containerRule = ({navHeight}) => ({\n    marginTop: `${navHeight}px`\n})\n\n\n\nfunction ListViewOverlay(props) {\n  const { filterRoutes, navHeight, fontSize } = props;\n  const { css } = useFela({navHeight, fontSize})\n  return (\n    <ul className={css(containerRule)}>\n      {filterRoutes.map((filterRoute) => (\n        <li key={`overlay-link-${filterRoute.route}`}>\n          <Link to={filterRoute.route}>\n            <div className={css(fontPreviewContainerRule)}>\n              <FontPreview fontSize={fontSize} inListView={true}>{filterRoute.title}</FontPreview>\n            </div>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ListViewOverlay;\n","import React, { createContext, useState, useEffect, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { Route, Routes } from \"react-router\";\nimport Link from \"./components/Link\";\nimport Nav from \"./components/Nav\";\nimport data from \"./data\";\n// const data = require(\"./data\");\nimport DetailView from \"./templates/DetailView\";\nimport DetailViewOverlay from \"./templates/DetailViewOverlay\";\nimport ListView from \"./templates/ListView\";\nimport ListViewOverlay from \"./templates/ListViewOverlay\";\n\nexport const FormInputsContext = createContext();\nexport const InputFontContext = createContext();\nexport const PreviewStringsContext = createContext();\nexport const FontSizeContext = createContext();\nexport const ContentVisibilityContext = createContext();\nexport const PreviewedInputFontContext = createContext();\nexport const PreviewedOutputFontsContext = createContext();\nexport const FontVariationsContext = createContext();\n\nconst filterRoutes = data.filter((route) => route.type === \"filterDetailView\");\nconst _formInputValues = filterRoutes.reduce((collector, filterRoute) => {\n  collector[filterRoute.filterIdentifier] = filterRoute.inputs.reduce(\n    (inputCollector, input) => {\n      inputCollector[input.name] = input.default;\n      return inputCollector;\n    },\n    {}\n  );\n  return collector;\n}, {});\n\nconst contentOverlayRule = ({ contentIsVisible, navHeight }) => ({\n  position: \"fixed\",\n  bottom: 0,\n  width: \"100%\",\n  height: \"0px\",\n  left: 0,\n  background: \"#ccc\",\n  transition: `height ${350}ms`,\n  transform: \"translateZ(0)\",\n  transitionTimingFunction: contentIsVisible\n    ? \"cubic-bezier(.55,0,1,.45)\"\n    : \"cubic-bezier(0,.55,.45,1)\",\n  extend: [\n    {\n      condition: !contentIsVisible,\n      style: {\n        height: `calc(100% - ${navHeight}px)`,\n      },\n    },\n  ],\n});\n\nconst contentBackgroundRule = ({ isTouching, transitionWidth }) => ({\n  zIndex: -1,\n  top: 0,\n  left: 0,\n  width: \"100%\",\n  position: \"absolute\",\n  background: \"#eee\",\n  overflow: \"hidden\",\n  transform: \"translateZ(0)\",\n  extend: [\n    {\n      condition: isTouching,\n      style: {\n        height: \"100%\",\n      },\n    },\n    {\n      condition: !isTouching,\n      style: {\n        width: \"100%\",\n      },\n    },\n    {\n      condition: transitionWidth,\n      style: {\n        transition: \"width .15s ease-in\",\n      },\n    },\n  ],\n});\n\nconst appRule = ({ touchAction }) => ({\n  fontSize: [\"22px\", \"18px\"],\n  extend: [\n    {\n      condition: !touchAction,\n      style: {\n        touchAction: \"none\",\n      },\n    },\n  ],\n});\n\nfunction App() {\n  const [inputFont, setInputFont] = useState(null);\n  const [previewedInputFont, setPreviewedInputFont] = useState(null);\n  const [fontSize, setFontSize] = useState(document.body.clientWidth / 4);\n  const [formInputValues, _setFormInputsValue] = useState(_formInputValues);\n  const [contentIsVisible, setContentIsVisible] = useState(true);\n  const [navHeight, setNavHeight] = useState(0);\n  const [isTouching, setIsTouching] = useState(false);\n  const [touchAction, setTouchAction] = useState(true);\n  const [transitionWidth, setTransitionWidth] = useState(false);\n  const [cursorY, setCursorY] = useState(0);\n  const [dragX, setDragX] = useState(0);\n  const [listViewFontSize, setListViewFontSize] = useState(200);\n  const [detailViewFontSize, setDetailViewFontSize] = useState(200)\n\n\n  const { css } = useFela({\n    contentIsVisible,\n    navHeight,\n    touchAction,\n    isTouching,\n    transitionWidth,\n  });\n\n  const contentBackground = useRef();\n  const lastTouchTimestamp = useRef(Date.now());\n\n  const [previewedOutputFonts, _setPreviewedOutputFonts] = useState(\n    filterRoutes.reduce((collector, filterRoute) => {\n      collector[filterRoute.filterIdentifier] = Array(\n        filterRoute.numberOfLayers\n      );\n      return collector;\n    }, {})\n  );\n\n  const mainRule = () => ({\n  })\n\n  const [fontVariations, _setFontVariations] = useState(\n    filterRoutes.reduce((collector, filterRoute) => {\n      if (filterRoute.variableFontControlSliders) {\n        collector[filterRoute.filterIdentifier] =\n          filterRoute.variableFontControlSliders.reduce((collector, slider) => {\n            collector[slider.tag] = slider.default;\n            return collector;\n          }, {});\n      }\n      return collector;\n    }, {})\n  );\n\n  function setPreviewedOutputFonts(filterIdentifier, value) {\n    let collector = {};\n    collector[filterIdentifier] = value;\n    _setPreviewedOutputFonts({ ...previewedOutputFonts, ...collector });\n  }\n\n  function setFontVariations(filterIdentifier, tag, value) {\n    let collector = { ...fontVariations };\n    collector[filterIdentifier][tag] = parseInt(value);\n    _setFontVariations(collector);\n  }\n\n  function setFormInputValue(filterIdentifier, name, value) {\n    let collector = { ...formInputValues };\n    collector[filterIdentifier][name] = value;\n    _setFormInputsValue(collector);\n  }\n\n  function handleCursorY(e) {\n    if (Date.now() - lastTouchTimestamp.current > 500) {\n      setTransitionWidth(false);\n      setIsTouching(false);\n      setCursorY(e.pageY);\n    }\n  }\n\n  function handleTouchStart(e) {\n    lastTouchTimestamp.current = Date.now();\n    setTransitionWidth(true);\n    setIsTouching(true);\n    if (e.touches.length === 1) {\n      setDragX(e.touches[0].pageX);\n    }\n  }\n\n  function handleTouchEnd(e) {}\n\n  function handleTouchCancel(e) {}\n\n  function handleOnTouchMove(e) {\n    setTransitionWidth(false);\n    if (e.touches.length === 1) {\n      const touch = e.touches[0];\n      setDragX(e.touches[0].pageX);\n    } else {\n      setTouchAction(true);\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"mousemove\", handleCursorY);\n    window.addEventListener(\"touchstart\", handleTouchStart);\n    window.addEventListener(\"touchmove\", handleOnTouchMove);\n    window.addEventListener(\"touchend\", handleTouchEnd);\n    window.addEventListener(\"touchcancel\", handleTouchCancel);\n    return () => {\n      window.removeEventListener(\"mousemove\", handleCursorY);\n      window.removeEventListener(\"touchstart\", handleTouchStart);\n      window.removeEventListener(\"touchmove\", handleOnTouchMove);\n      window.removeEventListener(\"touchend\", handleTouchEnd);\n      window.removeEventListener(\"touchcancel\", handleTouchCancel);\n    };\n  }, []);\n\n  const [previewStrings, _setPreviewString] = useState(\n    filterRoutes.reduce((collector, filterRoute) => {\n      collector[filterRoute.filterIdentifier] = filterRoute.title;\n      return collector;\n    }, {})\n  );\n\n  function setPreviewString(filterIdentifier, value) {\n    let collector = { ...previewStrings };\n    collector[filterIdentifier] = value;\n    _setPreviewString(collector);\n  }\n\n  return (\n    <div className={css(appRule)}>\n      <FontSizeContext.Provider value={{ fontSize, setFontSize }}>\n        <PreviewStringsContext.Provider\n          value={{ previewStrings, setPreviewString }}\n        >\n          <PreviewedOutputFontsContext.Provider\n            value={{ previewedOutputFonts, setPreviewedOutputFonts }}\n          >\n            <FontVariationsContext.Provider\n              value={{ fontVariations, setFontVariations }}\n            >\n              <ContentVisibilityContext.Provider value={setContentIsVisible}>\n                <Nav setNavHeight={setNavHeight} filterRoutes={filterRoutes}/>\n                <FormInputsContext.Provider\n                  value={{ formInputValues, setFormInputValue }}\n                >\n                  <InputFontContext.Provider\n                    value={{ inputFont, setInputFont }}\n                  >\n                    <PreviewedInputFontContext.Provider\n                      value={{ previewedInputFont, setPreviewedInputFont }}\n                    >\n                      <main className={css(mainRule)}>\n                        <Routes>\n                          {data.map((route, index) => {\n                            let element;\n                            switch (route.type) {\n                              case \"filterDetailView\":\n                                element = (\n                                  <DetailView\n                                    {...route}\n                                    navHeight={navHeight}\n                                    key={route.route}\n                                  ></DetailView>\n                                );\n                                break;\n                              case \"filterListView\":\n                                element = (\n                                  <ListView\n                                    {...route}\n                                    filterRoutes={filterRoutes}\n                                    fontSize={listViewFontSize}\n                                    setFontSize={setListViewFontSize}\n                                  ></ListView>\n                                );\n                                break;\n                              default:\n                                throw new Error(\"view not matched\");\n                            }\n                            return (\n                              <Route\n                                path={route.route}\n                                element={element}\n                                key={`route_${index}`}\n                              ></Route>\n                            );\n                          })}\n                        </Routes>\n                      </main>\n                    </PreviewedInputFontContext.Provider>\n                  </InputFontContext.Provider>\n                </FormInputsContext.Provider>\n              </ContentVisibilityContext.Provider>\n              <div className={css(contentOverlayRule)}></div>\n              <div\n                ref={contentBackground}\n                className={css(contentBackgroundRule)}\n                style={{\n                  ...(isTouching\n                    ? { width: `${dragX}px` }\n                    : { height: `${cursorY}px` }),\n                }}\n              >\n                <Routes>\n                  {data.map((route, index) => {\n                    let element;\n                    switch (route.type) {\n                      case \"filterDetailView\":\n                        element = (\n                          <DetailViewOverlay\n                            {...route}\n                            navHeight={navHeight}\n                            key={route.route}\n                          />\n                        );\n                        break;\n                      default:\n                        element = (\n                          <ListViewOverlay\n                            {...route}\n                            filterRoutes={filterRoutes}\n                            navHeight={navHeight}\n                            fontSize={listViewFontSize}\n                          />\n                        );\n                    }\n                    return (\n                      <Route\n                        path={route.route}\n                        element={element}\n                        key={`overlay_route_${index}`}\n                      />\n                    );\n                  })}\n                </Routes>\n              </div>\n            </FontVariationsContext.Provider>\n          </PreviewedOutputFontsContext.Provider>\n        </PreviewStringsContext.Provider>\n      </FontSizeContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { RendererProvider } from \"react-fela\";\nimport { createRenderer } from \"fela\";\nimport extend from \"fela-plugin-extend\";\nimport embedded from \"fela-plugin-embedded\";\nimport responsiveValue from \"fela-plugin-responsive-value\";\nimport multipleSelectors from 'fela-plugin-multiple-selectors'\n\n\nconst getMediaQueries = (values, props) => {\n  switch(values.length) {\n   case 2:\n     return [\"@media (min-width: 570px)\"];\n    default:\n      return []\n  }\n};\n\nconst renderer = createRenderer({\n  plugins: [\n    extend(),\n    embedded(),\n    multipleSelectors(),\n    responsiveValue(getMediaQueries, {\n      padding: true,\n      margin: true,\n      display: true,\n      fontSize: true,\n      gridTemplateColumns: true,\n      width: true\n    }),\n  ],\n});\n\nconst resetStyle = {\n  padding: 0,\n  margin: 0,\n  boxSizing: \"border-box\",\n  textDecoration: \"None\",\n  fontFamily: \"inherit\",\n  fontSize: \"inherit\",\n  color: \"inherit\",\n  \"-webkit-font-smoothing\": \"antialiased\",\n  \"-moz-osx-font-smoothing\": \"grayscale\",\n};\nrenderer.renderStatic(resetStyle, \"html,body,div,input,label,a,button\");\n\nconst bodyStyle = {\n  fontFamily: \"'Times New Roman', serif\",\n  maxWidth: \"100vw\",\n  minHeight: \"100vh\",\n  position: \"relative\",\n};\nrenderer.renderStatic(bodyStyle, \"body\");\n\nconst htmlStyle = {\n  overflowX: \"hidden\",\n};\nrenderer.renderStatic(htmlStyle, \"html\");\n\nconst ulStyle = {\n  margin: 0,\n  listStyleType: \"None\",\n  padding: 0,\n};\nrenderer.renderStatic(ulStyle, \"ul\");\n\nconst buttonStyle = {\n  whiteSpace: \"nowrap\",\n  background: \"transparent\",\n  outline: \"none\",\n  border: \"none\",\n  appearance: \"none\",\n  textAlign: \"left\",\n  textDecoration: \"underline\"\n};\nrenderer.renderStatic(buttonStyle, \"button\");\n\nconst disabledStyle = {\n  color: \"gray\",\n  userSelect: \"none\",\n  pointerEvents: \"none\",\n};\nrenderer.renderStatic(disabledStyle, \"*[disabled]\");\n\nconst inputRule = {\n  minWidth: \"100px\"\n  //   -webkit-appearance: none;\n  //   border: 1px solid #000000;\n  //   height: 36px;\n  //   width: 16px;\n  //   border-radius: 3px;\n  //   background: #ffffff;\n  //   cursor: pointer;\n  //   margin-top: -14px; /* You need to specify a margin in Chrome, but in Firefox and IE it is automatic */\n  //   box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d; /* Add cool effects to your sliders! */\n  // } \n}\nrenderer.renderStatic(inputRule, \"input\");\n\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <RendererProvider renderer={renderer}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </RendererProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}