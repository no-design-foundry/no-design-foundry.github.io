{"version":3,"sources":["components/Link.js","components/Nav.js","data.js","rules/rules.js","components/FileInput.js","components/RangeInput.js","components/TextInput.js","components/FontPreview.js","components/Log.js","templates/DetailView.js","templates/DetailViewOverlay.js","templates/ListView.js","templates/ListViewOverlay.js","App.js","index.js"],"names":["linkRule","props","to","className","setContentIsVisible","useContext","ContentVisibilityContext","navigate","useNavigate","css","useFela","onClick","e","preventDefault","setTimeout","children","navRule","fontFamily","padding","position","top","menuItemRule","aboutRule","content","Nav","homeRef","useRef","setNavHeight","filterRoutes","location","useLocation","handleOnResize","height","current","getBoundingClientRect","console","log","useEffect","window","addEventListener","removeEventListener","ref","Link","pathname","map","route","index","key","title","type","filterIdentifier","numberOfLayers","layerColors","variableFontControlSliders","inputs","label","name","min","max","default","column","nth","gridColumn","fullscreenDragRule","fileIsDragged","fontSize","backgroundColor","opacity","left","right","bottom","draggedRule","FileInput","fileInputRef","dragState","useState","cursorDrag","setCursorDrag","InputFontContext","inputFont","setInputFont","setFileIsDragged","handleDrop","stopPropagation","dataTransfer","files","length","handleDragEnter","handleDragLeave","handleDragOver","clientX","clientY","document","body","querySelector","style","pointerEvents","removeProperty","onChange","target","display","accept","click","valueIndicatorRule","fontVariantNumeric","buttonRule","flexDirection","placeholderRule","visibility","inputRule","appearance","width","RangeInput","defaultValue","tag","animatable","disabled","inputRef","animationInterval","animating","setAnimating","DetailViewContext","FormInputsContext","formInputValues","setFormInputValue","currentValue","setCurrentValue","value","clearInterval","counter","start","setInterval","Math","round","offset","cos","PI","aria-label","checkValidity","parseInt","background","outline","border","TextInput","overlayItemRule","previewedFontFamily","visible","color","userSelect","transitionDuration","transitionProperty","transitionTimingFunction","extend","condition","filter","contentRule","whiteSpace","transform","containerRule","zIndex","justifyContent","alignItems","overflow","flexGrow","inListView","FontPreview","fontVariations","onMount","didMount","contentRef","setVisible","setPreviewedFontFamily","previewedChildren","setPreviewedChildren","offsetWidth","opacityTransition","fontVariationSettings","Object","keys","join","Log","lastTimeStamp","message","createContext","formWrapperRule","marginTop","formRule","gridTemplateColumns","gap","gridAutoRows","fullscreenRule","navHeight","minHeight","isProcessingWrapperRule","isProcessingRule","animationName","paddingBottom","animationDuration","animationIterationCount","animationDirection","animationPlayState","isProcessing","CancelToken","axios","DetailView","PreviewedInputFontContext","previewedInputFont","setPreviewedInputFont","logContent","setLogContent","setPreviewedOutputFonts","PreviewedOutputFontsContext","FontSizeContext","setFontSize","isMounted","fontSizeRef","cancel","undefined","PreviewStringsContext","previewStrings","setPreviewString","previewedString","setPreviewedString","getFormVisible","setGetFormVisible","setIsProcessing","FontVariationsContext","setFontVariations","now","Date","formData","FormData","append","forEach","method","cancelToken","c","url","data","headers","then","response","warnings","outputFontsArrays","fonts","fontBase64","Uint8Array","from","atob","charCodeAt","Promise","all","arrayBuffer","inputFontBuffer","FontFace","outputFontArray","outputFonts","add","outputFont","family","catch","thrown","detail","isCancel","finally","sendRequest","Provider","contentWidth","bodyWidth","clientWidth","scale","letter","animationDelay","input","Boolean","Error","DetailViewOverlay","previewedOutputFonts","layerColor","fontPreviewContainerRule","ListView","handleOnFontPreviewMount","filterRoute","ListViewOverlay","_formInputValues","reduce","collector","inputCollector","contentOverlayRule","contentIsVisible","transition","contentBackgroundRule","isTouching","transitionWidth","appRule","touchAction","App","_setFormInputsValue","setIsTouching","setTouchAction","setTransitionWidth","cursorY","setCursorY","dragX","setDragX","listViewFontSize","setListViewFontSize","contentBackground","lastTouchTimestamp","Array","_setPreviewedOutputFonts","slider","_setFontVariations","handleCursorY","pageY","handleTouchStart","touches","pageX","handleTouchEnd","handleTouchCancel","handleOnTouchMove","_setPreviewString","element","path","renderer","createRenderer","plugins","embedded","multipleSelectors","responsiveValue","values","margin","renderStatic","boxSizing","textDecoration","maxWidth","overflowX","listStyleType","textAlign","minWidth","ReactDOM","render","RendererProvider","StrictMode","getElementById"],"mappings":"yNAKMA,EAAW,iBAAO,CACtB,8BAA+B,gBAGlB,WAAUC,GACvB,IAAQC,EAAkBD,EAAlBC,GAAIC,EAAcF,EAAdE,UACNC,EAAsBC,qBAAWC,IACjCC,EAAWC,cACVC,EAAOC,cAAPD,IAWP,OAAO,kBAAC,IAAD,CAAMP,GAAIA,EAAIS,QATrB,SAAoBC,GAClBA,EAAEC,iBACFT,GAAoB,GACpBU,YAAW,WACTP,EAASL,GACTE,GAAoB,KACnB,MAGqCD,WAAWM,EAAIT,GAAWG,IAAYF,EAAMc,WCnBlFC,EAAU,iBAAO,CACrBC,WAAY,OACZC,QAAS,OACTC,SAAU,SACVC,IAAK,IAGDC,EAAe,iBAAO,IAGtBC,EAAY,iBAAO,CACvB,UAAW,CACTC,QAAS,UA8CEC,MA1Cf,SAAavB,GACX,IAAMwB,EAAUC,mBACRC,EAA+B1B,EAA/B0B,aAAcC,EAAiB3B,EAAjB2B,aACdnB,EAAQC,cAARD,IACFoB,EAAWC,cAEjB,SAASC,IACP,IAAQC,EAAWP,EAAQQ,QAAQC,wBAA3BF,OACRG,QAAQC,IAAIJ,GACZL,EAAaK,EAAS,IAexB,OAZAK,qBAAU,WACRN,MACC,CAACF,IAEJQ,qBAAU,WAGR,OAFAN,IACAO,OAAOC,iBAAiB,SAAUR,GAC3B,WACLO,OAAOE,oBAAoB,SAAUT,MAEtC,IAGD,yBAAK5B,UAAWM,EAAIO,IAClB,4BACE,wBAAIyB,IAAKhB,EAAStB,UAAWM,EAAIY,IAC/B,kBAACqB,EAAD,CAAMxC,GAAI,KAAV,qBACA,kBAACwC,EAAD,CAAMxC,GAAI,SAAUC,UAAWM,EAAIa,IAAnC,UAEqB,MAAtBO,EAASc,UACRf,EAAagB,KAAI,SAACC,EAAOC,GAAR,OACf,wBAAIC,IAAG,cAASD,GAAS3C,UAAWM,EAAIY,IACtC,kBAACqB,EAAD,CAAMxC,GAAI2C,EAAMA,OAAQA,EAAMG,cCvD7B,GACb,CACEC,KAAM,iBACNJ,MAAO,KAET,CACEI,KAAM,mBACND,MAAO,YACPE,iBAAkB,YAClBL,MAAO,aACPM,eAAgB,EAChBC,YAAa,CAAC,OAAQ,QACtBC,2BAA4B,CAAC,CAC3B,MAAS,WACT,IAAO,OACP,IAAO,EACP,IAAO,IACP,QAAW,IAEbC,OAAQ,CACN,CACEL,KAAM,QACNM,MAAO,QACPC,KAAM,QACNC,IAAK,EACLC,IAAK,IACLC,QAAS,MAIf,CACEV,KAAM,mBACND,MAAO,QACPE,iBAAkB,aAClBL,MAAO,cACPM,eAAgB,EAChBC,YAAa,CAAC,QACdE,OAAQ,CACN,CACEL,KAAM,QACNM,MAAO,aACPC,KAAM,aACNC,IAAK,GACLC,IAAK,IACLC,QAAS,O,QC5CJC,EAAS,SAACC,GAAD,OAAS,iBAAO,CAClCC,WAAYD,KCKVE,EAAqB,SAAC,GAAD,EAAGC,cAAH,MAAwB,CACjD7C,SAAU,QACV8C,SAAU,MACV7C,IAAK,EACL8C,gBAAiB,OACjBC,QAAS,EACTC,KAAM,EACNC,MAAO,EACPC,OAAQ,IAGJC,EAAc,iBAAO,CACzBpD,SAAU,aAiHGqD,MAlGf,SAAmBvE,GAAQ,IAAD,EAChBsD,EAAUtD,EAAVsD,MACFkB,EAAe/C,mBACfgD,EAAYhD,mBAClB,EAAsCiD,mBAAS,IAA/C,mBAAQC,EAAR,KAAoBC,EAApB,KACA,EAAoCxE,qBAAWyE,IAAvCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,aACnB,EAA0CL,oBAAS,GAAnD,mBAAOX,EAAP,KAAsBiB,EAAtB,KACQxE,EAAQC,YAAQ,CAAEsD,kBAAlBvD,IAaR,SAASyE,EAAWtE,GAAI,IAAD,EACrBA,EAAEC,iBACFD,EAAEuE,kBACmC,KAAjC,UAAAvE,EAAEwE,oBAAF,eAAgBC,MAAMC,UACxBN,EAAapE,EAAEwE,aAAaC,MAAM,IAClCX,EAAUzC,QAAU,MAEtBgD,GAAiB,GAGnB,SAASM,EAAgB3E,GACvB8D,EAAUzC,QAAU,UACpBrB,EAAEC,iBACFD,EAAEuE,kBACFF,GAAiB,GAGnB,SAASO,EAAgB5E,GACG,WAAtB8D,EAAUzC,UACZrB,EAAEC,iBACFD,EAAEuE,kBACFF,GAAiB,GACjBP,EAAUzC,QAAU,QAIxB,SAASwD,EAAe7E,GACtB,IAAiBwD,EAAuBxD,EAAhC8E,QAAwBtE,EAAQR,EAAjB+E,QACvBd,EAAc,CAACT,OAAMhD,QACrBR,EAAEC,iBACFD,EAAEuE,kBAyBJ,OAlEA9C,qBAAU,WACJ2B,GACF4B,SAASC,KAAKC,cAAc,SAASC,MAAMC,cAAgB,OAC3DtB,EAAUzC,QAAU,UAEpB2D,SAASC,KACNC,cAAc,SACdC,MAAME,eAAe,oBAEzB,CAACjC,IA6CJ3B,qBAAU,WAKR,OAJAuD,SAASC,KAAKtD,iBAAiB,YAAagD,GAC5CK,SAASC,KAAKtD,iBAAiB,YAAaiD,GAC5CI,SAASC,KAAKtD,iBAAiB,WAAYkD,GAC3CG,SAASC,KAAKtD,iBAAiB,OAAQ2C,GAChC,WACLU,SAASC,KAAKrD,oBAAoB,YAAagD,GAC/CI,SAASC,KAAKrD,oBAAoB,YAAa+C,GAC/CK,SAASC,KAAKrD,oBAAoB,WAAYiD,GAC9CG,SAASC,KAAKrD,oBAAoB,OAAQ0C,MAE3C,IAED,oCACE,2BAAO/E,UAAWM,EAAImD,EAAO,KAAML,GACnC,2BACEd,IAAKgC,EACLxB,KAAK,OACLiD,SA5BN,SAAwBtF,GACQ,IAA1BA,EAAEuF,OAAOd,MAAMC,QACjBN,EAAapE,EAAEuF,OAAOd,MAAM,KA2B1BU,MAAO,CAAEK,QAAS,QAClBC,OAAO,yBAET,4BAAQlG,UAAWM,EAAImD,EAAO,IAAKjD,QA1BvC,SAAuBC,GACrB6D,EAAaxC,QAAQqE,UAyBnB,iBACGvB,QADH,IACGA,OADH,EACGA,EAAWvB,YADd,QACsB,0BAGrBQ,GACC,yBAAK7D,UAAWM,EAAIsD,IAClB,0BAAM5D,UAAWM,EAAI8D,GAAcwB,MAAOnB,GAA1C,cCtHJ2B,EAAqB,iBAAO,CAChCC,mBAAoB,eACpBtF,QAAS,WAGLuF,EAAa,iBAAO,CACxBzE,OAAQ,OAERoE,QAAS,OACTM,cAAe,WAGXC,EAAkB,iBAAO,CAC7BC,WAAY,WAGRC,EAAY,iBAAO,CACvB,0DAA2D,CACzDC,WAAY,OACZ,qBAAsB,OACtBC,MAAO,OACP/E,OAAQ,UAgGGgF,MA5Ff,SAAoB/G,GAClB,IACEsD,EASEtD,EATFsD,MACAC,EAQEvD,EARFuD,KACAC,EAOExD,EAPFwD,IACAC,EAMEzD,EANFyD,IAEAuD,GAIEhH,EALFiH,IAKEjH,EAJFgH,cACAf,EAGEjG,EAHFiG,SAPF,EAUIjG,EAFFkH,kBARF,WAUIlH,EADFmH,gBATF,SAWMC,EAAW3F,mBACX4F,EAAoB5F,mBAC1B,EAAkCiD,qBAAlC,mBAAO4C,EAAP,KAAkBC,EAAlB,KACQtE,EAAqB7C,qBAAWoH,GAAhCvE,iBACR,EAA+C7C,qBAAWqH,GAAlDC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,kBACzB,EAAwCjD,mBACtCgD,EAAgBzE,GAAkBM,IADpC,mBAAOqE,EAAP,KAAqBC,EAArB,KAGQrH,EAAQC,YAAQ,CAAC6G,cAAjB9G,IA8CR,OA5CA4B,qBAAU,WACRgF,EAASpF,QAAQ8F,MAAQF,GAAgBZ,EACpCY,GACHC,EAAgBb,KAEjB,IAEH5E,qBAAU,WACJgF,EAASpF,QAAQ8F,QAAUF,IAC7BR,EAASpF,QAAQ8F,MAAQF,EACrB3B,GACFA,EAAS2B,MAGZ,CAACA,IA+BF,oCACE,2BAAO1H,UAAWM,EAAImD,EAAO,KAAML,GAClC4D,GACC,4BAAQhH,UAAWM,EAAIgG,EAAY7C,EAAO,IAAKjD,QAtBrD,WACE,IAAkB,IAAd4G,EACFS,cAAcV,EAAkBrF,aAC3B,CACL,IAAIgG,EAAU,EACRC,EAAQL,EACdP,EAAkBrF,QAAUkG,aAAY,WACtC,IAAMhH,GAAY+G,EAAQD,GAAW,IAC/BF,EAAQK,KAAKC,MAAMlH,EAAW,IAAM,EAAIA,EAAW,IAAOA,EAAW,KAC3E2G,EAAgBC,GAChB,IAAMO,EACJ,IAAOF,KAAKG,IAAKH,KAAKI,GAAKrH,EAAY,KAAO,GAAK,EAAK,EAC1D8G,GAAWK,IACV,IAAO,IAEZd,GAAcD,KAQR,8BAAOA,EAAY,OAAS,QAC5B,0BAAMpH,UAAWM,EAAIkG,GAAkB8B,aAAW,UAAlD,QACA,0BAAMtI,UAAWM,EAAIkG,GAAkB8B,aAAW,UAAlD,SAGJ,2BACEhG,IAAK4E,EACLlH,UAAWM,EAAIoG,EAAWjD,EAAO,IACjCX,KAAK,QACLiD,SA1CN,SAAwBtF,GACtB,GAAIyG,EAASpF,QAAQyG,gBAAiB,CACpC,IAAMX,EAAQY,SAAS/H,EAAEuF,OAAO4B,OAChCD,EAAgBC,GACZvE,GACFoE,EAAkB1E,EAAkBM,EAAMuE,KAsC1CtE,IAAKA,EACLC,IAAKA,EACL0D,SAAUA,IAEZ,yBAAKjH,UAAWM,EAAI8F,GAAqBa,SAAUA,GAChDS,KCjHHhB,EAAY,iBAAO,CACvB+B,WAAY,cACZC,QAAS,OACTC,OAAQ,SAkCKC,MA/Bf,SAAmB9I,GACjB,IAAQsD,EAA4CtD,EAA5CsD,MAAO0D,EAAqChH,EAArCgH,aAAcf,EAAuBjG,EAAvBiG,SAAUkB,EAAanH,EAAbmH,SACjCC,EAAW3F,mBACTjB,EAAQC,cAARD,IAcR,OAbA4B,qBAAU,WACJ4E,IACFI,EAASpF,QAAQ8F,MAAQd,KAE1B,IAUD,oCACE,2BAAO9G,UAAWM,EAAImD,EAAO,KAAML,GACnC,2BACEd,IAAK4E,EACLlH,UAAWM,EAAIoG,EAAWjD,EAAO,IACjCX,KAAK,OACLiD,SAdN,WACMmB,EAASpF,QAAQyG,iBACfxC,GACFA,EAASmB,EAASpF,QAAQ8F,QAY1BX,SAAUA,MC9BZ4B,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,oBAAqBC,EAAxB,EAAwBA,QAASC,EAAjC,EAAiCA,MAAjC,MAA8C,CACpEC,WAAY,OAGZC,mBAAmB,GAAD,OANM,IAMN,MAClBC,mBAAoB,kBACpBC,yBAA0B,UAC1BC,OAAQ,CACN,CACEC,UAAWR,EACXlD,MAAO,CACL9E,WAAYgI,IAGhB,CACEQ,UAAWN,EACXpD,MAAO,CACLoD,UAGJ,CACEM,WAAYP,EACZnD,MAAO,CACL5B,QAAS,EACTuF,OAAQ,oBAMVC,EAAc,iBAAO,CACzBC,WAAY,SACZC,UAAW,kBAGPC,EAAgB,SAAC,GAAD,MAAqB,CACzCC,QAAS,EACTX,WAAY,OACZpD,cAAe,OACf7E,SAAU,WACVC,IAAK,EACLgD,KAAM,EACN2C,MAAO,QACP/E,OAAQ,QACRoE,QAAS,OACT4D,eAAgB,SAChBC,WAAY,SACZC,SAAU,SACVC,SAAU,EACVX,OAAQ,CACN,CACEC,UAhBgB,EAAGW,WAiBnBrE,MAAO,CACLkE,WAAY,aACZjI,OAAQ,YA6DDqI,MAvDf,SAAqBpK,GACnB,IACEgE,EAMEhE,EANFgE,SADF,EAOIhE,EALFmK,kBAFF,SAGEnJ,EAIEhB,EAJFgB,WAHF,EAOIhB,EAHFqK,sBAJF,MAImB,GAJnB,EAKEnB,EAEElJ,EAFFkJ,MACAoB,EACEtK,EADFsK,QAEIC,EAAW9I,kBAAO,GAClB+I,EAAa/I,mBACnB,EAA8BiD,oBAAS,GAAvC,mBAAOuE,EAAP,KAAgBwB,EAAhB,KACA,EAAsD/F,mBAAS1D,GAA/D,mBAAOgI,EAAP,KAA4B0B,EAA5B,KACA,EAAkDhG,mBAAS1E,EAAMc,UAAjE,mBAAO6J,EAAP,KAA0BC,EAA1B,KAEAxI,qBAAU,YACHmI,EAASvI,SAAWsI,IACvBA,EAAQE,EAAWxI,QAAQ6I,aAC3BN,EAASvI,SAAU,KAEpB,CAACgC,EAAUsG,IAEdlI,qBAAU,WACJpB,IAAegI,IACjByB,GAAW,GACX5J,YAAW,WACT6J,EAAuB1J,GACvB4J,EAAqB5K,EAAMc,UAC3B2J,GAAW,KACVK,QAEJ,CAAC9J,IAEJ,IAAQR,EAAQC,YAAQ,CAAEwI,UAASkB,aAAYnB,sBAAqBE,UAA5D1I,IACR,OACE,yBAAKN,UAAWM,EAAIqJ,GAAgB/D,MAAO,CAAE9B,SAAS,GAAD,OAAKA,EAAL,QACnD,6BACE,yBAAK9D,UAAWM,EAAIuI,IAClB,0BACEvG,IAAKgI,EACLtK,UAAWM,EAAIkJ,GACf5D,MAAO,CACLiF,sBAAuBC,OAAOC,KAAKZ,GAChC1H,KAAI,SAACG,GAAD,iBAAaA,EAAb,aAAqBuH,EAAevH,OACxCoI,KAAK,QAGTP,O,iBCvGEQ,ICoEXC,EDpEWD,EAPf,SAAanL,GACX,IAAQsB,EAAYtB,EAAZsB,QACR,OAAO,4BACJA,EAAQqB,KAAI,SAAC0I,EAASxI,GAAV,OAAoB,wBAAIC,IAAKD,GAAQwI,QCoBzC7D,EAAoB8D,0BAE3BC,EAAkB,iBAAO,CAC7BC,UAAW,SAEPC,EAAW,iBAAO,CACtB1F,cAAe,MACfI,QAAS,OACTuF,oBAAqB,CACnB,mCACA,8BAEF5E,MAAO,CAAC,OAAQ,QAChB6E,IAAK,UACLC,aAAc,QACdjC,WAAY,SACZK,WAAY,SACZ3F,OAAQ,EACRF,KAAM,IAGF0H,EAAiB,SAAC,GAAD,EAAGC,UAAH,MAAoB,CACzCC,UAAU,QACV5K,IAAK,EACLD,SAAU,WACV4F,MAAO,OACPX,QAAS,OACTM,cAAe,SACfxF,QAAS,OACT8E,cAAe,SAGXiG,EAA0B,iBAAO,CACrC7F,QAAS,OACT6D,WAAY,WACZvD,cAAe,QAGXwF,EAAmB,SAAC,GAAD,MAAuB,CAC9C9F,QAAS,QACT+F,cAAe,CACb,KAAM,CAAEC,cAAe,QACvB,MAAO,CAAEA,cAAe,KACxB,OAAQ,CAAEA,cAAe,MAE3BC,kBAAmB,KACnBC,wBAAyB,WACzBC,mBAAoB,oBACpBC,mBAVuB,EAAGC,aAUS,aAAe,WAG9CC,EAAcC,IAAMD,YAmOXE,MAhOf,SAAoB3M,GAClB,IN5EoB8H,EM4EZzE,EACNrD,EADMqD,OAAQD,EACdpD,EADcoD,2BAA4BH,EAC1CjD,EAD0CiD,iBAAkB6I,EAC5D9L,EAD4D8L,UAE9D,EAAsD1L,qBACpDwM,IADMC,EAAR,EAAQA,mBAAoBC,EAA5B,EAA4BA,sBAG5B,EAAsCpI,mBAAS,IAA/C,mBAAQqI,EAAR,KAAoBC,EAApB,KACQC,EAA4B7M,qBAAW8M,IAAvCD,wBACAvF,EAAoBtH,qBAAWqH,GAA/BC,gBACR,EAAkCtH,qBAAW+M,IAArCnJ,EAAR,EAAQA,SAAUoJ,EAAlB,EAAkBA,YACVtI,EAAc1E,qBAAWyE,IAAzBC,UACFuI,EAAY5L,kBAAO,GACnB6L,EAAc7L,iBAAO,KACrB8L,EAAS9L,sBAAO+L,GACtB,EAA6CpN,qBAC3CqN,IADMC,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,iBAGxB,EAA8CjJ,mBAC5CgJ,EAAezK,IADjB,mBAAO2K,EAAP,KAAwBC,EAAxB,KAGA,EAA4CnJ,oBAAS,GAArD,mBAAOoJ,EAAP,KAAuBC,EAAvB,KACA,GAAwCrJ,oBAAS,GAAjD,qBAAO8H,GAAP,MAAqBwB,GAArB,MACA,GAA8C5N,qBAC5C6N,IADM5D,GAAR,GAAQA,eAAgB6D,GAAxB,GAAwBA,kBAGhB1N,GAAQC,YAAQ,CAAEqL,YAAWU,kBAA7BhM,IAyGR,OAjCA4B,qBAAU,WACR,GAAIiL,EAAUrL,SAAW8C,EAAW,CAClC,IAAMqJ,EAAMC,KAAKD,MACjB/C,EAAgB+C,EAChBtN,YAAW,WACLsN,IAAQ/C,IACVuC,EAAiB1K,EAAkB2K,GAlE3C,WACE,IAAMS,EAAW,IAAIC,SACrBD,EAASE,OAAO,YAAazJ,GAC7BuJ,EAASE,OAAO,iBAAkBX,GAClC5C,OAAOC,KAAKvD,EAAgBzE,IAAmBuL,SAAQ,SAAC1L,GAAD,OACrDuL,EAASE,OAAOzL,EAAK4E,EAAgBzE,GAAkBH,OAEzDkL,IAAgB,GAChBtB,IAAM,CACJ+B,OAAQ,OACRC,YAAa,IAAIjC,GAAY,SAAkBkC,GAC7CpB,EAAOvL,QAAU2M,KAEnBC,IAAI,+BAAD,OAAiC3L,GACpC4L,KAAMR,EACNS,QAAS,CAAE,eAAgB,yBAE1BC,MAAK,SAACC,GACLhC,EAAcgC,EAASH,KAAKI,UAC5B,IAAMC,EAAoBF,EAASH,KAAKM,MAAMxM,KAAI,SAACyM,GAAD,OAChDC,WAAWC,KAAKC,KAAKH,IAAa,SAACT,GAAD,OAAOA,EAAEa,WAAW,SAExD,OAAOC,QAAQC,IAAI,CAAC5K,EAAU6K,cAAeT,OAE9CH,MAAK,mCAAEa,EAAF,KAAmBV,EAAnB,WAA0C,CAC9C,IAAIW,SAAJ,6BAAmCzB,KAAKD,OAASyB,GACjDV,EAAkBvM,KAChB,SAACmN,EAAiBjN,GAAlB,OACE,IAAIgN,SAAJ,8BACyBzB,KAAKD,MAD9B,YACuCtL,GACrCiN,UAIPf,MAAK,YAA+B,IAAD,mBAA5BjK,EAA4B,KAAjBiL,EAAiB,KAGlC,OAFApK,SAASwJ,MAAMa,IAAIlL,GACnBiL,EAAYpN,KAAI,SAACsN,GAAD,OAAgBtK,SAASwJ,MAAMa,IAAIC,MAC5C,CAACnL,EAAWiL,MAEpBhB,MAAK,YAA+B,IAAD,mBAA5BjK,EAA4B,KAAjBiL,EAAiB,KAClCjD,EAAsBhI,EAAUoL,QAChCjD,EACEhK,EACA8M,EAAYpN,KAAI,SAACsN,GAAD,OAAgBA,EAAWC,cAG9CC,OAAM,SAACC,GAAY,IAAD,MACL,SAAGA,QAAH,IAAGA,GAAH,UAAGA,EAAQpB,gBAAX,iBAAG,EAAkBH,YAArB,aAAG,EAAwBwB,OACnC3D,IAAM4D,SAASF,GACjBlO,QAAQC,IAAIiO,EAAO/E,SAEnBnJ,QAAQC,IAAIiO,MAGfG,SAAQ,WACPvC,IAAgB,MAYdwC,MAED,QAEJ,CAAC9I,EAAiB5C,EAAW8I,EAAiB3K,IAEjDb,qBAAU,WAER,OADAiL,EAAUrL,SAAU,EACb,WACLqL,EAAUrL,SAAU,EACpB+L,GAAkB,QAtFGP,IAAnBD,EAAOvL,UACTgM,IAAgB,GAChBT,EAAOvL,QAAQ,qBACfuL,EAAOvL,aAAUwL,MAsFlB,IAcD,kBAAChG,EAAkBiJ,SAAnB,CAA4B3I,MAAO,CAAE7E,qBACnC,yBAAK/C,UAAWM,GAAIqL,IAClB,kBAAC,EAAD,CAAa7K,WAAY6L,EAAoB7I,SAAUA,EAAUsG,QAdvE,SAAkCoG,GAChC,IAAMC,EAAYhL,SAASC,KAAKgL,YAAc,GAC9C,GAAIF,EAAeC,EAAW,CAC5B,IAAME,EAAQ7M,GAAU2M,EAAUD,GAC9BG,EAAQvD,EAAYtL,UAEtBsL,EAAYtL,QAAU6O,MASnBnD,EAAezK,IAElB,yBAAK/C,UAAWM,GAAI+K,IACfiB,IACC,yBACEtM,UAAWM,GAAIwL,IAEd,YAAI,sBAAsBrJ,KAAI,SAACmO,EAAQjO,GAAT,OAC7B,0BACEC,IAAG,kBAAaD,GAChB3C,UAAWM,GAAIyL,GAAkB,iBAAO,CACtC8E,eAAe,GAAD,OAAKlO,EAAQ,GAAb,UAGfiO,OAKT,kBAAC,EAAD,CAAKxP,QAASyL,IAChB,yBAAK7M,UAAWM,GAAIiL,IAApB,OACGrI,QADH,IACGA,OADH,EACGA,EAA4BT,KAAI,SAACqO,EAAOnO,GAAR,OAC/B,kBAAC,EAAD,CACES,MAAO0N,EAAM1N,MACbR,IAAG,kBAAaD,GAChBW,IAAKwN,EAAMxN,IACXC,IAAKuN,EAAMvN,IACXwD,IAAK+J,EAAM/J,IACXD,aAAcqD,GAAepH,GAAkB+N,EAAM/J,KACrDhB,SAAU,SAAC6B,GAAD,OACRoG,GAAkBjL,EAAkB+N,EAAM/J,IAAKa,IAEjDZ,YAAY,OAGhB,kBAAC,EAAD,CACE5D,MAAO,YACPE,IAAK,GACLC,IAAK,IACLuD,aAAc,IACdf,SAAU,SAAC6B,GAAD,OAAWsF,EAAYtF,MAEnC,kBAAC,EAAD,CACExE,MAAO,UACP0D,aAAc0G,EAAezK,GAC7BgD,SAAU,SAAC6B,GAAD,OAAW+F,EAAmB/F,IACxCX,UAAW8J,QAAQnM,KAErB,kBAAC,EAAD,CAAWxB,MAAM,cAChBD,EAAOV,KAAI,SAACqO,EAAOnO,GAClB,OAAQmO,EAAMhO,MACZ,IAAK,QACH,OACE,kBAAC,EAAD,CACEM,MAAO0N,EAAM1N,MACbC,KAAMyN,EAAMzN,KACZT,IAAG,gBAAWG,EAAX,YAA+BJ,GAClCW,IAAKwN,EAAMxN,IACXC,IAAKuN,EAAMvN,IACX0D,UAAW8J,QAAQnM,KAGzB,QACE,MAAM,IAAIoM,MAAM,2BAGtB,4BACEhR,UAAWM,GAAImD,EAAO,IACtBjD,QAAS,kBAAMqN,GAAmBD,IAClC3G,UAAW8J,QAAQnM,IAElBgJ,EAAiB,OAAS,OAG5BA,GACC,oCACE,wBAAI5N,UAAWM,GAAImD,EAAO,eN7RpBmE,EM6RyC,ON7R/B,iBAAO,CACnChB,MAAOgB,QM6RK,kBAAC,EAAD,CAAWxE,MAAO,cAClB,4BAAQpD,UAAWM,GAAImD,EAAO,OAA9B,YACA,kBAAC,EAAD,CAAWL,MAAO,UAClB,4BAAQpD,UAAWM,GAAImD,EAAO,OAA9B,cC3RVkG,EAAgB,SAAC,GAAD,IAAGiC,EAAH,EAAGA,UAAH,MAAoB,CACxCN,UAAU,GAAD,OAAKM,EAAL,QA+BIqF,MA3Bf,SAA2BnR,GACzB,IAAQiD,EAA6CjD,EAA7CiD,iBAAkB6I,EAA2B9L,EAA3B8L,UAAW3I,EAAgBnD,EAAhBmD,YAC7Ba,EAAa5D,qBAAW+M,IAAxBnJ,SACA0J,EAAmBtN,qBAAWqN,IAA9BC,eACA0D,EAAyBhR,qBAAW8M,IAApCkE,qBACA/G,EAAmBjK,qBAAW6N,IAA9B5D,eACA7J,EAAQC,YAAQ,CAAEqL,cAAlBtL,IAER,OACE,yBAAKN,UAAWM,EAAIqJ,IAClB,6BACG1G,EAAYR,KAAI,SAAC0O,EAAYxO,GAAb,OACjB,kBAAC,EAAD,CACEC,IAAG,UAAKG,EAAL,oBAAiCJ,GACpC7B,WAAYoQ,EAAqBnO,GAAkBJ,GACnDmB,SAAUA,EACVqG,eAAgBA,EAAepH,GAC/BiG,MAAOmI,GAEN3D,EAAezK,UC7BbqO,EAA2B,SAAC,GAAD,IAAGtN,EAAH,EAAGA,SAAH,MAAmB,CACzD9C,SAAU,WACVa,OAAO,GAAD,OAAgB,IAAXiC,EAAL,QAwCOuN,MArCf,SAAkBvR,GAChB,IAAQ2B,EAAwC3B,EAAxC2B,aAAcqC,EAA0BhE,EAA1BgE,SAAUoJ,EAAgBpN,EAAhBoN,YACxB5M,EAAQC,YAAQ,CAAEuD,aAAlBxD,IACF8M,EAAc7L,iBAAO,KAE3B,SAAS+P,EAAyBd,GAChC,IAAMC,EAAYhL,SAASC,KAAKgL,YAAc,GAC9C,GAAIF,EAAeC,EAAW,CAC5B,IAAME,EAAQ7M,GAAY2M,EAAYD,GAClCG,EAAQvD,EAAYtL,UACtBoL,EAAYyD,GACZvD,EAAYtL,QAAU6O,IAK5B,OACE,4BACGlP,EAAagB,KAAI,SAAC8O,EAAa5O,GAAd,OAChB,wBAAIC,IAAG,oBAAe2O,EAAY7O,QAChC,kBAACH,EAAD,CAAMxC,GAAIwR,EAAY7O,OACpB,yBAAK1C,UAAWM,EAAI8Q,IAClB,kBAAC,EAAD,CACEtN,SAAUA,EACVmG,YAAY,EACZG,QAASkH,GAERC,EAAY1O,eC/BvB8G,EAAgB,SAAC,GAAD,IAAEiC,EAAF,EAAEA,UAAF,MAAkB,CACpCN,UAAU,GAAD,OAAKM,EAAL,QAuBE4F,MAlBf,SAAyB1R,GACvB,IAAQ2B,EAAsC3B,EAAtC2B,aAAcmK,EAAwB9L,EAAxB8L,UAAW9H,EAAahE,EAAbgE,SACzBxD,EAAQC,YAAQ,CAACqL,YAAW9H,aAA5BxD,IACR,OACE,wBAAIN,UAAWM,EAAIqJ,IAChBlI,EAAagB,KAAI,SAAC8O,GAAD,OAChB,wBAAI3O,IAAG,uBAAkB2O,EAAY7O,QACnC,kBAACH,EAAD,CAAMxC,GAAIwR,EAAY7O,OACpB,yBAAK1C,UAAWM,EAAI8Q,IAClB,kBAAC,EAAD,CAAatN,SAAUA,EAAUmG,YAAY,GAAOsH,EAAY1O,eCTjE0E,EAAoB6D,0BACpBzG,GAAmByG,0BACnBmC,GAAwBnC,0BACxB6B,GAAkB7B,0BAClBjL,GAA2BiL,0BAC3BsB,GAA4BtB,0BAC5B4B,GAA8B5B,0BAC9B2C,GAAwB3C,0BAE/B3J,GAAekN,EAAKpF,QAAO,SAAC7G,GAAD,MAA0B,qBAAfA,EAAMI,QAC5C2O,GAAmBhQ,GAAaiQ,QAAO,SAACC,EAAWJ,GAQvD,OAPAI,EAAUJ,EAAYxO,kBAAoBwO,EAAYpO,OAAOuO,QAC3D,SAACE,EAAgBd,GAEf,OADAc,EAAed,EAAMzN,MAAQyN,EAAMtN,QAC5BoO,IAET,IAEKD,IACN,IAEGE,GAAqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,iBAAkBlG,EAArB,EAAqBA,UAArB,MAAsC,CAC/D5K,SAAU,QACVmD,OAAQ,EACRyC,MAAO,OACP/E,OAAQ,MACRoC,KAAM,EACNwE,WAAY,OACZsJ,WAAW,UAAD,OAAY,IAAZ,MACVrI,UAAW,gBACXN,yBAA0B0I,EACtB,4BACA,4BACJzI,OAAQ,CACN,CACEC,WAAYwI,EACZlM,MAAO,CACL/D,OAAO,eAAD,OAAiB+J,EAAjB,YAMRoG,GAAwB,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAH,MAAsC,CAClErI,QAAS,EACT3I,IAAK,EACLgD,KAAM,EACN2C,MAAO,OACP5F,SAAU,WACVyH,WAAY,OACZsB,SAAU,SACVL,UAAW,gBACXL,OAAQ,CACN,CACEC,UAAW2I,EACXrM,MAAO,CACL/D,OAAQ,SAGZ,CACEyH,WAAY2I,EACZrM,MAAO,CACLgB,MAAO,SAGX,CACE0C,UAvBwB,EAAe4I,gBAwBvCtM,MAAO,CACLmM,WAAY,0BAMdI,GAAU,SAAC,GAAD,MAAsB,CACpCrO,SAAU,CAAC,OAAQ,QACnBuF,OAAQ,CACN,CACEC,WAJU,EAAG8I,YAKbxM,MAAO,CACLwM,YAAa,YA0PNC,OApPf,WACE,MAAkC7N,mBAAS,MAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACA,EAAoDL,mBAAS,MAA7D,mBAAOmI,EAAP,KAA2BC,EAA3B,KACA,EAAgCpI,mBAASiB,SAASC,KAAKgL,YAAc,GAArE,mBAAO5M,EAAP,KAAiBoJ,EAAjB,KACA,EAA+C1I,mBAASiN,IAAxD,mBAAOjK,EAAP,KAAwB8K,EAAxB,KACA,EAAgD9N,oBAAS,GAAzD,mBAAOsN,EAAP,KAAyB7R,EAAzB,KACA,EAAkCuE,mBAAS,GAA3C,mBAAOoH,EAAP,KAAkBpK,EAAlB,KACA,EAAoCgD,oBAAS,GAA7C,mBAAOyN,EAAP,KAAmBM,EAAnB,KACA,EAAsC/N,oBAAS,GAA/C,mBAAO4N,EAAP,KAAoBI,EAApB,KACA,EAA8ChO,oBAAS,GAAvD,mBAAO0N,EAAP,KAAwBO,EAAxB,KACA,EAA8BjO,mBAAS,GAAvC,mBAAOkO,EAAP,KAAgBC,EAAhB,KACA,EAA0BnO,mBAAS,GAAnC,oBAAOoO,GAAP,MAAcC,GAAd,MACA,GAAgDrO,mBAAS,KAAzD,qBAAOsO,GAAP,MAAyBC,GAAzB,MACA,GAAoDvO,mBAAS,KAA7D,qBAGQlE,IAHR,YAGgBC,YAAQ,CACtBuR,mBACAlG,YACAwG,cACAH,aACAC,oBALM5R,KAQF0S,GAAoBzR,mBACpB0R,GAAqB1R,iBAAO2M,KAAKD,OAEvC,GAAyDzJ,mBACvD/C,GAAaiQ,QAAO,SAACC,EAAWJ,GAI9B,OAHAI,EAAUJ,EAAYxO,kBAAoBmQ,MACxC3B,EAAYvO,gBAEP2O,IACN,KANL,qBAAOT,GAAP,MAA6BiC,GAA7B,MAYA,GAA6C3O,mBAC3C/C,GAAaiQ,QAAO,SAACC,EAAWJ,GAQ9B,OAPIA,EAAYrO,6BACdyO,EAAUJ,EAAYxO,kBACpBwO,EAAYrO,2BAA2BwO,QAAO,SAACC,EAAWyB,GAExD,OADAzB,EAAUyB,EAAOrM,KAAOqM,EAAO5P,QACxBmO,IACN,KAEAA,IACN,KAVL,qBAAOxH,GAAP,MAAuBkJ,GAAvB,MA+BA,SAASC,GAAc7S,GACjByN,KAAKD,MAAQgF,GAAmBnR,QAAU,MAC5C2Q,GAAmB,GACnBF,GAAc,GACdI,EAAWlS,EAAE8S,QAIjB,SAASC,GAAiB/S,GACxBwS,GAAmBnR,QAAUoM,KAAKD,MAClCwE,GAAmB,GACnBF,GAAc,GACW,IAArB9R,EAAEgT,QAAQtO,QACZ0N,GAASpS,EAAEgT,QAAQ,GAAGC,OAI1B,SAASC,GAAelT,IAExB,SAASmT,GAAkBnT,IAE3B,SAASoT,GAAkBpT,GAEzB,GADAgS,GAAmB,GACM,IAArBhS,EAAEgT,QAAQtO,OAAc,CACZ1E,EAAEgT,QAAQ,GACxBZ,GAASpS,EAAEgT,QAAQ,GAAGC,YAEtBlB,GAAe,GAInBtQ,qBAAU,WAMR,OALAC,OAAOC,iBAAiB,YAAakR,IACrCnR,OAAOC,iBAAiB,aAAcoR,IACtCrR,OAAOC,iBAAiB,YAAayR,IACrC1R,OAAOC,iBAAiB,WAAYuR,IACpCxR,OAAOC,iBAAiB,cAAewR,IAChC,WACLzR,OAAOE,oBAAoB,YAAaiR,IACxCnR,OAAOE,oBAAoB,aAAcmR,IACzCrR,OAAOE,oBAAoB,YAAawR,IACxC1R,OAAOE,oBAAoB,WAAYsR,IACvCxR,OAAOE,oBAAoB,cAAeuR,OAE3C,IAEH,OAA4CpP,mBAC1C/C,GAAaiQ,QAAO,SAACC,EAAWJ,GAE9B,OADAI,EAAUJ,EAAYxO,kBAAoBwO,EAAY1O,MAC/C8O,IACN,KAJL,qBAAOnE,GAAP,MAAuBsG,GAAvB,MAaA,OACE,yBAAK9T,UAAWM,GAAI6R,KAClB,kBAAClF,GAAgBsD,SAAjB,CAA0B3I,MAAO,CAAE9D,WAAUoJ,gBAC3C,kBAACK,GAAsBgD,SAAvB,CACE3I,MAAO,CAAE4F,kBAAgBC,iBAVjC,SAA0B1K,EAAkB6E,GAC1C,IAAI+J,EAAS,eAAQnE,IACrBmE,EAAU5O,GAAoB6E,EAC9BkM,GAAkBnC,MASZ,kBAAC3E,GAA4BuD,SAA7B,CACE3I,MAAO,CAAEsJ,wBAAsBnE,wBApFzC,SAAiChK,EAAkB6E,GACjD,IAAI+J,EAAY,GAChBA,EAAU5O,GAAoB6E,EAC9BuL,GAAyB,2BAAKjC,IAAyBS,OAmF/C,kBAAC5D,GAAsBwC,SAAvB,CACE3I,MAAO,CAAEuC,kBAAgB6D,kBAjFrC,SAA2BjL,EAAkBgE,EAAKa,GAChD,IAAI+J,EAAS,eAAQxH,IACrBwH,EAAU5O,GAAkBgE,GAAOyB,SAASZ,GAC5CyL,GAAmB1B,MAgFT,kBAACxR,GAAyBoQ,SAA1B,CAAmC3I,MAAO3H,GACxC,kBAAC,EAAD,CAAKuB,aAAcA,EAAcC,aAAcA,KAC/C,kBAAC8F,EAAkBgJ,SAAnB,CACE3I,MAAO,CAAEJ,kBAAiBC,kBAhF1C,SAA2B1E,EAAkBM,EAAMuE,GACjD,IAAI+J,EAAS,eAAQnK,GACrBmK,EAAU5O,GAAkBM,GAAQuE,EACpC0K,EAAoBX,MA+EN,kBAAChN,GAAiB4L,SAAlB,CACE3I,MAAO,CAAEhD,YAAWC,iBAEpB,kBAAC6H,GAA0B6D,SAA3B,CACE3I,MAAO,CAAE+E,qBAAoBC,0BAE7B,0BAAM5M,UAAWM,IApHpB,iBAAO,OAqHF,kBAAC,IAAD,KACGqO,EAAKlM,KAAI,SAACC,EAAOC,GAChB,IAAIoR,EACJ,OAAQrR,EAAMI,MACZ,IAAK,mBACHiR,EACE,kBAAC,EAAD,iBACMrR,EADN,CAEEkJ,UAAWA,EACXhJ,IAAKF,EAAMA,SAGf,MACF,IAAK,iBACHqR,EACE,kBAAC,EAAD,iBACMrR,EADN,CAEEjB,aAAcA,GACdqC,SAAUgP,GACV5F,YAAa6F,MAGjB,MACF,QACE,MAAM,IAAI/B,MAAM,oBAEpB,OACE,kBAAC,IAAD,CACEgD,KAAMtR,EAAMA,MACZqR,QAASA,EACTnR,IAAG,gBAAWD,cAUhC,yBAAK3C,UAAWM,GAAIuR,MACpB,yBACEvP,IAAK0Q,GACLhT,UAAWM,GAAI0R,IACfpM,MAAK,eACCqM,EACA,CAAErL,MAAM,GAAD,OAAKgM,GAAL,OACP,CAAE/Q,OAAO,GAAD,OAAK6Q,EAAL,SAGd,kBAAC,IAAD,KACG/D,EAAKlM,KAAI,SAACC,EAAOC,GAChB,IAAIoR,EACJ,OAAQrR,EAAMI,MACZ,IAAK,mBACHiR,EACE,kBAAC,EAAD,iBACMrR,EADN,CAEEkJ,UAAWA,EACXhJ,IAAKF,EAAMA,SAGf,MACF,QACEqR,EACE,kBAAC,EAAD,iBACMrR,EADN,CAEEjB,aAAcA,GACdmK,UAAWA,EACX9H,SAAUgP,MAIlB,OACE,kBAAC,IAAD,CACEkB,KAAMtR,EAAMA,MACZqR,QAASA,EACTnR,IAAG,wBAAmBD,gB,sDCnTxCsR,GAAWC,aAAe,CAC9BC,QAAS,CACP9K,eACA+K,eACAC,eACAC,cAdoB,SAACC,EAAQzU,GAC/B,OAAOyU,EAAOpP,QACb,KAAK,EACH,MAAO,CAAC,6BACT,QACE,MAAO,MASwB,CAC/BpE,SAAS,EACTyT,QAAQ,EACRvO,SAAS,EACTnC,UAAU,EACV0H,qBAAqB,EACrB5E,OAAO,OAgBbqN,GAASQ,aAXU,CACjB1T,QAAS,EACTyT,OAAQ,EACRE,UAAW,aACXC,eAAgB,OAChB7T,WAAY,UACZgD,SAAU,UACVkF,MAAO,UACP,yBAA0B,cAC1B,0BAA2B,aAEK,sCAQlCiL,GAASQ,aANS,CAChB3T,WAAY,2BACZ8T,SAAU,QACV/I,UAAW,QACX7K,SAAU,YAEqB,QAKjCiT,GAASQ,aAHS,CAChBI,UAAW,UAEoB,QAOjCZ,GAASQ,aALO,CACdD,OAAQ,EACRM,cAAe,OACf/T,QAAS,GAEoB,MAW/BkT,GAASQ,aATW,CAClBhL,WAAY,SACZhB,WAAY,cACZC,QAAS,OACTC,OAAQ,OACRhC,WAAY,OACZoO,UAAW,OACXJ,eAAgB,aAEiB,UAOnCV,GAASQ,aALa,CACpBzL,MAAO,OACPC,WAAY,OACZpD,cAAe,QAEoB,eAerCoO,GAASQ,aAbS,CAChBO,SAAU,SAYqB,SAIjCC,IAASC,OACP,kBAAC,IAAD,KACE,kBAACC,GAAA,EAAD,CAAkBlB,SAAUA,IAC1B,kBAAC,IAAMmB,WAAP,KACE,kBAAC,GAAD,SAIN3P,SAAS4P,eAAe,W","file":"static/js/main.fd938d5f.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { ContentVisibilityContext } from \"../App\";\n\nconst linkRule = () => ({\n  \"-webkit-tap-highlight-color\": \"transparent\"\n})\n\nexport default function (props) {\n  const { to, className } = props;\n  const setContentIsVisible = useContext(ContentVisibilityContext);\n  const navigate = useNavigate();\n  const {css} = useFela()\n\n  function delayAndGo(e) {\n    e.preventDefault();\n    setContentIsVisible(false);\n    setTimeout(() => {\n      navigate(to);\n      setContentIsVisible(true);\n    }, 350);\n  }\n\n  return <Link to={to} onClick={delayAndGo} className={css(linkRule), className}>{props.children}</Link>;\n}\n","import React, { useEffect, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { useLocation } from \"react-router\";\nimport Link from \"./Link\";\n\nconst navRule = () => ({\n  fontFamily: \"test\",\n  padding: \"10px\",\n  position: \"sticky\",\n  top: 0,\n});\n\nconst menuItemRule = () => ({\n})\n\nconst aboutRule = () => ({\n  \":before\": {\n    content: '\", \"'\n  }\n})\n\nfunction Nav(props) {\n  const homeRef = useRef();\n  const { setNavHeight, filterRoutes } = props;\n  const { css } = useFela();\n  const location = useLocation();\n\n  function handleOnResize() {\n    const { height } = homeRef.current.getBoundingClientRect();\n    console.log(height)\n    setNavHeight(height + 20);\n  }\n\n  useEffect(() => {\n    handleOnResize()\n  }, [location])\n\n  useEffect(() => {\n    handleOnResize();\n    window.addEventListener(\"resize\", handleOnResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleOnResize);\n    };\n  }, []);\n\n  return (\n    <nav className={css(navRule)}>\n      <ul>\n        <li ref={homeRef} className={css(menuItemRule)}>\n          <Link to={\"/\"}>no design foundry</Link>\n          <Link to={\"/about\"} className={css(aboutRule)}>about</Link>\n        </li>\n        {location.pathname !== \"/\" &&\n          filterRoutes.map((route, index) => (\n            <li key={`nav_${index}`} className={css(menuItemRule)}>\n              <Link to={route.route}>{route.title}</Link>\n            </li>\n          ))}\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","export default [\n  {\n    type: \"filterListView\",\n    route: \"/\",\n  },\n  {\n    type: \"filterDetailView\",\n    title: \"Rotorizer\",\n    filterIdentifier: \"rotorizer\",\n    route: \"/rotorizer\",\n    numberOfLayers: 2,\n    layerColors: [\"gray\", \"#000\"],\n    variableFontControlSliders: [{\n      \"label\": \"rotation\",\n      \"tag\": \"RTTX\",\n      \"min\": 0,\n      \"max\": 360,\n      \"default\": 0,\n    }],\n    inputs: [\n      {\n        type: \"range\",\n        label: \"depth\",\n        name: \"depth\",\n        min: 2,\n        max: 600,\n        default: 20,\n      },\n    ],\n  },\n  {\n    type: \"filterDetailView\",\n    title: \"Rastr\",\n    filterIdentifier: \"rasterizer\",\n    route: \"/rasterizer\",\n    numberOfLayers: 1,\n    layerColors: [\"#000\"],\n    inputs: [\n      {\n        type: \"range\",\n        label: \"resolution\",\n        name: \"resolution\",\n        min: 10,\n        max: 150,\n        default: 20,\n      },\n    ],\n  }\n];\n","export const column = (nth) => () => ({\n    gridColumn: nth\n  })\n\nexport const width = (value) => () => ({\n    width: value\n  })","import React, { useContext, useRef, useEffect, useState } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { InputFontContext } from \"../App\";\nimport { column } from \"../rules/rules\";\n\n\nconst fullscreenDragRule = ({ fileIsDragged }) => ({\n  position: \"fixed\",\n  fontSize: \"4em\",\n  top: 0,\n  backgroundColor: \"#fff\",\n  opacity: 1,\n  left: 0,\n  right: 0,\n  bottom: 0,\n});\n\nconst draggedRule = () => ({\n  position: \"absolute\",\n  // transform: \"translate(-50%, -50%)\"\n});\n\nconst dropItRule = () => ({\n  display: [\"none\", \"block\"]\n})\n\nconst buttonRule = () => ({\n  height: \"100%\",\n  display: \"flex\",\n  alignItems: \"center\",\n  fontSize: \".9em\"\n})\n\nfunction FileInput(props) {\n  const { label } = props;\n  const fileInputRef = useRef();\n  const dragState = useRef();\n  const [ cursorDrag, setCursorDrag ] = useState({});\n  const { inputFont, setInputFont } = useContext(InputFontContext);\n  const [fileIsDragged, setFileIsDragged] = useState(false);\n  const { css } = useFela({ fileIsDragged });\n\n  useEffect(() => {\n    if (fileIsDragged) {\n      document.body.querySelector(\"#root\").style.pointerEvents = \"none\";\n      dragState.current = \"moving\";\n    } else {\n      document.body\n        .querySelector(\"#root\")\n        .style.removeProperty(\"pointer-events\");\n    }\n  }, [fileIsDragged]);\n\n  function handleDrop(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.dataTransfer?.files.length === 1) {\n      setInputFont(e.dataTransfer.files[0]);\n      dragState.current = null;\n    }\n    setFileIsDragged(false);\n  }\n\n  function handleDragEnter(e) {\n    dragState.current = \"entered\";\n    e.preventDefault();\n    e.stopPropagation();\n    setFileIsDragged(true);\n  }\n\n  function handleDragLeave(e) {\n    if (dragState.current === \"moving\") {\n      e.preventDefault();\n      e.stopPropagation();\n      setFileIsDragged(false);\n      dragState.current = \"left\";\n    }\n  }\n\n  function handleDragOver(e) {\n    const { clientX: left, clientY: top } = e;\n    setCursorDrag({left, top});\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  function handleOnChange(e) {\n    if (e.target.files.length === 1) {\n      setInputFont(e.target.files[0]);\n    }\n  }\n\n  function handleOnClick(e) {\n    fileInputRef.current.click();\n  }\n\n  useEffect(() => {\n    document.body.addEventListener(\"dragenter\", handleDragEnter);\n    document.body.addEventListener(\"dragleave\", handleDragLeave);\n    document.body.addEventListener(\"dragover\", handleDragOver);\n    document.body.addEventListener(\"drop\", handleDrop);\n    return () => {\n      document.body.removeEventListener(\"dragleave\", handleDragLeave);\n      document.body.removeEventListener(\"dragenter\", handleDragEnter);\n      document.body.removeEventListener(\"dragover\", handleDragOver);\n      document.body.removeEventListener(\"drop\", handleDrop);\n    };\n  }, []);\n  return (\n    <>\n      <label className={css(column(1))}>{label}</label>\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        onChange={handleOnChange}\n        style={{ display: \"none\" }}\n        accept=\".ttf,.otf,woff,woff2\"\n      ></input>\n      <button className={css(column(3))} onClick={handleOnClick}>\n        {inputFont?.name ?? \"select file or drop it\"}\n      </button>\n      {/* <span className={css(dropItRule, column(\"4 / span 2\"))}> or drop it</span> */}\n      {fileIsDragged && (\n        <div className={css(fullscreenDragRule)}>\n          <span className={css(draggedRule)} style={cursorDrag}>Drop it</span>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default FileInput;\n","import React, { useEffect, useRef, useContext, useState } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { FormInputsContext } from \"../App\";\nimport { column } from \"../rules/rules\";\nimport { DetailViewContext } from \"../templates/DetailView\";\n\nconst valueIndicatorRule = () => ({\n  fontVariantNumeric: \"tabular-nums\",\n  padding: \"0 .2em\",\n});\n\nconst buttonRule = () => ({\n  height: \"100%\",\n  // overflow: \"hidden\",\n  display: \"flex\",\n  flexDirection: \"column\",\n})\n\nconst placeholderRule = () => ({\n  visibility: \"hidden\"\n})\n\nconst inputRule = () => ({\n  '::-webkit-slider-thumb, ::-moz-range-thumb, ::-ms-thumb': {\n    appearance: \"none\",\n    \"-webkit-appearance\": \"none\",\n    width: \"20px\",\n    height: \"20px\"\n  }\n})\n\nfunction RangeInput(props) {\n  const {\n    label,\n    name,\n    min,\n    max,\n    tag,\n    defaultValue,\n    onChange,\n    animatable = false,\n    disabled = false,\n  } = props;\n  const inputRef = useRef();\n  const animationInterval = useRef();\n  const [animating, setAnimating] = useState();\n  const { filterIdentifier } = useContext(DetailViewContext);\n  const { formInputValues, setFormInputValue } = useContext(FormInputsContext);\n  const [currentValue, setCurrentValue] = useState(\n    formInputValues[filterIdentifier][name]\n  );\n  const { css } = useFela({animating});\n\n  useEffect(() => {\n    inputRef.current.value = currentValue || defaultValue;\n    if (!currentValue) {\n      setCurrentValue(defaultValue);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (inputRef.current.value !== currentValue) {\n      inputRef.current.value = currentValue;\n      if (onChange) {\n        onChange(currentValue);\n      }\n    }\n  }, [currentValue]);\n\n  function handleOnChange(e) {\n    if (inputRef.current.checkValidity()) {\n      const value = parseInt(e.target.value);\n      setCurrentValue(value);\n      if (name) {\n        setFormInputValue(filterIdentifier, name, value);\n      }\n    }\n  }\n\n  function handleOnClickAnimate() {\n    if (animating === true) {\n      clearInterval(animationInterval.current);\n    } else {\n      let counter = 0;\n      const start = currentValue;\n      animationInterval.current = setInterval(() => {\n        const position = (start + counter) % 720;\n        const value = Math.round(position - 360 < 0 ? position : 360 - (position % 360))\n        setCurrentValue(value)\n        const offset =\n          10 - ((Math.cos((Math.PI * position) / 180) + 1) / 2) * 9;\n        counter += offset;\n      }, 1000 / 30);\n    }\n    setAnimating(!animating);\n  }\n\n  return (\n    <>\n      <label className={css(column(1))}>{label}</label>\n      {animatable && (\n        <button className={css(buttonRule, column(2))} onClick={handleOnClickAnimate}>\n          <span>{animating ? \"stop\" : \"play\"}</span>\n          <span className={css(placeholderRule)} aria-label=\"hidden\">play</span>\n          <span className={css(placeholderRule)} aria-label=\"hidden\">stop</span>\n        </button>\n      )}\n      <input\n        ref={inputRef}\n        className={css(inputRule, column(3))}\n        type=\"range\"\n        onChange={handleOnChange}\n        min={min}\n        max={max}\n        disabled={disabled}\n      ></input>\n      <div className={css(valueIndicatorRule)} disabled={disabled}>\n        {currentValue}\n      </div>\n    </>\n  );\n}\n\nexport default RangeInput;\n","import React, { useEffect, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { column } from \"../rules/rules\";\n\nconst inputRule = () => ({\n  background: \"transparent\",\n  outline: \"none\",\n  border: \"none\"\n})\n\nfunction TextInput(props) {\n  const { label, defaultValue, onChange, disabled } = props;\n  const inputRef = useRef();\n  const { css } = useFela();\n  useEffect(() => {\n    if (defaultValue) {\n      inputRef.current.value = defaultValue;\n    }\n  }, []);\n\n  function handleOnChange() {\n    if (inputRef.current.checkValidity()) {\n      if (onChange) {\n        onChange(inputRef.current.value);\n      }\n    }\n  }\n  return (\n    <>\n      <label className={css(column(1))}>{label}</label>\n      <input\n        ref={inputRef}\n        className={css(inputRule, column(3))}\n        type=\"text\"\n        onChange={handleOnChange}\n        disabled={disabled}\n      ></input>\n    </>\n  );\n}\n\nexport default TextInput;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\n\nconst opacityTransition = 350;\n\nconst overlayItemRule = ({ previewedFontFamily, visible, color }) => ({\n  userSelect: \"none\",\n  // position: \"absolute\",\n  // transform: \"translate(-50%, -50%)\",\n  transitionDuration: `${opacityTransition}ms`,\n  transitionProperty: \"opacity, filter\",\n  transitionTimingFunction: \"ease-in\",\n  extend: [\n    {\n      condition: previewedFontFamily,\n      style: {\n        fontFamily: previewedFontFamily,\n      },\n    },\n    {\n      condition: color,\n      style: {\n        color\n      }\n    },\n    {\n      condition: !visible,\n      style: {\n        opacity: 0,\n        filter: \"blur(.025em)\",\n      },\n    },\n  ],\n});\n\nconst contentRule = () => ({\n  whiteSpace: \"nowrap\",\n  transform: \"translateZ(0)\"\n})\n\nconst containerRule = ({ inListView }) => ({\n  zIndex: -1,\n  userSelect: \"none\",\n  pointerEvents: \"none\",\n  position: \"absolute\",\n  top: 0,\n  left: 0,\n  width: \"100vw\",\n  height: \"100vh\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  overflow: \"hidden\",\n  flexGrow: 1,\n  extend: [\n    {\n      condition: inListView,\n      style: {\n        alignItems: \"flex-start\",\n        height: \"100%\",\n      },\n    },\n  ],\n});\n\nfunction FontPreview(props) {\n  const {\n    fontSize,\n    inListView = false,\n    fontFamily,\n    fontVariations = {},\n    color,\n    onMount\n  } = props;\n  const didMount = useRef(false);\n  const contentRef = useRef();\n  const [visible, setVisible] = useState(true);\n  const [previewedFontFamily, setPreviewedFontFamily] = useState(fontFamily);\n  const [previewedChildren, setPreviewedChildren] = useState(props.children);\n\n  useEffect(() => {\n    if (!didMount.current && onMount) {\n      onMount(contentRef.current.offsetWidth)\n      didMount.current = true\n    }    \n  }, [fontSize, onMount])\n\n  useEffect(() => {\n    if (fontFamily !== previewedFontFamily) {\n      setVisible(false);\n      setTimeout(() => {\n        setPreviewedFontFamily(fontFamily);\n        setPreviewedChildren(props.children);\n        setVisible(true);\n      }, opacityTransition + 50);\n    }\n  }, [fontFamily]);\n\n  const { css } = useFela({ visible, inListView, previewedFontFamily, color });\n  return (\n    <div className={css(containerRule)} style={{ fontSize: `${fontSize}px` }}>\n      <div>\n        <div className={css(overlayItemRule)}>\n          <span\n            ref={contentRef}\n            className={css(contentRule)}\n            style={{\n              fontVariationSettings: Object.keys(fontVariations)\n                .map((key) => `\"${key}\" ${fontVariations[key]}`)\n                .join(\", \"),\n            }}\n          >\n            {previewedChildren}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FontPreview;\n","import React from \"react\";\n\nfunction Log(props) {\n  const { content } = props;\n  return <ul>\n    {content.map((message, index) => <li key={index}>{message}</li>)}\n  </ul>;\n}\n\nexport default Log;\n","import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport {\n  FontSizeContext,\n  FormInputsContext,\n  InputFontContext,\n  PreviewedInputFontContext,\n  PreviewedOutputFontsContext,\n  PreviewStringsContext,\n  FontVariationsContext,\n} from \"../App\";\nimport FileInput from \"../components/FileInput\";\nimport RangeInput from \"../components/RangeInput\";\nimport TextInput from \"../components/TextInput\";\nimport { useFela } from \"react-fela\";\nimport { column, width } from \"../rules/rules\";\nimport FontPreview from \"../components/FontPreview\";\nimport axios from \"axios\";\nimport Log from \"../components/Log\";\n\nexport const DetailViewContext = createContext();\n\nconst formWrapperRule = () => ({\n  marginTop: \"auto\",\n});\nconst formRule = () => ({\n  pointerEvents: \"all\",\n  display: \"grid\",\n  gridTemplateColumns: [\n    \"min-content min-content auto 3ch\",\n    \"repeat(4, min-content) 3ch\",\n  ],\n  width: [\"100%\", \"auto\"],\n  gap: \"0px 6px\",\n  gridAutoRows: \"1.2em\",\n  whiteSpace: \"nowrap\",\n  alignItems: \"center\",\n  bottom: 0,\n  left: 0,\n});\n\nconst fullscreenRule = ({ navHeight }) => ({\n  minHeight: `100vh`,\n  top: 0,\n  position: \"absolute\",\n  width: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  padding: \"10px\",\n  pointerEvents: \"none\"\n});\n\nconst isProcessingWrapperRule = () => ({\n  display: \"flex\",\n  alignItems: \"flex-end\",\n  flexDirection: \"row\",\n});\n\nconst isProcessingRule = ({ isProcessing }) => ({\n  display: \"block\",\n  animationName: {\n    \"0%\": { paddingBottom: \".5em\" },\n    \"40%\": { paddingBottom: \"0\" },\n    \"100%\": { paddingBottom: \"0\" },\n  },\n  animationDuration: \"1s\",\n  animationIterationCount: \"infinite\",\n  animationDirection: \"alternate-reverse\",\n  animationPlayState: isProcessing ? \"processing\" : \"paused\",\n});\n\nconst CancelToken = axios.CancelToken;\nlet lastTimeStamp;\n\nfunction DetailView(props) {\n  const { inputs, variableFontControlSliders, filterIdentifier, navHeight } =\n    props;\n  const { previewedInputFont, setPreviewedInputFont } = useContext(\n    PreviewedInputFontContext\n  );\n  const [ logContent, setLogContent ] = useState([])\n  const { setPreviewedOutputFonts } = useContext(PreviewedOutputFontsContext);\n  const { formInputValues } = useContext(FormInputsContext);\n  const { fontSize, setFontSize } = useContext(FontSizeContext);\n  const { inputFont } = useContext(InputFontContext);\n  const isMounted = useRef(false);\n  const fontSizeRef = useRef(200)\n  const cancel = useRef(undefined);\n  const { previewStrings, setPreviewString } = useContext(\n    PreviewStringsContext\n  );\n  const [previewedString, setPreviewedString] = useState(\n    previewStrings[filterIdentifier]\n  );\n  const [getFormVisible, setGetFormVisible] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const { fontVariations, setFontVariations } = useContext(\n    FontVariationsContext\n  );\n  const { css } = useFela({ navHeight, isProcessing });\n\n  function cancelRequest() {\n    if (cancel.current !== undefined) {\n      setIsProcessing(false);\n      cancel.current(\"cancelled by user\");\n      cancel.current = undefined;\n    }\n  }\n\n\n\n  function sendRequest() {\n    const formData = new FormData();\n    formData.append(\"font_file\", inputFont);\n    formData.append(\"preview_string\", previewedString);\n    Object.keys(formInputValues[filterIdentifier]).forEach((key) =>\n      formData.append(key, formInputValues[filterIdentifier][key])\n    );\n    setIsProcessing(true);\n    axios({\n      method: \"post\",\n      cancelToken: new CancelToken(function executor(c) {\n        cancel.current = c;\n      }),\n      url: `http://0.0.0.0:5000/filters/${filterIdentifier}`,\n      data: formData,\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    })\n      .then((response) => {\n        setLogContent(response.data.warnings)\n        const outputFontsArrays = response.data.fonts.map((fontBase64) =>\n          Uint8Array.from(atob(fontBase64), (c) => c.charCodeAt(0))\n        );\n        return Promise.all([inputFont.arrayBuffer(), outputFontsArrays]);\n      })\n      .then(([inputFontBuffer, outputFontsArrays]) => [\n        new FontFace(`preview-input-font-${Date.now()}`, inputFontBuffer),\n        outputFontsArrays.map(\n          (outputFontArray, index) =>\n            new FontFace(\n              `preview-output-font-${Date.now()}-${index}`,\n              outputFontArray\n            )\n        ),\n      ])\n      .then(([inputFont, outputFonts]) => {\n        document.fonts.add(inputFont);\n        outputFonts.map((outputFont) => document.fonts.add(outputFont));\n        return [inputFont, outputFonts];\n      })\n      .then(([inputFont, outputFonts]) => {\n        setPreviewedInputFont(inputFont.family);\n        setPreviewedOutputFonts(\n          filterIdentifier,\n          outputFonts.map((outputFont) => outputFont.family)\n        );\n      })\n      .catch((thrown) => {\n        const detail = thrown?.response?.data?.detail ?? null\n        if (axios.isCancel(thrown)) {\n          console.log(thrown.message);\n        } else {\n          console.log(thrown);\n        }\n      })\n      .finally(() => {\n        setIsProcessing(false);\n      });\n  }\n\n  // form auto-submit\n  useEffect(() => {\n    if (isMounted.current && inputFont) {\n      const now = Date.now();\n      lastTimeStamp = now;\n      setTimeout(function () {\n        if (now === lastTimeStamp) {\n          setPreviewString(filterIdentifier, previewedString);\n          sendRequest();\n        }\n      }, 500);\n    }\n  }, [formInputValues, inputFont, previewedString, filterIdentifier]);\n\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n      setGetFormVisible(false);\n      cancelRequest();\n    };\n  }, []);\n\n  function handleOnFontPreviewMount(contentWidth) {\n    const bodyWidth = document.body.clientWidth - 20\n    if (contentWidth > bodyWidth) {\n      const scale = fontSize*(bodyWidth/contentWidth)\n      if (scale < fontSizeRef.current) {\n        // setFontSize(scale)\n        fontSizeRef.current = scale\n      }\n    }\n  }\n\n  return (\n    <DetailViewContext.Provider value={{ filterIdentifier }}>\n      <div className={css(fullscreenRule)}>\n        <FontPreview fontFamily={previewedInputFont} fontSize={fontSize} onMount={handleOnFontPreviewMount}>\n          {previewStrings[filterIdentifier]}\n        </FontPreview>\n        <div className={css(formWrapperRule)}>\n            {isProcessing && (\n              <div\n                className={css(isProcessingWrapperRule)}\n              >\n                {[...\"loading...........\"].map((letter, index) => (\n                  <span\n                    key={`loading-${index}`}\n                    className={css(isProcessingRule, () => ({\n                      animationDelay: `${index / 10}s`,\n                    }))}\n                  >\n                    {letter}\n                  </span>\n                ))}\n              </div>\n            )}\n            <Log content={logContent}/>\n          <div className={css(formRule)}>\n            {variableFontControlSliders?.map((input, index) => (\n              <RangeInput\n                label={input.label}\n                key={`font_ui_${index}`}\n                min={input.min}\n                max={input.max}\n                tag={input.tag}\n                defaultValue={fontVariations[filterIdentifier][input.tag]}\n                onChange={(value) =>\n                  setFontVariations(filterIdentifier, input.tag, value)\n                }\n                animatable={true}\n              />\n            ))}\n            <RangeInput\n              label={\"font size\"}\n              min={20}\n              max={400}\n              defaultValue={200}\n              onChange={(value) => setFontSize(value)}\n            />\n            <TextInput\n              label={\"preview\"}\n              defaultValue={previewStrings[filterIdentifier]}\n              onChange={(value) => setPreviewedString(value)}\n              disabled={!Boolean(inputFont)}\n            ></TextInput>\n            <FileInput label=\"font file\"></FileInput>\n            {inputs.map((input, index) => {\n              switch (input.type) {\n                case \"range\":\n                  return (\n                    <RangeInput\n                      label={input.label}\n                      name={input.name}\n                      key={`input_${filterIdentifier}_${index}`}\n                      min={input.min}\n                      max={input.max}\n                      disabled={!Boolean(inputFont)}\n                    ></RangeInput>\n                  );\n                default:\n                  throw new Error(\"component not found\");\n              }\n            })}\n            <button\n              className={css(column(1))}\n              onClick={() => setGetFormVisible(!getFormVisible)}\n              disabled={!Boolean(inputFont)}\n            >\n              {getFormVisible ? \"hide\" : \"get\"}\n            </button>\n            {/* <button onClick={() => cancelRequest()}>cancel</button> */}\n            {getFormVisible && (\n              <>\n                <hr className={css(column(\"1 / span 5\"), width(\"100%\"))} />\n                <TextInput label={\"font name\"} />\n                <button className={css(column(\"5\"))}>download</button>\n                <TextInput label={\"email\"} />\n                <button className={css(column(\"5\"))}>send</button>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </DetailViewContext.Provider>\n  );\n}\n\nexport default DetailView;\n","import React, { useContext } from \"react\";\nimport { useFela } from \"react-fela\";\nimport {\n  FontSizeContext,\n  FontVariationsContext,\n  PreviewedOutputFontsContext,\n  PreviewStringsContext,\n} from \"../App\";\nimport FontPreview from \"../components/FontPreview\";\n\nconst containerRule = ({ navHeight }) => ({\n  marginTop: `${navHeight}px`,\n});\n\n\nfunction DetailViewOverlay(props) {\n  const { filterIdentifier, navHeight, layerColors } = props;\n  const { fontSize } = useContext(FontSizeContext);\n  const { previewStrings } = useContext(PreviewStringsContext);\n  const { previewedOutputFonts } = useContext(PreviewedOutputFontsContext);\n  const { fontVariations } = useContext(FontVariationsContext)\n  const { css } = useFela({ navHeight });\n\n  return (\n    <div className={css(containerRule)}>\n      <div>\n        {layerColors.map((layerColor, index) => (\n        <FontPreview \n          key={`${filterIdentifier}-overlay-${index}`}\n          fontFamily={previewedOutputFonts[filterIdentifier][index]}\n          fontSize={fontSize}\n          fontVariations={fontVariations[filterIdentifier]}\n          color={layerColor}\n        >\n          {previewStrings[filterIdentifier]}\n        </FontPreview>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default DetailViewOverlay;\n","import React, { useState, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\nimport FontPreview from \"../components/FontPreview\";\nimport Link from \"../components/Link\";\n\nexport const fontPreviewContainerRule = ({ fontSize }) => ({\n  position: \"relative\",\n  height: `${fontSize * 1.1}px`,\n});\n\nfunction ListView(props) {\n  const { filterRoutes, fontSize, setFontSize } = props;\n  const { css } = useFela({ fontSize });\n  const fontSizeRef = useRef(200);\n\n  function handleOnFontPreviewMount(contentWidth) {\n    const bodyWidth = document.body.clientWidth - 20;\n    if (contentWidth > bodyWidth) {\n      const scale = fontSize * (bodyWidth / contentWidth);\n      if (scale < fontSizeRef.current) {\n        setFontSize(scale);\n        fontSizeRef.current = scale;\n      }\n    }\n  }\n\n  return (\n    <ul>\n      {filterRoutes.map((filterRoute, index) => (\n        <li key={`list-view-${filterRoute.route}`}>\n          <Link to={filterRoute.route}>\n            <div className={css(fontPreviewContainerRule)}>\n              <FontPreview\n                fontSize={fontSize}\n                inListView={true}\n                onMount={handleOnFontPreviewMount}\n              >\n                {filterRoute.title}\n              </FontPreview>\n            </div>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ListView;\n","import React from \"react\";\nimport { useFela } from \"react-fela\";\nimport FontPreview from \"../components/FontPreview\";\nimport Link from \"../components/Link\";\nimport { fontPreviewContainerRule } from \"./ListView\";\n\nconst containerRule = ({navHeight}) => ({\n    marginTop: `${navHeight}px`\n})\n\n\n\nfunction ListViewOverlay(props) {\n  const { filterRoutes, navHeight, fontSize } = props;\n  const { css } = useFela({navHeight, fontSize})\n  return (\n    <ul className={css(containerRule)}>\n      {filterRoutes.map((filterRoute) => (\n        <li key={`overlay-link-${filterRoute.route}`}>\n          <Link to={filterRoute.route}>\n            <div className={css(fontPreviewContainerRule)}>\n              <FontPreview fontSize={fontSize} inListView={true}>{filterRoute.title}</FontPreview>\n            </div>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ListViewOverlay;\n","import React, { createContext, useState, useEffect, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { Route, Routes } from \"react-router\";\nimport Link from \"./components/Link\";\nimport Nav from \"./components/Nav\";\nimport data from \"./data\";\n// const data = require(\"./data\");\nimport DetailView from \"./templates/DetailView\";\nimport DetailViewOverlay from \"./templates/DetailViewOverlay\";\nimport ListView from \"./templates/ListView\";\nimport ListViewOverlay from \"./templates/ListViewOverlay\";\n\nexport const FormInputsContext = createContext();\nexport const InputFontContext = createContext();\nexport const PreviewStringsContext = createContext();\nexport const FontSizeContext = createContext();\nexport const ContentVisibilityContext = createContext();\nexport const PreviewedInputFontContext = createContext();\nexport const PreviewedOutputFontsContext = createContext();\nexport const FontVariationsContext = createContext();\n\nconst filterRoutes = data.filter((route) => route.type === \"filterDetailView\");\nconst _formInputValues = filterRoutes.reduce((collector, filterRoute) => {\n  collector[filterRoute.filterIdentifier] = filterRoute.inputs.reduce(\n    (inputCollector, input) => {\n      inputCollector[input.name] = input.default;\n      return inputCollector;\n    },\n    {}\n  );\n  return collector;\n}, {});\n\nconst contentOverlayRule = ({ contentIsVisible, navHeight }) => ({\n  position: \"fixed\",\n  bottom: 0,\n  width: \"100%\",\n  height: \"0px\",\n  left: 0,\n  background: \"#ccc\",\n  transition: `height ${350}ms`,\n  transform: \"translateZ(0)\",\n  transitionTimingFunction: contentIsVisible\n    ? \"cubic-bezier(.55,0,1,.45)\"\n    : \"cubic-bezier(0,.55,.45,1)\",\n  extend: [\n    {\n      condition: !contentIsVisible,\n      style: {\n        height: `calc(100% - ${navHeight}px)`,\n      },\n    },\n  ],\n});\n\nconst contentBackgroundRule = ({ isTouching, transitionWidth }) => ({\n  zIndex: -1,\n  top: 0,\n  left: 0,\n  width: \"100%\",\n  position: \"absolute\",\n  background: \"#eee\",\n  overflow: \"hidden\",\n  transform: \"translateZ(0)\",\n  extend: [\n    {\n      condition: isTouching,\n      style: {\n        height: \"100%\",\n      },\n    },\n    {\n      condition: !isTouching,\n      style: {\n        width: \"100%\",\n      },\n    },\n    {\n      condition: transitionWidth,\n      style: {\n        transition: \"width .15s ease-in\",\n      },\n    },\n  ],\n});\n\nconst appRule = ({ touchAction }) => ({\n  fontSize: [\"22px\", \"18px\"],\n  extend: [\n    {\n      condition: !touchAction,\n      style: {\n        touchAction: \"none\",\n      },\n    },\n  ],\n});\n\nfunction App() {\n  const [inputFont, setInputFont] = useState(null);\n  const [previewedInputFont, setPreviewedInputFont] = useState(null);\n  const [fontSize, setFontSize] = useState(document.body.clientWidth / 4);\n  const [formInputValues, _setFormInputsValue] = useState(_formInputValues);\n  const [contentIsVisible, setContentIsVisible] = useState(true);\n  const [navHeight, setNavHeight] = useState(0);\n  const [isTouching, setIsTouching] = useState(false);\n  const [touchAction, setTouchAction] = useState(true);\n  const [transitionWidth, setTransitionWidth] = useState(false);\n  const [cursorY, setCursorY] = useState(0);\n  const [dragX, setDragX] = useState(0);\n  const [listViewFontSize, setListViewFontSize] = useState(200);\n  const [detailViewFontSize, setDetailViewFontSize] = useState(200)\n\n\n  const { css } = useFela({\n    contentIsVisible,\n    navHeight,\n    touchAction,\n    isTouching,\n    transitionWidth,\n  });\n\n  const contentBackground = useRef();\n  const lastTouchTimestamp = useRef(Date.now());\n\n  const [previewedOutputFonts, _setPreviewedOutputFonts] = useState(\n    filterRoutes.reduce((collector, filterRoute) => {\n      collector[filterRoute.filterIdentifier] = Array(\n        filterRoute.numberOfLayers\n      );\n      return collector;\n    }, {})\n  );\n\n  const mainRule = () => ({\n  })\n\n  const [fontVariations, _setFontVariations] = useState(\n    filterRoutes.reduce((collector, filterRoute) => {\n      if (filterRoute.variableFontControlSliders) {\n        collector[filterRoute.filterIdentifier] =\n          filterRoute.variableFontControlSliders.reduce((collector, slider) => {\n            collector[slider.tag] = slider.default;\n            return collector;\n          }, {});\n      }\n      return collector;\n    }, {})\n  );\n\n  function setPreviewedOutputFonts(filterIdentifier, value) {\n    let collector = {};\n    collector[filterIdentifier] = value;\n    _setPreviewedOutputFonts({ ...previewedOutputFonts, ...collector });\n  }\n\n  function setFontVariations(filterIdentifier, tag, value) {\n    let collector = { ...fontVariations };\n    collector[filterIdentifier][tag] = parseInt(value);\n    _setFontVariations(collector);\n  }\n\n  function setFormInputValue(filterIdentifier, name, value) {\n    let collector = { ...formInputValues };\n    collector[filterIdentifier][name] = value;\n    _setFormInputsValue(collector);\n  }\n\n  function handleCursorY(e) {\n    if (Date.now() - lastTouchTimestamp.current > 500) {\n      setTransitionWidth(false);\n      setIsTouching(false);\n      setCursorY(e.pageY);\n    }\n  }\n\n  function handleTouchStart(e) {\n    lastTouchTimestamp.current = Date.now();\n    setTransitionWidth(true);\n    setIsTouching(true);\n    if (e.touches.length === 1) {\n      setDragX(e.touches[0].pageX);\n    }\n  }\n\n  function handleTouchEnd(e) {}\n\n  function handleTouchCancel(e) {}\n\n  function handleOnTouchMove(e) {\n    setTransitionWidth(false);\n    if (e.touches.length === 1) {\n      const touch = e.touches[0];\n      setDragX(e.touches[0].pageX);\n    } else {\n      setTouchAction(true);\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"mousemove\", handleCursorY);\n    window.addEventListener(\"touchstart\", handleTouchStart);\n    window.addEventListener(\"touchmove\", handleOnTouchMove);\n    window.addEventListener(\"touchend\", handleTouchEnd);\n    window.addEventListener(\"touchcancel\", handleTouchCancel);\n    return () => {\n      window.removeEventListener(\"mousemove\", handleCursorY);\n      window.removeEventListener(\"touchstart\", handleTouchStart);\n      window.removeEventListener(\"touchmove\", handleOnTouchMove);\n      window.removeEventListener(\"touchend\", handleTouchEnd);\n      window.removeEventListener(\"touchcancel\", handleTouchCancel);\n    };\n  }, []);\n\n  const [previewStrings, _setPreviewString] = useState(\n    filterRoutes.reduce((collector, filterRoute) => {\n      collector[filterRoute.filterIdentifier] = filterRoute.title;\n      return collector;\n    }, {})\n  );\n\n  function setPreviewString(filterIdentifier, value) {\n    let collector = { ...previewStrings };\n    collector[filterIdentifier] = value;\n    _setPreviewString(collector);\n  }\n\n  return (\n    <div className={css(appRule)}>\n      <FontSizeContext.Provider value={{ fontSize, setFontSize }}>\n        <PreviewStringsContext.Provider\n          value={{ previewStrings, setPreviewString }}\n        >\n          <PreviewedOutputFontsContext.Provider\n            value={{ previewedOutputFonts, setPreviewedOutputFonts }}\n          >\n            <FontVariationsContext.Provider\n              value={{ fontVariations, setFontVariations }}\n            >\n              <ContentVisibilityContext.Provider value={setContentIsVisible}>\n                <Nav setNavHeight={setNavHeight} filterRoutes={filterRoutes}/>\n                <FormInputsContext.Provider\n                  value={{ formInputValues, setFormInputValue }}\n                >\n                  <InputFontContext.Provider\n                    value={{ inputFont, setInputFont }}\n                  >\n                    <PreviewedInputFontContext.Provider\n                      value={{ previewedInputFont, setPreviewedInputFont }}\n                    >\n                      <main className={css(mainRule)}>\n                        <Routes>\n                          {data.map((route, index) => {\n                            let element;\n                            switch (route.type) {\n                              case \"filterDetailView\":\n                                element = (\n                                  <DetailView\n                                    {...route}\n                                    navHeight={navHeight}\n                                    key={route.route}\n                                  ></DetailView>\n                                );\n                                break;\n                              case \"filterListView\":\n                                element = (\n                                  <ListView\n                                    {...route}\n                                    filterRoutes={filterRoutes}\n                                    fontSize={listViewFontSize}\n                                    setFontSize={setListViewFontSize}\n                                  ></ListView>\n                                );\n                                break;\n                              default:\n                                throw new Error(\"view not matched\");\n                            }\n                            return (\n                              <Route\n                                path={route.route}\n                                element={element}\n                                key={`route_${index}`}\n                              ></Route>\n                            );\n                          })}\n                        </Routes>\n                      </main>\n                    </PreviewedInputFontContext.Provider>\n                  </InputFontContext.Provider>\n                </FormInputsContext.Provider>\n              </ContentVisibilityContext.Provider>\n              <div className={css(contentOverlayRule)}></div>\n              <div\n                ref={contentBackground}\n                className={css(contentBackgroundRule)}\n                style={{\n                  ...(isTouching\n                    ? { width: `${dragX}px` }\n                    : { height: `${cursorY}px` }),\n                }}\n              >\n                <Routes>\n                  {data.map((route, index) => {\n                    let element;\n                    switch (route.type) {\n                      case \"filterDetailView\":\n                        element = (\n                          <DetailViewOverlay\n                            {...route}\n                            navHeight={navHeight}\n                            key={route.route}\n                          />\n                        );\n                        break;\n                      default:\n                        element = (\n                          <ListViewOverlay\n                            {...route}\n                            filterRoutes={filterRoutes}\n                            navHeight={navHeight}\n                            fontSize={listViewFontSize}\n                          />\n                        );\n                    }\n                    return (\n                      <Route\n                        path={route.route}\n                        element={element}\n                        key={`overlay_route_${index}`}\n                      />\n                    );\n                  })}\n                </Routes>\n              </div>\n            </FontVariationsContext.Provider>\n          </PreviewedOutputFontsContext.Provider>\n        </PreviewStringsContext.Provider>\n      </FontSizeContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { RendererProvider } from \"react-fela\";\nimport { createRenderer } from \"fela\";\nimport extend from \"fela-plugin-extend\";\nimport embedded from \"fela-plugin-embedded\";\nimport responsiveValue from \"fela-plugin-responsive-value\";\nimport multipleSelectors from 'fela-plugin-multiple-selectors'\n\n\nconst getMediaQueries = (values, props) => {\n  switch(values.length) {\n   case 2:\n     return [\"@media (min-width: 570px)\"];\n    default:\n      return []\n  }\n};\n\nconst renderer = createRenderer({\n  plugins: [\n    extend(),\n    embedded(),\n    multipleSelectors(),\n    responsiveValue(getMediaQueries, {\n      padding: true,\n      margin: true,\n      display: true,\n      fontSize: true,\n      gridTemplateColumns: true,\n      width: true\n    }),\n  ],\n});\n\nconst resetStyle = {\n  padding: 0,\n  margin: 0,\n  boxSizing: \"border-box\",\n  textDecoration: \"None\",\n  fontFamily: \"inherit\",\n  fontSize: \"inherit\",\n  color: \"inherit\",\n  \"-webkit-font-smoothing\": \"antialiased\",\n  \"-moz-osx-font-smoothing\": \"grayscale\",\n};\nrenderer.renderStatic(resetStyle, \"html,body,div,input,label,a,button\");\n\nconst bodyStyle = {\n  fontFamily: \"'Times New Roman', serif\",\n  maxWidth: \"100vw\",\n  minHeight: \"100vh\",\n  position: \"relative\",\n};\nrenderer.renderStatic(bodyStyle, \"body\");\n\nconst htmlStyle = {\n  overflowX: \"hidden\",\n};\nrenderer.renderStatic(htmlStyle, \"html\");\n\nconst ulStyle = {\n  margin: 0,\n  listStyleType: \"None\",\n  padding: 0,\n};\nrenderer.renderStatic(ulStyle, \"ul\");\n\nconst buttonStyle = {\n  whiteSpace: \"nowrap\",\n  background: \"transparent\",\n  outline: \"none\",\n  border: \"none\",\n  appearance: \"none\",\n  textAlign: \"left\",\n  textDecoration: \"underline\"\n};\nrenderer.renderStatic(buttonStyle, \"button\");\n\nconst disabledStyle = {\n  color: \"gray\",\n  userSelect: \"none\",\n  pointerEvents: \"none\",\n};\nrenderer.renderStatic(disabledStyle, \"*[disabled]\");\n\nconst inputRule = {\n  minWidth: \"100px\"\n  //   -webkit-appearance: none;\n  //   border: 1px solid #000000;\n  //   height: 36px;\n  //   width: 16px;\n  //   border-radius: 3px;\n  //   background: #ffffff;\n  //   cursor: pointer;\n  //   margin-top: -14px; /* You need to specify a margin in Chrome, but in Firefox and IE it is automatic */\n  //   box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d; /* Add cool effects to your sliders! */\n  // } \n}\nrenderer.renderStatic(inputRule, \"input\");\n\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <RendererProvider renderer={renderer}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </RendererProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}