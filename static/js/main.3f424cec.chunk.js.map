{"version":3,"sources":["components/Link.js","components/NavLink.js","components/Nav.js","data.js","misc.js","templates/About.js","abouts/rasterizer.js","abouts/rotorizer.js","abouts/foundry.js","components/FontPreview.js","Contexts.js","rules/rules.js","components/FileInput.js","components/RangeInput.js","components/TextInput.js","components/Log.js","templates/DetailView.js","templates/DetailViewOverlay.js","templates/ListView.js","templates/ListViewOverlay.js","App.js","index.js"],"names":["linkRule","textDecoration","props","to","className","setContentIsVisible","useContext","ContentVisibilityContext","navigate","useNavigate","css","useFela","onClick","e","preventDefault","setTimeout","children","pathname","extend","condition","style","NavLink","startsWith","location","useLocation","Link","navRule","padding","menuItemRule","aboutRule","content","subUlRule","display","flexDirection","Nav","homeRef","useRef","setNavHeight","filterRoutes","handleOnResize","height","current","getBoundingClientRect","useEffect","window","addEventListener","removeEventListener","ref","includes","map","route","index","key","title","type","filterIdentifier","numberOfLayers","layerColors","variableFontControlSliders","label","tag","min","max","default","inputs","name","dictToFontVariationSettings","dict","value","Object","keys","reduce","collector","push","join","fontVariationSettings","abouts","rasterizer","rotorizer","foundry","articleRule","maxWidth","marginTop","About","identifier","itemRule","previewedFontFamily","inListView","visible","color","marginBottom","userSelect","transitionDuration","transitionProperty","transitionTimingFunction","whiteSpace","textRendering","fontFamily","opacity","filter","containerRule","zIndex","pointerEvents","position","top","left","width","transform","alignItems","justifyContent","FontPreview","fontSize","fontVariations","contentRef","useState","setVisible","setPreviewedFontFamily","previewedChildren","setPreviewedChildren","FontPreviewMarginsContext","fontPreviewMargins","fontPreviewOpacityTransition","FormInputsContext","createContext","InputFontContext","PreviewStringsContext","PreviewedInputFontContext","PreviewedOutputFontsContext","FontVariationsContext","Contexts","inputFont","setInputFont","previewedInputFont","setPreviewedInputFont","_setFontPreviewMargins","filterRoute","Array","previewedOutputFonts","_setPreviewedOutputFonts","previewStrings","_setPreviewString","inputCollector","input","formInputValues","_setFormInputsValue","slider","_setFontVariations","isMounted","Provider","setPreviewString","setPreviewedOutputFonts","setFontVariations","parseInt","setFormInputValue","setFontPreviewMargins","margins","column","nth","gridColumn","fullscreenDragRule","fileIsDragged","backgroundColor","right","bottom","draggedRule","dropItRule","buttonRule","FileInput","fileInputRef","dragState","cursorDrag","setCursorDrag","setFileIsDragged","handleDrop","stopPropagation","dataTransfer","files","length","handleDragEnter","handleDragLeave","handleDragOver","clientX","clientY","document","body","querySelector","removeProperty","onChange","target","accept","click","valueIndicatorRule","fontVariantNumeric","borderRadius","inputRule","appearance","boxShadow","background","border","outline","cursor","RangeInput","animatable","disabled","inputRef","animationInterval","animating","DetailViewContext","currentValue","setCurrentValue","clearInterval","checkValidity","TextInput","Log","lastTimeStamp","message","getRule","textAlign","formWrapperRule","innerHeight","transition","formRule","gridTemplateColumns","gap","gridAutoRows","fullscreenRule","minHeight","isProcessingWrapperRule","isProcessingRule","animationName","paddingBottom","animationDuration","animationIterationCount","animationDirection","animationPlayState","isProcessing","CancelToken","axios","DetailView","setFontSize","setInnerHeight","formRef","previousDistance","logContent","setLogContent","cancel","undefined","previewedString","setPreviewedString","getFormVisible","setGetFormVisible","setIsProcessing","handleOnTouchMove","handleOnTouchEnd","now","Date","formData","FormData","append","forEach","method","cancelToken","c","url","data","headers","then","response","warnings","outputFontsArrays","fonts","fontBase64","Uint8Array","from","atob","charCodeAt","Promise","all","arrayBuffer","inputFontBuffer","FontFace","outputFontArray","outputFonts","add","outputFont","family","catch","thrown","isCancel","console","log","finally","sendRequest","touchAction","letter","animationDelay","Boolean","Error","navHeight","DetailViewOverlay","formHeight","layerColor","ulRule","fontPreviewContainerRule","ListView","ListViewOverlay","getMaxFontSizes","Math","ceil","text","span","createElement","innerHTML","appendChild","offsetWidth","removeChild","floor","clientWidth","getMaxFontSize","contentOverlayRule","contentIsVisible","contentBackgroundRule","isTouching","transitionWidth","transitionHeight","overflow","appRule","lineHeight","App","lastInnerWidth","innerWidth","fontSizes","setFontSizes","setIsTouching","setTransitionWidth","setTransitionHeight","values","listViewFontSize","setListViewFontSize","contentBackground","lastTouchTimestamp","handleMouseEnter","handleCursorY","clientHeight","pageY","handleTouchStart","touches","pageX","x1","x2","abs","ready","element","value_","path","renderer","createRenderer","plugins","embedded","multipleSelectors","responsiveValue","margin","renderStatic","boxSizing","fontWeight","overscrollBehavior","listStyleType","minWidth","font","extension","renderFont","ReactDOM","render","RendererProvider","StrictMode","getElementById"],"mappings":"wOAKMA,EAAW,iBAAO,CACtBC,eAAgB,SAGH,WAAUC,GACvB,IAAQC,EAAuBD,EAAvBC,GAAR,EAA+BD,EAAnBE,iBAAZ,MAAwB,GAAxB,EACMC,EAAsBC,qBAAWC,IACjCC,EAAWC,cACTC,EAAQC,cAARD,IAUR,OACE,kBAAC,IAAD,CAAMP,GAAIA,EAAIS,QAThB,SAAoBC,GAClBA,EAAEC,iBACFT,GAAoB,GACpBU,YAAW,WACTP,EAASL,GACTE,GAAoB,KACnB,MAGgCD,UAAS,UAAKM,EAAIV,GAAT,YAAsBI,IAC/DF,EAAMc,WCpBPhB,EAAW,SAAC,GAAD,IAAEiB,EAAF,EAAEA,SAAF,MAA4B,CACzCC,OAAQ,CAAC,CACLC,WAAWA,EAFF,EAAYA,WAEAF,GACrBG,MAAO,CACHnB,eAAgB,4BAiBboB,MAZf,SAAiBnB,GACb,IAAOC,EAEFD,EAFEC,GAAP,EAEKD,EAFME,iBAAX,MAAuB,GAAvB,IAEKF,EAFsBiB,iBAA3B,MAAuC,SAACF,GACpC,OAAOA,EAASK,WAAWnB,IAD/B,EAGMoB,EAAWC,cACVd,EAAOC,YAAQ,CAACM,SAAUM,EAASN,SAAUd,KAAIgB,cAAjDT,IAEP,OACI,kBAACe,EAAD,CAAMtB,GAAIA,EAAIC,UAAS,UAAKM,EAAIV,GAAT,YAAsBI,IAAcF,EAAMc,WCjBnEU,EAAU,iBAAO,CACrBC,QAAS,SAKLC,EAAe,iBAAO,IAEtBC,EAAY,iBAAO,CACvB,UAAW,CACTC,QAAS,UAIPC,EAAY,iBAAO,CACvBC,QAAS,OACTC,cAAe,QA6EFC,MA1Ef,SAAahC,GACX,IAAMiC,EAAUC,mBACRC,EAA+BnC,EAA/BmC,aAAcC,EAAiBpC,EAAjBoC,aACd5B,EAAQC,cAARD,IACFa,EAAWC,cAEjB,SAASe,IACP,IAAQC,EAAWL,EAAQM,QAAQC,wBAA3BF,OACRH,EAAaG,EAAS,IAexB,OAZAG,qBAAU,WACRJ,MACC,CAAChB,IAEJoB,qBAAU,WAGR,OAFAJ,IACAK,OAAOC,iBAAiB,SAAUN,GAC3B,WACLK,OAAOE,oBAAoB,SAAUP,MAEtC,IAGD,yBAAKnC,UAAWM,EAAIgB,IAClB,4BACE,wBAAIqB,IAAKZ,EAAS/B,UAAWM,EAAIkB,IAC/B,wBAAIxB,UAAWM,EAAIqB,IACjB,4BACE,kBAAC,EAAD,CACE5B,GAAI,IACJgB,UAAW,SAACF,GAAD,MAAc,CAAC,IAAK,UAAU+B,SAAS/B,KAFpD,uBAOsB,MAAtBM,EAASN,UAA0C,WAAtBM,EAASN,WACtC,4BACE,kBAAC,EAAD,CACEd,GAAI,SACJC,UAAWM,EAAImB,GACfV,UAAW,SAACF,GAAD,MAA2B,WAAbA,IAH3B,YAWe,MAAtBM,EAASN,UACRqB,EAAaW,KAAI,SAACC,EAAOC,GAAR,OACf,wBAAIC,IAAG,cAASD,IACd,wBAAI/C,UAAWM,EAAIqB,IACjB,wBAAI3B,UAAWM,EAAIkB,IACjB,kBAAC,EAAD,CAASzB,GAAI+C,EAAMA,OAAQA,EAAMG,QAElC9B,EAASN,SAASK,WAAW4B,EAAMA,QAClC,4BACE,kBAAC,EAAD,CACE/C,GAAE,UAAK+C,EAAMA,MAAX,UACF9C,UAAWM,EAAImB,IAFjB,kBClFL,GACb,CACEyB,KAAM,iBACNJ,MAAO,KAET,CACEI,KAAM,mBACND,MAAO,YACPE,iBAAkB,YAClBL,MAAO,aACPM,eAAgB,EAChBC,YAAa,CAAC,OAAQ,QACtBC,2BAA4B,CAC1B,CACEC,MAAO,WACPC,IAAK,OACLC,IAAK,EACLC,IAAK,IACLC,QAAS,MAGbC,OAAQ,CACN,CACEV,KAAM,QACNK,MAAO,QACPM,KAAM,QACNJ,IAAK,EACLC,IAAK,IACLC,QAAS,OAIf,CACET,KAAM,mBACND,MAAO,QACPE,iBAAkB,aAClBL,MAAO,cACPM,eAAgB,EAChBC,YAAa,CAAC,QACdO,OAAQ,CACN,CACEV,KAAM,QACNK,MAAO,aACPM,KAAM,aACNJ,IAAK,GACLC,IAAK,IACLC,QAAS,OCnCV,SAASG,EAA4BC,GAC1C,IAAMC,EAAQC,OAAOC,KAAKH,GAAMI,QAAO,SAACC,EAAWpB,GAEjD,OADAoB,EAAUC,KAAV,WAAmBrB,EAAnB,aAA2Be,EAAKf,KACzBoB,IACN,IAAIE,KAAK,MACZ,OAAON,EAAQ,CAACO,sBAAsBP,GAAS,G,YCR3CQ,EAAS,CACXC,WCRU,8pCDQEC,UERF,slBFQaC,QGRb,i8BHWRC,EAAc,iBAAO,CACvBrD,QAAS,kCACTsD,SAAU,OACV,UAAW,CACPC,UAAW,SAcJC,MAVf,SAAejF,GACX,IAAOkF,EAAclF,EAAdkF,WACA1E,EAAOC,cAAPD,IACP,OACI,6BAASN,UAAWM,EAAIsE,IACpB,kBAAC,IAAD,KAAWJ,EAAOQ,MIlBxBC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,oBAAqBC,EAAxB,EAAwBA,WAAYC,EAApC,EAAoCA,QAASC,EAA7C,EAA6CA,MAAOC,EAApD,EAAoDA,aAAcR,EAAlE,EAAkEA,UAAlE,MAAmF,CAClGS,WAAY,OACZhE,QAAS,OACTiE,mBAAmB,GAAD,OALwB,IAKxB,MAClBC,mBAAoB,kBACpBC,yBAA0B,UAC1BC,WAAY,SACZC,cAAe,gBACfN,aAAa,GAAD,OAAMH,IAAgBA,GAAcG,GAAkB,KAAQA,EAA9D,MACZR,UAAU,GAAD,OAAMK,IAAgBA,GAAcL,GAAc,KAAQA,EAA1D,MACThE,OAAQ,CACN,CACEC,UAAWmE,EACXlE,MAAO,CACL6E,WAAYX,IAGhB,CACEnE,UAAWsE,EACXrE,MAAO,CACLqE,UAGJ,CACEtE,WAAYqE,EACZpE,MAAO,CACL8E,QAAS,EACTC,OAAQ,oBAMVC,EAAgB,SAAC,GAAD,IAAGb,EAAH,EAAGA,WAAH,MAAqB,CACzCc,QAAS,EACTV,WAAY,OACZW,cAAe,OACfC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,MAAO,QACPlE,OAAQ,QACRR,QAAS,OACT2E,UAAW,gBACXC,WAAY,SACZC,eAAgBtB,EAAa,aAAe,SAC5CrE,OAAQ,CACN,CACEC,UAAWoE,EACXnE,MAAO,CACLoB,OAAQ,YA4DDsE,MAtDf,SAAqB5G,GACnB,IACE6G,EAKE7G,EALF6G,SADF,EAMI7G,EAJFqF,kBAFF,SAGEU,EAGE/F,EAHF+F,WAHF,EAMI/F,EAFF8G,sBAJF,MAImB,GAJnB,EAKEvB,EACEvF,EADFuF,MAEIwB,EAAa7E,mBACnB,EAA8B8E,oBAAS,GAAvC,mBAAO1B,EAAP,KAAgB2B,EAAhB,KACA,EAAsDD,mBAASjB,GAA/D,mBAAOX,EAAP,KAA4B8B,EAA5B,KACA,EAAkDF,mBAAShH,EAAMc,UAAjE,mBAAOqG,EAAP,KAA0BC,EAA1B,KACA,EAAoChH,qBAAWiH,GAA2BC,mBAAlE9B,EAAR,EAAQA,aAAcR,EAAtB,EAAsBA,UAEtBvC,qBAAU,WACR5B,YAAW,WACToG,GAAW,KACV,OACF,IAEHxE,qBAAU,WACJsD,IAAeX,IACjB6B,GAAW,GACXpG,YAAW,WACTqG,EAAuBnB,GACvBqB,EAAqBpH,EAAMc,UAC3BmG,GAAW,KACVM,QAEJ,CAACxB,IAEJ,IAAQvF,EAAQC,YAAQ,CACtB6E,UACAD,aACAD,sBACAG,QACAuB,iBACA9B,YACAQ,iBAPMhF,IAUR,OACE,yBAAKN,UAAWM,EAAI0F,GAAgBhF,MAAO,CAAE2F,SAAS,GAAD,OAAKA,EAAL,QACnD,0BACEhE,IAAKkE,EACL7G,UAAWM,EAAI2E,GACfjE,MAAK,eAAO8C,EAA4B8C,KAEvCK,KCzGIK,EAAoBC,0BACpBC,EAAmBD,0BACnBE,EAAwBF,0BACxBG,EAA4BH,0BAC5BI,EAA8BJ,0BAC9BK,EAAwBL,0BACxBJ,EAA4BI,0BAyI1BM,MAvIf,SAAkB/H,GAChB,MAAkCgH,mBAAS,MAA3C,mBAAOgB,EAAP,KAAkBC,EAAlB,KACA,EAAoDjB,mBAAS,MAA7D,mBAAOkB,EAAP,KAA2BC,EAA3B,KACA,EAAqDnB,mBAAS,CAC5DxB,aAAc,EACdR,UAAW,IAFb,mBAAOsC,EAAP,KAA2Bc,EAA3B,KAWA,EAAyDpB,mBACvD5E,GAAaiC,QAAO,SAACC,EAAW+D,GAI9B,OAHA/D,EAAU+D,EAAYhF,kBAAoBiF,MACxCD,EAAY/E,gBAEPgB,IACN,KANL,mBAAOiE,EAAP,KAA6BC,EAA7B,KASA,EAA4CxB,mBAC1C5E,GAAaiC,QAAO,SAACC,EAAW+D,GAE9B,OADA/D,EAAU+D,EAAYhF,kBAAoBgF,EAAYlF,MAC/CmB,IACN,KAJL,mBAAOmE,EAAP,KAAuBC,EAAvB,KAOA,EAA+C1B,mBAC7C5E,GAAaiC,QAAO,SAACC,EAAW+D,GAAiB,IAAD,EAW9C,OAVA/D,EAAU+D,EAAYhF,kBAAoB,sBACrCgF,EAAYvE,QADyB,6BAEpCuE,QAFoC,IAEpCA,OAFoC,EAEpCA,EAAa7E,kCAFuB,QAEO,KAC/Ca,QACA,SAACsE,EAAgBC,GAEf,OADAD,EAAeC,EAAM7E,MAAQ6E,EAAM/E,QAC5B8E,IAET,CAAE9B,SAAU,OAEPvC,IACN,KAbL,mBAAOuE,EAAP,KAAwBC,EAAxB,KAgBA,EAA6C9B,mBAC3C5E,GAAaiC,QAAO,SAACC,EAAW+D,GAQ9B,OAPIA,EAAY7E,6BACdc,EAAU+D,EAAYhF,kBACpBgF,EAAY7E,2BAA2Ba,QAAO,SAACC,EAAWyE,GAExD,OADAzE,EAAUyE,EAAOrF,KAAOqF,EAAOlF,QACxBS,IACN,KAEAA,IACN,KAVL,mBAAOwC,EAAP,KAAuBkC,EAAvB,KAaMC,EAAY/G,kBAAO,GA+CzB,OA5CAO,qBAAU,WACJwG,EAAU1G,UAcb,CAACyF,IAEJvF,qBAAU,WACRwG,EAAU1G,SAAU,IACnB,IA0BD,kBAACoF,EAAsBuB,SAAvB,CACEhF,MAAO,CAAEuE,iBAAgBU,iBAR7B,SAA0B9F,EAAkBa,GAC1C,IAAII,EAAS,eAAQmE,GACrBnE,EAAUjB,GAAoBa,EAC9BwE,EAAkBpE,MAOhB,kBAACuD,EAA4BqB,SAA7B,CACEhF,MAAO,CAAEqE,uBAAsBa,wBA5BrC,SAAiC/F,EAAkBa,GACjD,IAAII,EAAY,GAChBA,EAAUjB,GAAoBa,EAC9BsE,EAAyB,2BAAKD,GAAyBjE,OA2BnD,kBAACwD,EAAsBoB,SAAvB,CACEhF,MAAO,CAAE4C,iBAAgBuC,kBAzBjC,SAA2BhG,EAAkBK,EAAKQ,GAChD,IAAII,EAAS,eAAQwC,GACrBxC,EAAUjB,GAAkBK,GAAO4F,SAASpF,GAC5C8E,EAAmB1E,MAwBb,kBAACkD,EAAkB0B,SAAnB,CACEhF,MAAO,CAAE2E,kBAAiBU,kBAtBpC,SAA2BlG,EAAkBU,EAAMG,GACjD,IAAII,EAAS,eAAQuE,GACrBvE,EAAUjB,GAAkBU,GAAQG,EACpC4E,EAAoBxE,MAqBZ,kBAACoD,EAAiBwB,SAAlB,CAA2BhF,MAAO,CAAE8D,YAAWC,iBAC7C,kBAACL,EAA0BsB,SAA3B,CACEhF,MAAO,CAAEgE,qBAAoBC,0BAE7B,kBAACd,EAA0B6B,SAA3B,CAAoChF,MAAO,CAACoD,qBAAoBkC,sBAnH9E,SAA+BC,GAC7B5I,YAAW,WACTuH,EAAuBqB,KDnBe,QCqI3BzJ,EAAMc,iBC1IV4I,EAAS,SAACC,GAAD,OAAS,iBAAO,CAClCC,WAAYD,KCIVE,EAAqB,SAAC,GAAD,EAAGC,cAAH,MAAwB,CACjDzD,SAAU,QACVQ,SAAU,MACVP,IAAK,EACLyD,gBAAiB,OACjB/D,QAAS,EACTO,KAAM,EACNyD,MAAO,EACPC,OAAQ,IAIJC,EAAc,iBAAO,CACzB7D,SAAU,aAIN8D,EAAa,iBAAO,CACxBrI,QAAS,CAAC,OAAQ,YAGdsI,EAAa,iBAAO,CACxBvE,WAAY,YAuGCwE,MApGf,SAAmBrK,GAAQ,IAAD,EAChByD,EAAUzD,EAAVyD,MACF6G,EAAepI,mBACfqI,EAAYrI,mBAClB,EAAoC8E,mBAAS,IAA7C,mBAAOwD,EAAP,KAAmBC,EAAnB,KACA,EAAoCrK,qBAAWsH,GAAvCM,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,aACnB,EAA0CjB,oBAAS,GAAnD,mBAAO8C,EAAP,KAAsBY,EAAtB,KACQlK,EAAQC,YAAQ,CAAEqJ,kBAAlBtJ,IAaR,SAASmK,EAAWhK,GAAI,IAAD,EACrBA,EAAEC,iBACFD,EAAEiK,kBACmC,KAAjC,UAAAjK,EAAEkK,oBAAF,eAAgBC,MAAMC,UACxB9C,EAAatH,EAAEkK,aAAaC,MAAM,IAClCP,EAAUhI,QAAU,MAEtBmI,GAAiB,GAGnB,SAASM,EAAgBrK,GACvB4J,EAAUhI,QAAU,UACpB5B,EAAEC,iBACFD,EAAEiK,kBACFF,GAAiB,GAGnB,SAASO,EAAgBtK,GACG,WAAtB4J,EAAUhI,UACZ5B,EAAEC,iBACFD,EAAEiK,kBACFF,GAAiB,GACjBH,EAAUhI,QAAU,QAIxB,SAAS2I,EAAevK,GACtB,IAAiB4F,EAAuB5F,EAAhCwK,QAAwB7E,EAAQ3F,EAAjByK,QACvBX,EAAc,CAAElE,OAAMD,QACtB3F,EAAEC,iBACFD,EAAEiK,kBAyBJ,OAlEAnI,qBAAU,WACJqH,GACFuB,SAASC,KAAKC,cAAc,SAASrK,MAAMkF,cAAgB,OAC3DmE,EAAUhI,QAAU,UAEpB8I,SAASC,KACNC,cAAc,SACdrK,MAAMsK,eAAe,oBAEzB,CAAC1B,IA6CJrH,qBAAU,WAKR,OAJA4I,SAASC,KAAK3I,iBAAiB,YAAaqI,GAC5CK,SAASC,KAAK3I,iBAAiB,YAAasI,GAC5CI,SAASC,KAAK3I,iBAAiB,WAAYuI,GAC3CG,SAASC,KAAK3I,iBAAiB,OAAQgI,GAChC,WACLU,SAASC,KAAK1I,oBAAoB,YAAaqI,GAC/CI,SAASC,KAAK1I,oBAAoB,YAAaoI,GAC/CK,SAASC,KAAK1I,oBAAoB,WAAYsI,GAC9CG,SAASC,KAAK1I,oBAAoB,OAAQ+H,MAE3C,IAED,oCACE,2BAAOzK,UAAWM,EAAIkJ,EAAO,KAAMjG,GACnC,2BACEZ,IAAKyH,EACLlH,KAAK,OACLqI,SA5BN,SAAwB9K,GACQ,IAA1BA,EAAE+K,OAAOZ,MAAMC,QACjB9C,EAAatH,EAAE+K,OAAOZ,MAAM,KA2B1B5J,MAAO,CAAEY,QAAS,QAClB6J,OAAO,yBAET,4BAAQzL,UAAWM,EAAIkJ,EAAO,GAAIU,GAAa1J,QA1BnD,SAAuBC,GACrB2J,EAAa/H,QAAQqJ,UA0BjB,+CAAO5D,QAAP,IAAOA,OAAP,EAAOA,EAAWjE,YAAlB,QAA0B,iBAAsB,OAACiE,QAAD,IAACA,OAAD,EAACA,EAAWjE,OAAQ,0BAAM7D,UAAWM,EAAI2J,IAArB,gBAGrEL,GACC,yBAAK5J,UAAWM,EAAIqJ,IAClB,0BAAM3J,UAAWM,EAAI0J,GAAchJ,MAAOsJ,GAA1C,cCnHJqB,EAAqB,iBAAO,CAChCC,mBAAoB,eACpBrK,QAAS,WAGLsK,EAAe,CAAC,OAAQ,OACxBC,EAAY,SAAC,GAAD,IAAE3F,EAAF,EAAEA,SAAF,MAAiB,CACjC4F,WAAY,OACZ,qBAAsB,OACtB3J,OAAQ,CAAC,OAAQ,OACjByJ,eACAG,UAAW,4BACX,+CAAgD,CAC9CD,WAAY,OACZ,qBAAsB,OACtB3J,OAAQ,CAAC,OAAQ,QACjBkE,MAAO,CAAC,OAAQ,QAChB2F,WAAY,OACZJ,aAAc,OACd9F,OAAQ,mCACRmG,OAAQ,OACRC,QAAS,OACTC,OAAQ,WAGVH,WAAY,OACZ,yBAA0B,CACxBD,UAAW,4BACXC,WAAY,OACZ7J,OAAQ,OACRyJ,gBAEF,gDAAiD,CAC/CI,WAAW,2CAAD,OAA6C9F,EAA7C,mBAAgEA,EAAhE,iBACV,aAAc,CACZ8F,WAAW,2CAAD,OAA6C9F,EAA7C,mBAAgEA,EAAhE,8BAGd,aAAc,CACZ,+CAAgD,CAC9C8F,WAAY,WA6FHI,MAxFf,SAAoBvM,GAClB,IACEE,EASEF,EATFE,UACAuD,EAQEzD,EARFyD,MACAM,EAOE/D,EAPF+D,KACAJ,EAME3D,EANF2D,IACAC,EAKE5D,EALF4D,IACAM,EAIElE,EAJFkE,MACAuH,EAGEzL,EAHFyL,SAPF,GAUIzL,EAFFwM,WAEExM,EADFyM,iBATF,SAWMC,EAAWxK,mBACXyK,EAAoBzK,mBAC1B,EAAkC8E,qBAAlC,mBAAO4F,EAAP,KACQvJ,GADR,KAC6BjD,qBAAWyM,IAAhCxJ,kBACAkG,EAAsBnJ,qBAAWoH,GAAjC+B,kBACR,EAAwCvC,mBAAS9C,GAAjD,mBAAO4I,EAAP,KAAqBC,EAArB,KACQvM,EAAQC,YAAQ,CAACmM,YAAWvG,SAASyG,EAAalJ,EAAI,MAAtDpD,IA4CR,OA1CAiC,qBAAU,WAER,OADAiK,EAASnK,QAAQ2B,MAAQ4I,EAClB,WACLE,cAAcL,EAAkBpK,YAEjC,IAsCD,oCACE,2BAAOrC,UAAW,CAACM,EAAIkJ,EAAO,IAAKxJ,GAAWsE,KAAK,MAAOf,GAQ1D,2BACEZ,IAAK6J,EACLxM,UAAW,CAACM,EAAIkJ,EAAO,GAAIsC,GAAY9L,GAAWsE,KAAK,KACvDpB,KAAK,QACLqI,SAjDN,SAAwB9K,GACtB,GAAI+L,EAASnK,QAAQ0K,gBAAiB,CACpC,IAAM/I,EAAQoF,SAAS3I,EAAE+K,OAAOxH,OAChC6I,EAAgB7I,GACZuH,GACFA,EAAS9K,EAAE+K,OAAOxH,OAEhBH,GACFwF,EAAkBlG,EAAkBU,EAAMG,KA0C1CP,IAAKA,EACLC,IAAKA,EACL6I,SAAUA,IAEZ,yBAAKvM,UAAW,CAACM,EAAIqL,GAAqB3L,GAAWsE,KAAK,KAAMiI,SAAUA,GACvEK,KCjIHd,EAAY,iBAAO,CACvBG,WAAY,cACZE,QAAS,OACTD,OAAQ,SAgCKc,MA7Bf,SAAmBlN,GACjB,IAAQyD,EAAqCzD,EAArCyD,MAAOS,EAA8BlE,EAA9BkE,MAAOuH,EAAuBzL,EAAvByL,SAAUgB,EAAazM,EAAbyM,SAC1BC,EAAWxK,mBACT1B,EAAQC,cAARD,IAYR,OAXAiC,qBAAU,WACRiK,EAASnK,QAAQ2B,MAAQA,IACxB,IAUD,oCACE,2BAAOhE,UAAWM,EAAIkJ,EAAO,KAAMjG,GACnC,2BACEZ,IAAK6J,EACLxM,UAAWM,EAAIwL,EAAWtC,EAAO,IACjCtG,KAAK,OACLqI,SAdN,WACMiB,EAASnK,QAAQ0K,iBACfxB,GACFA,EAASiB,EAASnK,QAAQ2B,QAY1BuI,SAAUA,M,iBCxBHU,IC4EXC,GD5EWD,GAPf,SAAanN,GACX,IAAQ4B,EAAY5B,EAAZ4B,QACR,OAAO,4BACJA,EAAQmB,KAAI,SAACsK,EAASpK,GAAV,OAAoB,wBAAIC,IAAKD,GAAQoK,QCoBzCR,GAAoBpF,0BAE3B6F,GAAU,iBAAO,CACrBC,UAAW,UAGPC,GAAkB,SAAC,GAAD,EAAGC,YAAH,MAAsB,CAC5CxD,OAAQ,EACR5D,SAAU,QACVI,UAAW,gBACX1E,cAAe,SACfD,QAAS,OACT6E,eAAgB,WAChB+G,WAAY,wBAERC,GAAW,iBAAO,CACtBvH,cAAe,MACftE,QAAS,OACT8L,oBAAqB,CAAC,qBAAsB,8BAC5CpH,MAAO,CAAC,oBAAqB,QAC7BqH,IAAK,UACLC,aAAc,QACdjI,WAAY,SACZa,WAAY,SACZC,eAAgB,SAChBnB,aAAc,SAGVuI,GAAiB,iBAAO,CAC5BC,UAAU,OACV1H,IAAK,EACLD,SAAU,WACVG,MAAO,OACP1E,QAAS,OACTC,cAAe,SACfN,QAAS,OACT2E,cAAe,SAIX6H,GAA0B,iBAAO,CACrCnM,QAAS,OACT4E,WAAY,WACZ3E,cAAe,QAGXmM,GAAmB,SAAC,GAAD,MAAuB,CAC9CpM,QAAS,QACTqM,cAAe,CACb,KAAM,CAAEC,cAAe,QACvB,MAAO,CAAEA,cAAe,KACxB,OAAQ,CAAEA,cAAe,MAE3BC,kBAAmB,KACnBC,wBAAyB,WACzBC,mBAAoB,oBACpBC,mBAVuB,EAAGC,aAUS,aAAe,WAG9CC,GAAcC,IAAMD,YAqQXE,OAlQf,SAAoB5O,GAClB,ILpFoBkE,EKqFlBJ,EAKE9D,EALF8D,OACAN,EAIExD,EAJFwD,2BACAH,EAGErD,EAHFqD,iBACAwD,EAEE7G,EAFF6G,SACAgI,EACE7O,EADF6O,YAEF,EAAsDzO,qBACpDwH,GADMM,EAAR,EAAQA,mBAAoBC,EAA5B,EAA4BA,sBAG5B,EAAsCnB,mBAAStE,OAAO+K,aAAtD,mBAAOA,EAAP,KAAoBqB,EAApB,KACMC,EAAU7M,mBACV8M,EAAmB9M,iBAAO,MAChC,EAAoC8E,mBAAS,IAA7C,mBAAOiI,EAAP,KAAmBC,EAAnB,KACQ9F,EAA4BhJ,qBAAWyH,GAAvCuB,wBACAP,EAAoBzI,qBAAWoH,GAA/BqB,gBAEAb,GADY9F,iBAAO2E,GACLzG,qBAAWsH,GAAzBM,WACFiB,EAAY/G,kBAAO,GACnBiN,EAASjN,sBAAOkN,GACtB,EAA6ChP,qBAC3CuH,GADMc,EAAR,EAAQA,eAAgBU,EAAxB,EAAwBA,iBAGxB,EAA8CnC,mBAC5CyB,EAAepF,IADjB,mBAAOgM,EAAP,KAAwBC,EAAxB,KAGA,EAA4CtI,oBAAS,GAArD,mBAAOuI,EAAP,KAAuBC,EAAvB,KACA,GAAwCxI,oBAAS,GAAjD,qBAAOyH,GAAP,MAAqBgB,GAArB,MACA,GAA8CrP,qBAC5C0H,GADMhB,GAAR,GAAQA,eAAgBuC,GAAxB,GAAwBA,kBAGhBG,GAA0BpJ,qBAAWiH,GAArCmC,sBACAhJ,GAAQC,YAAQ,CAAEgO,gBAAchB,gBAAhCjN,IAuFR,SAASkP,GAAkB/O,IAkB3B,SAASgP,GAAiBhP,GACxBqO,EAAiBzM,QAAU,KAG7B,SAASF,GAAe1B,GACtBmO,EAAepM,OAAO+K,aAuBxB,OA3DAhL,qBAAU,WACR,GAAIwG,EAAU1G,SAAWyF,EAAW,CAClC,IAAM4H,EAAMC,KAAKD,MACjBxC,GAAgBwC,EAChB/O,YAAW,WACL+O,IAAQxC,KACVjE,EAAiB9F,EAAkBgM,GAtE3C,WACE,IAAMS,EAAW,IAAIC,SACrBD,EAASE,OAAO,YAAahI,GAC7B8H,EAASE,OAAO,iBAAkBX,GAClClL,OAAOC,KAAKyE,EAAgBxF,IAAmB4M,SAAQ,SAAC/M,GAAD,OACrD4M,EAASE,OAAO9M,EAAK2F,EAAgBxF,GAAkBH,OAEzDuM,IAAgB,GAChB,IAAIhG,EAAU,GACdkF,IAAM,CACJuB,OAAQ,OACRC,YAAa,IAAIzB,IAAY,SAAkB0B,GAC7CjB,EAAO5M,QAAU6N,KAEnBC,IAAI,+BAAD,OAAiChN,GACpCiN,KAAMR,EACNS,QAAS,CAAE,eAAgB,yBAE1BC,MAAK,SAACC,GACLvB,EAAcuB,EAASH,KAAKI,UACxBD,EAASH,KAAK7G,UAChBA,EAAUgH,EAASH,KAAK7G,SAE1B,IAAMkH,EAAoBF,EAASH,KAAKM,MAAM7N,KAAI,SAAC8N,GAAD,OAChDC,WAAWC,KAAKC,KAAKH,IAAa,SAACT,GAAD,OAAOA,EAAEa,WAAW,SAExD,OAAOC,QAAQC,IAAI,CAACnJ,EAAUoJ,cAAeT,OAE9CH,MAAK,mCAAEa,EAAF,KAAmBV,EAAnB,WAA0C,CAC9C,IAAIW,SAAJ,6BAAmCzB,KAAKD,OAASyB,GACjDV,EAAkB5N,KAChB,SAACwO,EAAiBtO,GAAlB,OACE,IAAIqO,SAAJ,8BACyBzB,KAAKD,MAD9B,YACuC3M,GACrCsO,UAIPf,MAAK,YAA+B,IAAD,mBAA5BxI,EAA4B,KAAjBwJ,EAAiB,KAGlC,OAFAnG,SAASuF,MAAMa,IAAIzJ,GACnBwJ,EAAYzO,KAAI,SAAC2O,GAAD,OAAgBrG,SAASuF,MAAMa,IAAIC,MAC5C,CAAC1J,EAAWwJ,MAEpBhB,MAAK,YAA+B,IAAD,mBAA5BxI,EAA4B,KAAjBwJ,EAAiB,KAClCrJ,EAAsBH,EAAU2J,QAChCvI,EACE/F,EACAmO,EAAYzO,KAAI,SAAC2O,GAAD,OAAgBA,EAAWC,cAG9CC,OAAM,SAACC,GACFlD,IAAMmD,SAASD,GACjBE,QAAQC,IAAIH,EAAOxE,SAEnB0E,QAAQC,IAAIH,MAGfI,SAAQ,WACPxC,IAAgB,GAChBjG,GAAsBC,MAYpByI,MAED,QAEJ,CAACrJ,EAAiBb,EAAWqH,EAAiBhM,IA4BlBnB,mBAE/BO,qBAAU,WAOR,OALAwG,EAAU1G,SAAU,EACpB8I,SAASC,KAAKpK,MAAMiR,YAAc,OAClCzP,OAAOC,iBAAiB,SAAUN,IAClCK,OAAOC,iBAAiB,YAAa+M,IACrChN,OAAOC,iBAAiB,WAAYgN,IAC7B,WACLjN,OAAOE,oBAAoB,SAAUP,IACrCK,OAAOE,oBAAoB,YAAa8M,IACxChN,OAAOE,oBAAoB,WAAY+M,IACvCtE,SAASC,KAAKpK,MAAMsK,eAAe,gBACnCvC,EAAU1G,SAAU,EACpBiN,GAAkB,QA7HGJ,IAAnBD,EAAO5M,UACTkN,IAAgB,GAChBN,EAAO5M,QAAQ,qBACf4M,EAAO5M,aAAU6M,MA6HlB,IAGD,kBAACvC,GAAkB3D,SAAnB,CAA4BhF,MAAO,CAAEb,qBACnC,yBAAKnD,UAAWM,GAAIuN,KAClB,kBAAC,EAAD,CAAahI,WAAYmC,EAAoBrB,SAAUA,GACpD4B,EAAepF,IAElB,yBAAKnD,UAAWM,GAAIgN,KACjBiB,IACC,yBAAKvO,UAAWM,GAAIyN,KACjB,YAAI,yBAAyBlL,KAAI,SAACqP,EAAQnP,GAAT,OAChC,0BACEC,IAAG,qBAAgBD,GACnB/C,UAAWM,GAAI0N,IAAkB,iBAAO,CACtCmE,eAAe,GAAD,OAAKpP,EAAQ,GAAb,UAGfmP,OAKT,kBAAC,GAAD,CAAKxQ,QAASqN,IACd,yBAAKpM,IAAKkM,EAAS7O,UAAWM,GAAImN,KAAlC,OACGnK,QADH,IACGA,OADH,EACGA,EAA4BT,KAAI,SAAC6F,EAAO3F,GAAR,OAC/B,kBAAC,EAAD,CACEQ,MAAOmF,EAAMnF,MACbP,IAAG,kBAAaD,GAChBU,IAAKiF,EAAMjF,IACXC,IAAKgF,EAAMhF,IACXF,IAAKkF,EAAMlF,IACXQ,MAAO4C,GAAezD,GAAkBuF,EAAMlF,KAC9C+H,SAAU,SAACvH,GAAD,OACRmF,GAAkBhG,EAAkBuF,EAAMlF,IAAKQ,SAKrD,kBAAC,EAAD,CACET,MAAO,YACPE,IAAK,GACLC,IAAK,IACLM,MAAO2C,EACP4E,SAAU,SAACvH,GAAD,OAAW2K,EAAY3K,MAEnC,kBAAC,EAAD,CAAWT,MAAM,cACjB,kBAAC,EAAD,CACEA,MAAO,UACPS,MAAOuE,EAAepF,GACtBoI,SAAU,SAACvH,GAAD,OAAWoL,EAAmBpL,IACxCuI,UAAW6F,QAAQtK,KAEpBlE,EAAOf,KAAI,SAAC6F,EAAO3F,GAClB,OAAQ2F,EAAMxF,MACZ,IAAK,QACH,OACE,kBAAC,EAAD,CACEK,MAAOmF,EAAMnF,MACbM,KAAM6E,EAAM7E,KACZb,IAAG,gBAAWG,EAAX,YAA+BJ,GAClCU,IAAKiF,EAAMjF,IACXC,IAAKgF,EAAMhF,IACXM,MAAO2E,EAAgBxF,GAAkBuF,EAAM7E,MAC/C0I,UAAW6F,QAAQtK,KAGzB,QACE,MAAM,IAAIuK,MAAM,2BAGtB,4BACErS,UAAWM,GAAIkJ,EAAO,GAAI4D,IAC1B5M,QAAS,kBAAM8O,GAAmBD,IAClC9C,UAAW6F,QAAQtK,IAElBuH,EAAiB,OAAS,OAE5BA,GACC,oCACE,wBAAIrP,UAAWM,GAAIkJ,EAAO,eLvUpBxF,EKuUyC,OLvU/B,iBAAO,CACnCsC,MAAOtC,QKuUK,kBAAC,EAAD,CAAWT,MAAO,cAClB,4BAAQvD,UAAWM,GAAIkJ,EAAO,OAA9B,YACA,kBAAC,EAAD,CAAWjG,MAAO,UAClB,4BAAQvD,UAAWM,GAAIkJ,EAAO,OAA9B,cCtUVxD,GAAgB,SAAC,GAAD,IAAGsM,EAAH,EAAGA,UAAH,MAAoB,CACxCxN,UAAU,GAAD,OAAKwN,EAAL,QA4BIC,OAxBf,SAA2BzS,GACzB,IAAQqD,EAAmErD,EAAnEqD,iBAAkBmP,EAAiDxS,EAAjDwS,UAAWjP,EAAsCvD,EAAtCuD,YAAamP,EAAyB1S,EAAzB0S,WAAY7L,EAAa7G,EAAb6G,SACtD4B,EAAmBrI,qBAAWuH,GAA9Bc,eACAF,EAAyBnI,qBAAWyH,GAApCU,qBACAzB,EAAmB1G,qBAAW0H,GAA9BhB,eACAtG,EAAQC,YAAQ,CAAE+R,cAAlBhS,IACR,OACE,yBAAKN,UAAWM,EAAI0F,KACf3C,EAAYR,KAAI,SAAC4P,EAAY1P,GAAb,OACjB,kBAAC,EAAD,CACEC,IAAG,UAAKG,EAAL,oBAAiCJ,GACpC8C,WAAYwC,EAAqBlF,GAAkBJ,IAAvC,UAAoDI,EAApD,YAAwEJ,GACpF4D,SAAUA,EACVC,eAAgBA,EAAezD,GAC/BkC,MAAOoN,EACPD,WAAYA,GAEXjK,EAAepF,SC1BbuP,GAAS,iBAAO,IAIhBC,GAA2B,SAAC,GAAD,IAAGhM,EAAH,EAAGA,SAAH,MAAmB,CACzDR,SAAU,WACV/D,OAAO,GAAD,OAAgB,EAAXuE,EAAL,QA0BOiM,OAvBf,SAAkB9S,GAChB,IAAQoC,EAA2BpC,EAA3BoC,aAAcyE,EAAa7G,EAAb6G,SACdrG,EAAQC,YAAQ,CAAEoG,aAAlBrG,IACR,OACE,wBAAIN,UAAWM,EAAIoS,KAChBxQ,EAAaW,KAAI,SAACsF,GAAD,OAChB,wBAAInF,IAAG,oBAAemF,EAAYrF,QAChC,kBAACzB,EAAD,CAAMtB,GAAIoI,EAAYrF,OACpB,yBAAK9C,UAAWM,EAAIqS,KAClB,kBAAC,EAAD,CACEhM,SAAUA,EACVxB,YAAY,GAEXgD,EAAYlF,eCrBvB+C,GAAgB,SAAC,GAAD,IAAGsM,EAAH,EAAGA,UAAH,MAAoB,CACxCxN,UAAU,GAAD,OAAKwN,EAAL,QAsCIO,OAnCf,SAAyB/S,GACvB,IAAQoC,EAAsCpC,EAAtCoC,aAAcoQ,EAAwBxS,EAAxBwS,UAAW3L,EAAa7G,EAAb6G,SACzBrG,EAAQC,YAAQ,CAAE+R,YAAW3L,aAA7BrG,IACR,OACE,wBAAIN,UAAWM,EAAI0F,KAChB9D,EAAaW,KAAI,SAACsF,GAAD,OAChB,wBAAInF,IAAG,uBAAkBmF,EAAYrF,QACnC,kBAACzB,EAAD,CAAMtB,GAAIoI,EAAYrF,OACpB,yBAAK9C,UAAWM,EAAIqS,KACjBxK,EAAY9E,YAAYR,KAAI,SAACwC,EAAOtC,GAAR,aAC3B,kBAAC,EAAD,CACEC,IAAG,+BAA0BD,GAC7B4D,SAAUA,EACVxB,YAAY,EACZU,WAAU,UAAKsC,EAAYhF,iBAAjB,YAAqCJ,GAC/CsC,MAAOA,EACPuB,gBAAgB,iBAACuB,QAAD,IAACA,OAAD,EAACA,EAAa7E,kCAAd,QAA4C,IAAIa,QAC9D,SAACC,EAAWtB,GAEV,OADAsB,EAAUtB,EAAMU,KAAOV,EAAMa,QACtBS,IAET,KAGD+D,EAAYlF,kBCrBlB9C,GAA2BoH,0BAE3BrF,GAAekO,EAAKrK,QAC/B,SAACjD,GAAD,MAA0B,qBAAfA,EAAMI,QAGnB,SAAS4P,KACP,OAAO5Q,GAAaiC,QAAO,SAACC,EAAW+D,GAIrC,OAHA/D,EAAU+D,EAAYhF,kBAAoB4P,KAAKC,KhBrB5C,SAAwBC,EAAMpN,GACnC,IAAMqN,EAAO/H,SAASgI,cAAc,QACpCD,EAAKE,UAAYH,EACjBC,EAAKlS,MAAM2F,SAAW,QACtBuM,EAAKlS,MAAM6E,WAAaA,EACxBsF,SAASC,KAAKiI,YAAYH,GAC1B,IAAQI,EAAgBJ,EAAhBI,YAER,OADAnI,SAASC,KAAKmI,YAAYL,GACnBH,KAAKS,OAAcrI,SAASC,KAAKqI,YAAY,IAAIH,EAAtC,KgBcdI,CAAevL,EAAYlF,MAAO,QAE7BmB,IACN,IAGL,IAAMuP,GAAqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,iBAAkBtB,EAArB,EAAqBA,UAArB,oBACzBnM,SAAU,QACV4D,OAAQ,EACRzD,MAAO,OACPlE,OAAQ,MACRiE,KAAM,EACN4F,WAAY,OACZuB,WAAW,UAAD,OAAY,IAAZ,MACVjH,UAAW,gBACXb,yBAA0BkO,EACtB,4BACA,6BAXqB,SAYjBA,EAAmB,EAAH,sBAAsBtB,EAAY,GAAlC,SAGpBuB,GAAwB,SAAC,GAAD,IAC5BC,EAD4B,EAC5BA,WACAC,EAF4B,EAE5BA,gBACAC,EAH4B,EAG5BA,iBAH4B,MAIvB,CACL/N,QAAS,EACTG,IAAK,EACLC,KAAM,EACNC,MAAO,OACPlE,OAAQ,OACR+D,SAAU,WACV8F,WAAY,OACZgI,SAAU,SACV1N,UAAW,gBACXzF,OAAQ,CACN,CACEC,UAAW+S,EACX9S,MAAO,CACLoB,OAAQ,oBAGZ,CACErB,WAAY+S,EACZ9S,MAAO,CACLsF,MAAO,oBAGX,CACEvF,UAAWgT,EAAkBC,EAC7BhT,MAAO,CACLyE,mBAAoB,sBACdsO,EAAkB,CAAC,SAAW,IADhB,YAEdC,EAAmB,CAAC,UAAY,KACpC1P,KAAK,KACPkB,mBAAoB,OACpBE,yBAA0B,cAM5BwO,GAAU,iBAAO,CACrBvN,SAAU,CAAC,OAAQ,QACnBwN,WAAY,CAAC,QAAS,YAmNTC,OAhNf,WACE,IAAMC,EAAiBrS,iBAAOQ,OAAO8R,YACrC,EAAgDxN,oBAAS,GAAzD,mBAAO8M,EAAP,KAAyB3T,EAAzB,KACA,EAAkC6G,mBAASgM,MAA3C,mBAAOyB,EAAP,KAAkBC,EAAlB,KAMMzL,EAAY/G,kBAAO,GACzB,EAAkC8E,mBAAS,GAA3C,mBAAOwL,EAAP,KAAkBrQ,EAAlB,KACA,EAAoC6E,oBAAS,GAA7C,mBAAOgN,EAAP,KAAmBW,EAAnB,KACA,EAA8C3N,oBAAS,GAAvD,mBAAOiN,EAAP,KAAwBW,EAAxB,KACA,EAAgD5N,oBAAS,GAAzD,mBAAOkN,EAAP,KAAyBW,EAAzB,KACA,EAAgD7N,mBAC9CiM,KAAKtP,IAAL,MAAAsP,KAAI,YAAQ9O,OAAO2Q,OAAO9B,SAD5B,mBAAO+B,EAAP,KAAyBC,EAAzB,KAGMC,EAAoB/S,mBACpBgT,EAAqBhT,iBAAO2N,KAAKD,OAE/BpP,EAAQC,YAAQ,CACtBqT,mBACAtB,YACAwB,aACAC,kBACAC,qBALM1T,IAQR,SAAS2U,IACHtF,KAAKD,MAAQsF,EAAmB3S,QAAU,MAC5CoS,GAAc,GACdC,GAAmB,GACfV,GACFrT,YAAW,cAER,MAKT,SAASuU,EAAczU,GACjBuT,IACqBe,EAAkB1S,QAAlC8S,aACY,IAAM1U,EAAE2U,OACzBT,GAAoB,IAGpBhF,KAAKD,MAAQsF,EAAmB3S,QAAU,MAG5C0S,EAAkB1S,QAAQrB,MAAMoB,OAAhC,UAA4C3B,EAAE2U,MAA9C,OAIJ,SAASC,EAAiB5U,GACxBuU,EAAmB3S,QAAUsN,KAAKD,MAClCgF,GAAmB,GACnBD,GAAc,GACW,IAArBhU,EAAE6U,QAAQzK,SACZkK,EAAkB1S,QAAQrB,MAAMsF,MAAhC,UAA2C7F,EAAE6U,QAAQ,GAAGC,MAAxD,OAIJ,SAAS/F,EAAkB/O,GAEzB,IAAIuD,EACJ,OAFA0Q,GAAmB,GAEXjU,EAAE6U,QAAQzK,QAChB,KAAK,EACH7G,EAAQvD,EAAE6U,QAAQ,GAAGC,MACrB,MACF,KAAK,EACH,kBAAuC9U,EAAE6U,QAAzC,GAAgBE,EAAhB,KAASD,MAAsBE,EAA/B,KAAwBF,MACxBvR,EAAQ+O,KAAKtP,IAAI+R,EAAIC,GAAM1C,KAAK2C,IAAID,EAAKD,GAAM,EAGnDT,EAAkB1S,QAAQrB,MAAMsF,MAAhC,UAA2CtC,EAA3C,MAGF,SAAS7B,EAAe1B,GACtB,MAAoC+B,OAA5B8R,EAAR,EAAQA,WAAR,EAAoB/G,YAEhB+G,IAAeD,EAAehS,UAChCyS,EAAoB/B,KAAKtP,IAAL,MAAAsP,KAAI,YAAQ9O,OAAO2Q,OAAO9B,SAE9CuB,EAAehS,QAAUiS,GAyB7B,OArBA/R,qBAAU,WAYR,OAVAwG,EAAU1G,SAAU,EACpBG,OAAOC,iBAAiB,SAAUN,GAClCK,OAAOC,iBAAiB,YAAayS,GAAe,GACpD/J,SAASC,KAAK3I,iBAAiB,aAAcwS,GAC7CzS,OAAOC,iBAAiB,aAAc4S,GACtC7S,OAAOC,iBAAiB,YAAa+M,GACrCrE,SAASuF,MAAMiF,MAAMrF,MAAK,WACxBkE,EAAa1B,MACbgC,EAAoB/B,KAAKtP,IAAL,MAAAsP,KAAI,YAAQ9O,OAAO2Q,OAAO9B,YAEzC,WACLtQ,OAAOE,oBAAoB,SAAUP,GACrCK,OAAOE,oBAAoB,YAAawS,GACxC/J,SAASC,KAAK1I,oBAAoB,aAAcuS,GAChDzS,OAAOE,oBAAoB,aAAc2S,GACzC7S,OAAOE,oBAAoB,YAAa8M,MAEzC,IAGD,kBAACrP,GAAyB6I,SAA1B,CAAmChF,MAAO/D,GACxC,kBAAC,EAAD,KACE,yBAAKD,UAAWM,EAAI4T,KAClB,kBAAC,EAAD,CAAKjS,aAAcA,EAAcC,aAAcA,KAC/C,8BACE,kBAAC,IAAD,KACGkO,EAAKvN,KAAI,SAACC,EAAOC,GAChB,IAAI6S,EACJ,OAAQ9S,EAAMI,MACZ,IAAK,mBACH0S,EACE,kBAAC,GAAD,iBACM9S,EADN,CAEEwP,UAAWA,EACXtP,IAAKF,EAAMA,MACX6D,SAAU4N,EAAUzR,EAAMK,kBAC1BwL,YAAa,SAAC3K,GAAD,OA1HnC,SAAqBb,EAAkBa,GACrC,IAAI6R,EAAM,eAAQtB,GAClBsB,EAAO1S,GAAoBa,EAC3BwQ,EAAaqB,GAwHSlH,CAAY7L,EAAMK,iBAAkBa,OAI1C,MACF,IAAK,iBACH4R,EACE,kBAAC,GAAD,iBACM9S,EADN,CAEEZ,aAAcA,GACdyE,SAAUkO,KAKlB,OACE,kBAAC,IAAD,CACEiB,KAAMhT,EAAMA,MACZ8S,QAASA,EACT5S,IAAG,gBAAWD,QAInBb,GAAaW,KAAI,SAACsF,EAAapF,GAAd,OAChB,kBAAC,IAAD,CACEC,IAAG,sBAAiBD,GACpB+S,KAAI,UAAK3N,EAAYrF,MAAjB,UACJ8S,QAAS,kBAAC,EAAD,CAAO5Q,WAAYmD,EAAYhF,wBAG5C,kBAAC,IAAD,CACE2S,KAAI,SACJF,QAAS,kBAAC,EAAD,CAAO5Q,WAAW,gBAIjC,yBAAKhF,UAAWM,EAAIqT,MACpB,yBAAKhR,IAAKoS,EAAmB/U,UAAWM,EAAIuT,KAC1C,kBAAC,IAAD,KACGzD,EAAKvN,KAAI,SAACC,EAAOC,GAChB,IAAI6S,EACJ,OAAQ9S,EAAMI,MACZ,IAAK,mBACH0S,EACE,kBAAC,GAAD,iBACM9S,EADN,CAEEwP,UAAWA,EACXtP,IAAKF,EAAMA,MACX6D,SAAU4N,EAAUzR,EAAMK,qBAG9B,MACF,IAAK,iBACHyS,EACE,kBAAC,GAAD,iBACM9S,EADN,CAEEZ,aAAcA,GACdoQ,UAAWA,EACX3L,SAAUkO,KAGd,MACF,QACE,MAAM,IAAIxC,MAAM,eAEpB,OACE,kBAAC,IAAD,CACEyD,KAAMhT,EAAMA,MACZ8S,QAASA,EACT5S,IAAG,wBAAmBD,c,sDCxQpCgT,GAAWC,aAAe,CAC9BC,QAAS,CACPnV,eACAoV,eACAC,eACAC,cAdoB,SAACxB,EAAQ9U,GAC/B,OAAQ8U,EAAO/J,QACb,KAAK,EACH,MAAO,CAAC,6BACV,QACE,MAAO,MASwB,CAC/BtJ,SAAS,EACT8U,QAAQ,EACRzU,SAAS,EACT+E,UAAU,EACV+G,qBAAqB,EACrByG,YAAY,EACZ7N,OAAO,EACPlE,QAAQ,EACRyJ,cAAc,OAkBpBkK,GAASO,aAbU,CACjBC,UAAW,aACX1Q,WAAY,UACZc,SAAU,UACVtB,MAAO,UACP,yBAA0B,cAC1B,0BAA2B,YAC3B,UAAW,CACT8G,QAAS,OACTF,WAAY,OACZD,UAAW,SAGmB,sCAOlC+J,GAASO,aALa,CACpBzQ,WAAY,UACZc,SAAU,UACV6P,WAAY,WAEuB,2BAOrCT,GAASO,aALuB,CAC9B/U,QAAS,EACT8U,OAAQ,GAKR,gEAaFN,GAASO,aAVS,CAEhBzQ,WAAW,kBACXhB,SAAU,QACViJ,UAAW,QACXmE,YAAa,QACb9L,SAAU,WACVsQ,mBAAoB,UACpBxC,SAAU,QAEqB,QAOjC8B,GAASO,aALS,CAChBlU,OAAQ,OACRkE,MAAO,QAGwB,QAOjCyP,GAASO,aALO,CACdD,OAAQ,EACRK,cAAe,OACfnV,QAAS,GAEoB,MAW/BwU,GAASO,aATW,CAClB3Q,WAAY,SACZsG,WAAY,cACZE,QAAS,OACTD,OAAQ,OACRH,WAAY,OACZsB,UAAW,OACXxN,eAAgB,aAEiB,UASnCkW,GAASO,aAPa,CACpBjR,MAAO,OACPE,WAAY,OACZW,cAAe,OACfJ,QAAS,eACT,0BAA2B,QAEQ,eAKrCiQ,GAASO,aAHS,CAChBK,SAAU,QAEqB,SAMjCZ,GAASO,aAJW,CAClBzW,eAAgB,aAGiB,YAErB,CACZ,CAAC,eAAgB,OACjB,CAAC,cAAe,OAChB,CAAC,cAAe,OAChB,CAAC,MAAO,UAEJkQ,SAAQ,mCAAE6G,EAAF,KAAQC,EAAR,YACZd,GAASe,WAAWF,EAAM,CAAC,GAAD,OAAIA,EAAJ,YAAYC,QAGxCE,IAASC,OACP,kBAAC,IAAD,KACE,kBAACC,GAAA,EAAD,CAAkBlB,SAAUA,IAC1B,kBAAC,IAAMmB,WAAP,KACE,kBAAC,GAAD,SAIN/L,SAASgM,eAAe,W","file":"static/js/main.3f424cec.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { Link, NavLink, useNavigate } from \"react-router-dom\";\nimport { ContentVisibilityContext } from \"../App\";\n\nconst linkRule = () => ({\n  textDecoration: \"None\"\n});\n\nexport default function (props) {\n  const { to, className = \"\" } = props;\n  const setContentIsVisible = useContext(ContentVisibilityContext);\n  const navigate = useNavigate();\n  const { css } = useFela();\n\n  function delayAndGo(e) {\n    e.preventDefault();\n    setContentIsVisible(false);\n    setTimeout(() => {\n      navigate(to);\n      setContentIsVisible(true);\n    }, 350 + 50);\n  }\n  return (\n    <Link to={to} onClick={delayAndGo} className={`${css(linkRule)} ${className}`}>\n      {props.children}\n    </Link>\n  );\n}\n","import React, {useEffect} from 'react'\nimport { useFela } from 'react-fela'\nimport { useLocation } from 'react-router-dom'\nimport Link from './Link'\n\nconst linkRule = ({pathname, condition}) => ({\n    extend: [{\n        condition: condition(pathname),\n        style: {\n            textDecoration: \"underline !important\",\n        }\n    }]\n})\n\nfunction NavLink(props) {\n    const {to, className = \"\", condition = (pathname) => {\n        return pathname.startsWith(to)\n    }} = props\n    const location = useLocation()\n    const {css} = useFela({pathname: location.pathname, to, condition})\n\n    return (\n        <Link to={to} className={`${css(linkRule)} ${className}`}>{props.children}</Link>\n    )\n}\n\nexport default NavLink\n","import React, { useEffect, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { useLocation } from \"react-router\";\nimport NavLink from \"./NavLink\";\n\nconst navRule = () => ({\n  padding: \"10px\",\n  // position: \"sticky\",\n  // top: 0,\n});\n\nconst menuItemRule = () => ({});\n\nconst aboutRule = () => ({\n  \":before\": {\n    content: '\", \"',\n  },\n});\n\nconst subUlRule = () => ({\n  display: \"flex\",\n  flexDirection: \"row\",\n});\n\nfunction Nav(props) {\n  const homeRef = useRef();\n  const { setNavHeight, filterRoutes } = props;\n  const { css } = useFela();\n  const location = useLocation();\n\n  function handleOnResize() {\n    const { height } = homeRef.current.getBoundingClientRect();\n    setNavHeight(height + 20);\n  }\n\n  useEffect(() => {\n    handleOnResize();\n  }, [location]);\n\n  useEffect(() => {\n    handleOnResize();\n    window.addEventListener(\"resize\", handleOnResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleOnResize);\n    };\n  }, []);\n\n  return (\n    <nav className={css(navRule)}>\n      <ul>\n        <li ref={homeRef} className={css(menuItemRule)}>\n          <ul className={css(subUlRule)}>\n            <li>\n              <NavLink\n                to={\"/\"}\n                condition={(pathname) => [\"/\", \"/about\"].includes(pathname)}\n              >\n                no design foundry\n              </NavLink>\n            </li>\n            {(location.pathname === \"/\" || location.pathname === \"/about\") && (\n              <li>\n                <NavLink\n                  to={\"/about\"}\n                  className={css(aboutRule)}\n                  condition={(pathname) => pathname === \"/about\"}\n                >\n                  about\n                </NavLink>\n              </li>\n            )}\n          </ul>\n        </li>\n        {location.pathname !== \"/\" &&\n          filterRoutes.map((route, index) => (\n            <li key={`nav_${index}`}>\n              <ul className={css(subUlRule)}>\n                <li className={css(menuItemRule)}>\n                  <NavLink to={route.route}>{route.title}</NavLink>\n                </li>\n                {location.pathname.startsWith(route.route) && (\n                  <li>\n                    <NavLink\n                      to={`${route.route}/about`}\n                      className={css(aboutRule)}\n                    >\n                      about\n                    </NavLink>\n                  </li>\n                )}\n              </ul>\n            </li>\n          ))}\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","export default [\n  {\n    type: \"filterListView\",\n    route: \"/\",\n  },\n  {\n    type: \"filterDetailView\",\n    title: \"Rotorizer\",\n    filterIdentifier: \"rotorizer\",\n    route: \"/rotorizer\",\n    numberOfLayers: 2,\n    layerColors: [\"gray\", \"#000\"],\n    variableFontControlSliders: [\n      {\n        label: \"rotation\",\n        tag: \"RTTX\",\n        min: 0,\n        max: 360,\n        default: 130,\n      },\n    ],\n    inputs: [\n      {\n        type: \"range\",\n        label: \"depth\",\n        name: \"depth\",\n        min: 2,\n        max: 600,\n        default: 100,\n      },\n    ],\n  },\n  {\n    type: \"filterDetailView\",\n    title: \"Rastr\",\n    filterIdentifier: \"rasterizer\",\n    route: \"/rasterizer\",\n    numberOfLayers: 1,\n    layerColors: [\"#000\"],\n    inputs: [\n      {\n        type: \"range\",\n        label: \"resolution\",\n        name: \"resolution\",\n        min: 10,\n        max: 150,\n        default: 20,\n      },\n    ],\n  },\n];\n","export function getMaxFontSize(text, fontFamily) {\n  const span = document.createElement(\"span\");\n  span.innerHTML = text;\n  span.style.fontSize = \"200px\"\n  span.style.fontFamily = fontFamily\n  document.body.appendChild(span);\n  const { offsetWidth } = span;\n  document.body.removeChild(span);\n  return Math.floor(200 * ((document.body.clientWidth-20)/offsetWidth));\n}\n\nexport function dictToFontVariationSettings(dict) {\n  const value = Object.keys(dict).reduce((collector, key) => {\n    collector.push(`\"${key}\" ${dict[key]}`)\n    return collector\n  }, []).join(\", \")\n  return value ? {fontVariationSettings:value} : {}\n}\n\n\n","\nimport React from 'react'\nimport Markdown from 'markdown-to-jsx';\nimport rasterizer from '../abouts/rasterizer.js';\nimport rotorizer from '../abouts/rotorizer.js';\nimport foundry from '../abouts/foundry.js';\nimport { useFela } from 'react-fela';\n\nconst abouts = {\n    rasterizer, rotorizer, foundry\n}\n\nconst articleRule = () => ({\n    padding: \"calc(1em - 10px) 10px 10px 10px\",\n    maxWidth: \"50ch\",\n    \"& p + p\": {\n        marginTop: \"1em\",\n    }\n})\n\nfunction About(props) {\n    const {identifier} = props\n    const {css} = useFela()\n    return (\n        <article className={css(articleRule)}>\n            <Markdown>{abouts[identifier]}</Markdown>\n        </article>\n    )\n}\n\nexport default About\n","\nexport default `<p>A font that had this filter applied on went through the process of rasterisation. It's the same rasterization that rasterizes fonts on your iPhone or a Android phone, a coffee machines or something completely else. Software behind it is called <a href=\"https://freetype.org/\" target=\"_blank\">FreeType</a> and it's an open source rasterizer that is used in the industry. </p>\n<p>Such rasterisation is very complex process, it uses font's information called hinting. Hinting simply hints the rasterizer what to do. It can tell it to make sure to have this stroke the same amount of pixels as this stroke or show overshoot only if the font size is above 20px. If the font doesn't contain any hinting, then the rasterizer tries to do its best job.</p>\n<p>General rule is that fonts with suffix <code>.ttf</code> should have better displaying capabilities than fonts ending with <code>.otf</code>. Old classic as Verdana, Arial or Times New Roman perform very well when rasterised in small sizes. </p>\n<p>The smallest sizes in some of the older fonts were specially prepared as separate bitmaps. Someone was really there, drawing that system font bitmap of eight pixels!</p>`\n","\nexport default `<p>There was a typeface that was soon replaced by an algorithm, this typeface's only distinctive feature was something that soon every font can turn into.</p>\n<p>The font is dead, long live the algorithm!</p>\n<p>It was a long journey of slowly learning how to automate my tedious inhuman workflow to produce the variable font until completely automating it.</p>\n<p>It already asks the question of our future lives, are we gonna be all replaced by an algorithm? What kind of work will humans do? Only the creative one? I don't know, but lets leave production of such fonts to an algorithm.</p>`\n","\nexport default `<p>This is the type foundry without any typefaces. It contains collection of filters that can be applied on already existing fonts, the ones you already have. It tries to reuse and refresh already existing fonts and designs.</p>\n<p>This website doesn't store your fonts, your fonts are only processed on the server and send to you directly.</p>\n<p>This project is primarily work of <a href=\"https://www.jansindler.com\" target=\"_blank\">Jan Šindler</a>, but also of many others who directly or indirectly influenced this project. Thank you: <a href=\"https://www.hallotype.nl/\" target=\"_blank\">Thom Janssen</a>, <a href=\"https://www.youtube.com/watch?v=7uNYg98YTNI\" target=\"_blank\">Oli Sabin</a>, <a href=\"https://rosettatype.com/\" target=\"_blank\">David Březina</a>, Just van Rossum &amp; everyone at <a href=\"https://typemedia.org/\" target=\"_blank\">TM</a> &amp; everyone who keeps maintained all the libraries that I am using in this project.</p>`\n","import React, { useEffect, useState, useRef, useContext } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { dictToFontVariationSettings } from \"../misc\";\nimport { FontPreviewMarginsContext } from \"../Contexts\";\n\nexport const fontPreviewOpacityTransition = 350;\n\nconst itemRule = ({ previewedFontFamily, inListView, visible, color, marginBottom, marginTop }) => ({\n  userSelect: \"none\",\n  padding: \"10px\",\n  transitionDuration: `${fontPreviewOpacityTransition}ms`,\n  transitionProperty: \"opacity, filter\",\n  transitionTimingFunction: \"ease-in\",\n  whiteSpace: \"nowrap\",\n  textRendering: \"optimizeSpeed\",\n  marginBottom: `${(inListView || (!inListView && marginBottom)) ? -0.226 : marginBottom}em`,\n  marginTop: `${(inListView || (!inListView && marginTop))? -0.204 : marginTop}em`,\n  extend: [\n    {\n      condition: previewedFontFamily,\n      style: {\n        fontFamily: previewedFontFamily,\n      },\n    },\n    {\n      condition: color,\n      style: {\n        color,\n      },\n    },\n    {\n      condition: !visible,\n      style: {\n        opacity: 0,\n        filter: \"blur(.025em)\",\n      },\n    },\n  ],\n});\n\nconst containerRule = ({ inListView }) => ({\n  zIndex: -1,\n  userSelect: \"none\",\n  pointerEvents: \"none\",\n  position: \"absolute\",\n  top: 0,\n  left: 0,\n  width: \"100vw\",\n  height: \"100vh\",\n  display: \"flex\",\n  transform: \"translateZ(0)\",\n  alignItems: \"center\",\n  justifyContent: inListView ? \"flex-start\" : \"center\",\n  extend: [\n    {\n      condition: inListView,\n      style: {\n        height: \"100%\",\n      },\n    },\n  ],\n});\n\nfunction FontPreview(props) {\n  const {\n    fontSize,\n    inListView = false,\n    fontFamily,\n    fontVariations = {},\n    color,\n  } = props;\n  const contentRef = useRef();\n  const [visible, setVisible] = useState(false);\n  const [previewedFontFamily, setPreviewedFontFamily] = useState(fontFamily);\n  const [previewedChildren, setPreviewedChildren] = useState(props.children);\n  const { marginBottom, marginTop } = useContext(FontPreviewMarginsContext).fontPreviewMargins;\n\n  useEffect(() => {\n    setTimeout(() => {\n      setVisible(true);\n    }, 100);\n  }, []);\n\n  useEffect(() => {\n    if (fontFamily !== previewedFontFamily) {\n      setVisible(false);\n      setTimeout(() => {\n        setPreviewedFontFamily(fontFamily);\n        setPreviewedChildren(props.children);\n        setVisible(true);\n      }, fontPreviewOpacityTransition + 50);\n    }\n  }, [fontFamily]);\n\n  const { css } = useFela({\n    visible,\n    inListView,\n    previewedFontFamily,\n    color,\n    fontVariations,\n    marginTop,\n    marginBottom\n  });\n\n  return (\n    <div className={css(containerRule)} style={{ fontSize: `${fontSize}px` }}>\n      <span\n        ref={contentRef}\n        className={css(itemRule)}\n        style={{ ...dictToFontVariationSettings(fontVariations) }}\n      >\n        {previewedChildren}\n      </span>\n    </div>\n  );\n}\n\nexport default FontPreview;\n","import React, { createContext, useState, useEffect, useRef } from \"react\";\n// import opentype from \"opentype.js\";\n\nimport { filterRoutes } from \"./App\";\nimport { fontPreviewOpacityTransition } from \"./components/FontPreview\";\n\nexport const FormInputsContext = createContext();\nexport const InputFontContext = createContext();\nexport const PreviewStringsContext = createContext();\nexport const PreviewedInputFontContext = createContext();\nexport const PreviewedOutputFontsContext = createContext();\nexport const FontVariationsContext = createContext();\nexport const FontPreviewMarginsContext = createContext();\n\nfunction Contexts(props) {\n  const [inputFont, setInputFont] = useState(null);\n  const [previewedInputFont, setPreviewedInputFont] = useState(null);\n  const [fontPreviewMargins, _setFontPreviewMargins] = useState({\n    marginBottom: 0,\n    marginTop: 0,\n  });\n\n  function setFontPreviewMargins(margins) {\n    setTimeout(()=>{\n      _setFontPreviewMargins(margins)\n    }, fontPreviewOpacityTransition)\n  }\n\n  const [previewedOutputFonts, _setPreviewedOutputFonts] = useState(\n    filterRoutes.reduce((collector, filterRoute) => {\n      collector[filterRoute.filterIdentifier] = Array(\n        filterRoute.numberOfLayers\n      );\n      return collector;\n    }, {})\n  );\n\n  const [previewStrings, _setPreviewString] = useState(\n    filterRoutes.reduce((collector, filterRoute) => {\n      collector[filterRoute.filterIdentifier] = filterRoute.title;\n      return collector;\n    }, {})\n  );\n\n  const [formInputValues, _setFormInputsValue] = useState(\n    filterRoutes.reduce((collector, filterRoute) => {\n      collector[filterRoute.filterIdentifier] = [\n        ...filterRoute.inputs,\n        ...(filterRoute?.variableFontControlSliders ?? []),\n      ].reduce(\n        (inputCollector, input) => {\n          inputCollector[input.name] = input.default;\n          return inputCollector;\n        },\n        { fontSize: null }\n      );\n      return collector;\n    }, {})\n  );\n\n  const [fontVariations, _setFontVariations] = useState(\n    filterRoutes.reduce((collector, filterRoute) => {\n      if (filterRoute.variableFontControlSliders) {\n        collector[filterRoute.filterIdentifier] =\n          filterRoute.variableFontControlSliders.reduce((collector, slider) => {\n            collector[slider.tag] = slider.default;\n            return collector;\n          }, {});\n      }\n      return collector;\n    }, {})\n  );\n\n  const isMounted = useRef(false);\n\n\n  useEffect(() => {\n    if (isMounted.current) {\n      // setTimeout(()=>{\n      //   inputFont\n      //     .arrayBuffer()\n      //     .then((data) => opentype.parse(data))\n      //     .then((font) => font.tables.os2)\n      //     .then((os2) => {\n      //       const { sCapHeight, sTypoLineGap, usWinDescent, usWinAscent } = os2;\n      //       const marginBottom = -usWinDescent / usWinAscent;\n      //       const marginTop = sTypoLineGap !== 0 ? sCapHeight / usWinAscent - 1 : 0;\n      //       setFontPreviewMargins({ marginBottom, marginTop });\n      //     });\n      // }, fontPreviewOpacityTransition)\n    }\n  }, [inputFont]);\n\n  useEffect(() => {\n    isMounted.current = true\n  }, [])\n\n  function setPreviewedOutputFonts(filterIdentifier, value) {\n    let collector = {};\n    collector[filterIdentifier] = value;\n    _setPreviewedOutputFonts({ ...previewedOutputFonts, ...collector });\n  }\n\n  function setFontVariations(filterIdentifier, tag, value) {\n    let collector = { ...fontVariations };\n    collector[filterIdentifier][tag] = parseInt(value);\n    _setFontVariations(collector);\n  }\n\n  function setFormInputValue(filterIdentifier, name, value) {\n    let collector = { ...formInputValues };\n    collector[filterIdentifier][name] = value;\n    _setFormInputsValue(collector);\n  }\n  function setPreviewString(filterIdentifier, value) {\n    let collector = { ...previewStrings };\n    collector[filterIdentifier] = value;\n    _setPreviewString(collector);\n  }\n\n  return (\n    <PreviewStringsContext.Provider\n      value={{ previewStrings, setPreviewString }}\n    >\n      <PreviewedOutputFontsContext.Provider\n        value={{ previewedOutputFonts, setPreviewedOutputFonts }}\n      >\n        <FontVariationsContext.Provider\n          value={{ fontVariations, setFontVariations }}\n        >\n          <FormInputsContext.Provider\n            value={{ formInputValues, setFormInputValue }}\n          >\n            <InputFontContext.Provider value={{ inputFont, setInputFont }}>\n              <PreviewedInputFontContext.Provider\n                value={{ previewedInputFont, setPreviewedInputFont }}\n              >\n                <FontPreviewMarginsContext.Provider value={{fontPreviewMargins, setFontPreviewMargins}}>\n                {props.children}\n                </FontPreviewMarginsContext.Provider>\n              </PreviewedInputFontContext.Provider>\n            </InputFontContext.Provider>\n          </FormInputsContext.Provider>\n        </FontVariationsContext.Provider>\n      </PreviewedOutputFontsContext.Provider>\n    </PreviewStringsContext.Provider>\n  );\n}\n\nexport default Contexts;\n","export const column = (nth) => () => ({\n    gridColumn: nth\n  })\n\nexport const width = (value) => () => ({\n    width: value\n  })","import React, { useContext, useRef, useEffect, useState } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { InputFontContext } from \"../Contexts\";\nimport { column } from \"../rules/rules\";\n\nconst fullscreenDragRule = ({ fileIsDragged }) => ({\n  position: \"fixed\",\n  fontSize: \"4em\",\n  top: 0,\n  backgroundColor: \"#fff\",\n  opacity: 1,\n  left: 0,\n  right: 0,\n  bottom: 0,\n});\n\n\nconst draggedRule = () => ({\n  position: \"absolute\",\n  // transform: \"translate(-50%, -50%)\"\n});\n\nconst dropItRule = () => ({\n  display: [\"none\", \"inline\"],\n});\n\nconst buttonRule = () => ({\n  whiteSpace: \"no-wrap\"\n});\n\nfunction FileInput(props) {\n  const { label } = props;\n  const fileInputRef = useRef();\n  const dragState = useRef();\n  const [cursorDrag, setCursorDrag] = useState({});\n  const { inputFont, setInputFont } = useContext(InputFontContext);\n  const [fileIsDragged, setFileIsDragged] = useState(false);\n  const { css } = useFela({ fileIsDragged });\n\n  useEffect(() => {\n    if (fileIsDragged) {\n      document.body.querySelector(\"#root\").style.pointerEvents = \"none\";\n      dragState.current = \"moving\";\n    } else {\n      document.body\n        .querySelector(\"#root\")\n        .style.removeProperty(\"pointer-events\");\n    }\n  }, [fileIsDragged]);\n\n  function handleDrop(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.dataTransfer?.files.length === 1) {\n      setInputFont(e.dataTransfer.files[0]);\n      dragState.current = null;\n    }\n    setFileIsDragged(false);\n  }\n\n  function handleDragEnter(e) {\n    dragState.current = \"entered\";\n    e.preventDefault();\n    e.stopPropagation();\n    setFileIsDragged(true);\n  }\n\n  function handleDragLeave(e) {\n    if (dragState.current === \"moving\") {\n      e.preventDefault();\n      e.stopPropagation();\n      setFileIsDragged(false);\n      dragState.current = \"left\";\n    }\n  }\n\n  function handleDragOver(e) {\n    const { clientX: left, clientY: top } = e;\n    setCursorDrag({ left, top });\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  function handleOnChange(e) {\n    if (e.target.files.length === 1) {\n      setInputFont(e.target.files[0]);\n    }\n  }\n\n  function handleOnClick(e) {\n    fileInputRef.current.click();\n  }\n\n  useEffect(() => {\n    document.body.addEventListener(\"dragenter\", handleDragEnter);\n    document.body.addEventListener(\"dragleave\", handleDragLeave);\n    document.body.addEventListener(\"dragover\", handleDragOver);\n    document.body.addEventListener(\"drop\", handleDrop);\n    return () => {\n      document.body.removeEventListener(\"dragleave\", handleDragLeave);\n      document.body.removeEventListener(\"dragenter\", handleDragEnter);\n      document.body.removeEventListener(\"dragover\", handleDragOver);\n      document.body.removeEventListener(\"drop\", handleDrop);\n    };\n  }, []);\n  return (\n    <>\n      <label className={css(column(1))}>{label}</label>\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        onChange={handleOnChange}\n        style={{ display: \"none\" }}\n        accept=\".ttf,.otf,woff,woff2\"\n      ></input>\n      <button className={css(column(2), buttonRule)} onClick={handleOnClick}>\n        <span>{inputFont?.name ?? \"select file\"}</span>{!inputFont?.name && <span className={css(dropItRule)}> or drop it</span>}\n      </button>\n      {/* <span className={css(dropItRule, column(\"4 / span 2\"))}> or drop it</span> */}\n      {fileIsDragged && (\n        <div className={css(fullscreenDragRule)}>\n          <span className={css(draggedRule)} style={cursorDrag}>\n            Drop it\n          </span>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default FileInput;\n","import React, { useEffect, useRef, useContext, useState } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { FormInputsContext } from \"../Contexts\";\nimport { column } from \"../rules/rules\";\nimport { DetailViewContext } from \"../templates/DetailView\";\n\nconst valueIndicatorRule = () => ({\n  fontVariantNumeric: \"tabular-nums\",\n  padding: \"0 .2em\",\n});\n\nconst borderRadius = [\"12px\", \"8px\"]\nconst inputRule = ({position}) => ({\n  appearance: \"none\",\n  \"-webkit-appearance\": \"none\",\n  height: [\"12px\", \"8px\"],\n  borderRadius,\n  boxShadow: \"inset 0 2px 2px #00000066\",\n  \"&::-webkit-slider-thumb, &::-moz-range-thumb\": {\n    appearance: \"none\",\n    \"-webkit-appearance\": \"none\",\n    height: [\"26px\", \"18px\"],\n    width: [\"26px\", \"18px\"],\n    background: \"#333\",\n    borderRadius: \"100%\",\n    filter: \"drop-shadow(0 2px 3px #00000066)\",\n    border: \"none\",\n    outline: \"none\",\n    cursor: \"pointer\"\n  },\n  \n  background: \"#EEE\",\n  \"&::-moz-range-progress\": {\n    boxShadow: \"inset 0 2px 2px #00000066\",\n    background: \"#CCC\",\n    height: \"100%\",\n    borderRadius\n  },\n  \"@supports not selector(::-moz-range-progress)\": {\n    background: `linear-gradient(to right, #CCC 0%, #CCC ${position}%, #EEE ${position}%, #EEE 100%)`,\n    \"&:disabled\": {\n      background: `linear-gradient(to right, #DDD 0%, #DDD ${position}%, #EEE ${position}%, #EEE 100%) !important`,\n    },\n  },\n  \"&:disabled\": {\n    \"&::-webkit-slider-thumb, &::-moz-range-thumb\": {\n      background: \"#EEE\"\n    }\n  }\n})\n\nfunction RangeInput(props) {\n  const {\n    className,\n    label,\n    name,\n    min,\n    max,\n    value,\n    onChange,\n    animatable = false,\n    disabled = false,\n  } = props;\n  const inputRef = useRef();\n  const animationInterval = useRef();\n  const [animating, setAnimating] = useState();\n  const { filterIdentifier } = useContext(DetailViewContext);\n  const { setFormInputValue } = useContext(FormInputsContext);\n  const [currentValue, setCurrentValue] = useState(value);\n  const { css } = useFela({animating, position:currentValue/max*100});\n  \n  useEffect(() => {\n    inputRef.current.value = currentValue;\n    return () => {\n      clearInterval(animationInterval.current)\n    }\n  }, []);\n  \n  function handleOnChange(e) {\n    if (inputRef.current.checkValidity()) {\n      const value = parseInt(e.target.value);\n      setCurrentValue(value);\n      if (onChange) {\n        onChange(e.target.value);\n      }\n      if (name) {\n        setFormInputValue(filterIdentifier, name, value);\n      }\n    }\n  }\n\n  // function handleOnClickAnimate() {\n  //   if (animating === true) {\n  //     clearInterval(animationInterval.current);\n  //   } else {\n  //     let counter = 0;\n  //     const start = currentValue;\n  //     animationInterval.current = setInterval(() => {\n  //       const position = (start + counter) % 720;\n  //       const value = Math.round(position - 360 < 0 ? position : 360 - (position % 360))\n  //       setCurrentValue(value)\n  //       inputRef.current.value = value;\n  //       if (onChange) {\n  //         onChange(value)\n  //       }\n  //       const offset =\n  //         10 - ((Math.cos((Math.PI * position) / 180) + 1) / 2) * 9;\n  //       counter += offset;\n  //     }, 1000 / 30);\n  //   }\n  //   setAnimating(!animating);\n  // }\n\n  return (\n    <>\n      <label className={[css(column(1)), className].join(\" \")}>{label}</label>\n      {/* {animatable && (\n        <button className={css(buttonRule, column(2))} onClick={handleOnClickAnimate}>\n          <span>{animating ? \"stop\" : \"play\"}</span>\n          <span className={css(placeholderRule)} aria-label=\"hidden\">play</span>\n          <span className={css(placeholderRule)} aria-label=\"hidden\">stop</span>\n        </button>\n      )} */}\n      <input\n        ref={inputRef}\n        className={[css(column(2), inputRule), className].join(\" \")}\n        type=\"range\"\n        onChange={handleOnChange}\n        min={min}\n        max={max}\n        disabled={disabled}\n      ></input>\n      <div className={[css(valueIndicatorRule), className].join(\" \")} disabled={disabled}>\n        {currentValue}\n      </div>\n    </>\n  );\n}\n\nexport default RangeInput;\n","import React, { useEffect, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { column } from \"../rules/rules\";\n\nconst inputRule = () => ({\n  background: \"transparent\",\n  outline: \"none\",\n  border: \"none\"\n})\n\nfunction TextInput(props) {\n  const { label, value, onChange, disabled } = props;\n  const inputRef = useRef();\n  const { css } = useFela();\n  useEffect(() => {\n    inputRef.current.value = value\n  }, []);\n\n  function handleOnChange() {\n    if (inputRef.current.checkValidity()) {\n      if (onChange) {\n        onChange(inputRef.current.value);\n      }\n    }\n  }\n  return (\n    <>\n      <label className={css(column(1))}>{label}</label>\n      <input\n        ref={inputRef}\n        className={css(inputRule, column(2))}\n        type=\"text\"\n        onChange={handleOnChange}\n        disabled={disabled}\n      ></input>\n    </>\n  );\n}\n\nexport default TextInput;\n","import React from \"react\";\n\nfunction Log(props) {\n  const { content } = props;\n  return <ul>\n    {content.map((message, index) => <li key={index}>{message}</li>)}\n  </ul>;\n}\n\nexport default Log;\n","import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport {\n  FormInputsContext,\n  InputFontContext,\n  PreviewedInputFontContext,\n  PreviewedOutputFontsContext,\n  PreviewStringsContext,\n  FontVariationsContext,\n  FontPreviewMarginsContext,\n} from \"../Contexts\";\nimport FileInput from \"../components/FileInput\";\nimport RangeInput from \"../components/RangeInput\";\nimport TextInput from \"../components/TextInput\";\nimport { useFela } from \"react-fela\";\nimport { column, width } from \"../rules/rules\";\nimport FontPreview from \"../components/FontPreview\";\nimport axios from \"axios\";\nimport Log from \"../components/Log\";\n\nexport const DetailViewContext = createContext();\n\nconst getRule = () => ({\n  textAlign: \"right\",\n});\n\nconst formWrapperRule = ({ innerHeight }) => ({\n  bottom: 0,\n  position: \"fixed\",\n  transform: \"translateZ(0)\",\n  flexDirection: \"column\",\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  transition: \"height .05s ease-in\",\n});\nconst formRule = () => ({\n  pointerEvents: \"all\",\n  display: \"grid\",\n  gridTemplateColumns: [\"auto auto 3ch auto\", \"repeat(4, min-content) 3ch\"],\n  width: [\"calc(100% - 10px)\", \"auto\"],\n  gap: \"0px 6px\",\n  gridAutoRows: \"1.2em\",\n  whiteSpace: \"nowrap\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  marginBottom: \"10px\",\n});\n\nconst fullscreenRule = () => ({\n  minHeight: `100%`,\n  top: 0,\n  position: \"absolute\",\n  width: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  padding: \"10px\",\n  pointerEvents: \"none\",\n  // overflow: \"hidden\",\n});\n\nconst isProcessingWrapperRule = () => ({\n  display: \"flex\",\n  alignItems: \"flex-end\",\n  flexDirection: \"row\",\n});\n\nconst isProcessingRule = ({ isProcessing }) => ({\n  display: \"block\",\n  animationName: {\n    \"0%\": { paddingBottom: \".5em\" },\n    \"40%\": { paddingBottom: \"0\" },\n    \"100%\": { paddingBottom: \"0\" },\n  },\n  animationDuration: \"1s\",\n  animationIterationCount: \"infinite\",\n  animationDirection: \"alternate-reverse\",\n  animationPlayState: isProcessing ? \"processing\" : \"paused\",\n});\n\nconst CancelToken = axios.CancelToken;\nlet lastTimeStamp;\n\nfunction DetailView(props) {\n  const {\n    inputs,\n    variableFontControlSliders,\n    filterIdentifier,\n    fontSize,\n    setFontSize,\n  } = props;\n  const { previewedInputFont, setPreviewedInputFont } = useContext(\n    PreviewedInputFontContext\n  );\n  const [innerHeight, setInnerHeight] = useState(window.innerHeight);\n  const formRef = useRef();\n  const previousDistance = useRef(null);\n  const [logContent, setLogContent] = useState([]);\n  const { setPreviewedOutputFonts } = useContext(PreviewedOutputFontsContext);\n  const { formInputValues } = useContext(FormInputsContext);\n  const fontSizeRef = useRef(fontSize);\n  const { inputFont } = useContext(InputFontContext);\n  const isMounted = useRef(false);\n  const cancel = useRef(undefined);\n  const { previewStrings, setPreviewString } = useContext(\n    PreviewStringsContext\n  );\n  const [previewedString, setPreviewedString] = useState(\n    previewStrings[filterIdentifier]\n  );\n  const [getFormVisible, setGetFormVisible] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const { fontVariations, setFontVariations } = useContext(\n    FontVariationsContext\n  );\n  const { setFontPreviewMargins } = useContext(FontPreviewMarginsContext);\n  const { css } = useFela({ isProcessing, innerHeight });\n\n  function cancelRequest() {\n    if (cancel.current !== undefined) {\n      setIsProcessing(false);\n      cancel.current(\"cancelled by user\");\n      cancel.current = undefined;\n    }\n  }\n\n  function sendRequest() {\n    const formData = new FormData();\n    formData.append(\"font_file\", inputFont);\n    formData.append(\"preview_string\", previewedString);\n    Object.keys(formInputValues[filterIdentifier]).forEach((key) =>\n      formData.append(key, formInputValues[filterIdentifier][key])\n    );\n    setIsProcessing(true);\n    let margins = {};\n    axios({\n      method: \"post\",\n      cancelToken: new CancelToken(function executor(c) {\n        cancel.current = c;\n      }),\n      url: `http://0.0.0.0:5000/filters/${filterIdentifier}`,\n      data: formData,\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    })\n      .then((response) => {\n        setLogContent(response.data.warnings);\n        if (response.data.margins) {\n          margins = response.data.margins;\n        }\n        const outputFontsArrays = response.data.fonts.map((fontBase64) =>\n          Uint8Array.from(atob(fontBase64), (c) => c.charCodeAt(0))\n        );\n        return Promise.all([inputFont.arrayBuffer(), outputFontsArrays]);\n      })\n      .then(([inputFontBuffer, outputFontsArrays]) => [\n        new FontFace(`preview-input-font-${Date.now()}`, inputFontBuffer),\n        outputFontsArrays.map(\n          (outputFontArray, index) =>\n            new FontFace(\n              `preview-output-font-${Date.now()}-${index}`,\n              outputFontArray\n            )\n        ),\n      ])\n      .then(([inputFont, outputFonts]) => {\n        document.fonts.add(inputFont);\n        outputFonts.map((outputFont) => document.fonts.add(outputFont));\n        return [inputFont, outputFonts];\n      })\n      .then(([inputFont, outputFonts]) => {\n        setPreviewedInputFont(inputFont.family);\n        setPreviewedOutputFonts(\n          filterIdentifier,\n          outputFonts.map((outputFont) => outputFont.family)\n        );\n      })\n      .catch((thrown) => {\n        if (axios.isCancel(thrown)) {\n          console.log(thrown.message);\n        } else {\n          console.log(thrown);\n        }\n      })\n      .finally(() => {\n        setIsProcessing(false);\n        setFontPreviewMargins(margins);\n      });\n  }\n\n  // form auto-submit\n  useEffect(() => {\n    if (isMounted.current && inputFont) {\n      const now = Date.now();\n      lastTimeStamp = now;\n      setTimeout(function () {\n        if (now === lastTimeStamp) {\n          setPreviewString(filterIdentifier, previewedString);\n          sendRequest();\n        }\n      }, 500);\n    }\n  }, [formInputValues, inputFont, previewedString, filterIdentifier]);\n\n  function handleOnTouchMove(e) {\n    // switch (e.touches.length) {\n    //   case 2:\n    //     const [{ pageX: x1, pageY: y1 }, { pageX: x2, pageY: y2 }] = e.touches;\n    //     const distance = Math.hypot(y2 - y1, x2 - x1) * 2;\n    //     if (previousDistance.current) {\n    //       const value =\n    //         fontSizeRef.current - (previousDistance.current - distance);\n    //       if (value > 20) {\n    //         setFontSize(value);\n    //         fontSizeRef.current = value;\n    //       }\n    //     }\n    //     previousDistance.current = distance;\n    //     break;\n    // }\n  }\n\n  function handleOnTouchEnd(e) {\n    previousDistance.current = null;\n  }\n\n  function handleOnResize(e) {\n    setInnerHeight(window.innerHeight);\n  }\n\n  const innerHeightMeasurerRef = useRef();\n\n  useEffect(() => {\n    // new ResizeObserver(()=>{document.body.clientHeight}).observe(document.body)\n    isMounted.current = true;\n    document.body.style.touchAction = \"none\";\n    window.addEventListener(\"resize\", handleOnResize);\n    window.addEventListener(\"touchmove\", handleOnTouchMove);\n    window.addEventListener(\"touchend\", handleOnTouchEnd);\n    return () => {\n      window.removeEventListener(\"resize\", handleOnResize);\n      window.removeEventListener(\"touchmove\", handleOnTouchMove);\n      window.removeEventListener(\"touchend\", handleOnTouchEnd);\n      document.body.style.removeProperty(\"touch-action\");\n      isMounted.current = false;\n      setGetFormVisible(false);\n      cancelRequest();\n    };\n  }, []);\n\n  return (\n    <DetailViewContext.Provider value={{ filterIdentifier }}>\n      <div className={css(fullscreenRule)}>\n        <FontPreview fontFamily={previewedInputFont} fontSize={fontSize}>\n          {previewStrings[filterIdentifier]}\n        </FontPreview>\n        <div className={css(formWrapperRule)}>\n          {isProcessing && (\n            <div className={css(isProcessingWrapperRule)}>\n              {[...\"processing...........\"].map((letter, index) => (\n                <span\n                  key={`processing-${index}`}\n                  className={css(isProcessingRule, () => ({\n                    animationDelay: `${index / 10}s`,\n                  }))}\n                >\n                  {letter}\n                </span>\n              ))}\n            </div>\n          )}\n          <Log content={logContent} />\n          <div ref={formRef} className={css(formRule)}>\n            {variableFontControlSliders?.map((input, index) => (\n              <RangeInput\n                label={input.label}\n                key={`font_ui_${index}`}\n                min={input.min}\n                max={input.max}\n                tag={input.tag}\n                value={fontVariations[filterIdentifier][input.tag]}\n                onChange={(value) =>\n                  setFontVariations(filterIdentifier, input.tag, value)\n                }\n                // animatable={true}\n              />\n            ))}\n            <RangeInput\n              label={\"font size\"}\n              min={20}\n              max={1000}\n              value={fontSize}\n              onChange={(value) => setFontSize(value)}\n            />\n            <FileInput label=\"font file\"></FileInput>\n            <TextInput\n              label={\"preview\"}\n              value={previewStrings[filterIdentifier]}\n              onChange={(value) => setPreviewedString(value)}\n              disabled={!Boolean(inputFont)}\n            ></TextInput>\n            {inputs.map((input, index) => {\n              switch (input.type) {\n                case \"range\":\n                  return (\n                    <RangeInput\n                      label={input.label}\n                      name={input.name}\n                      key={`input_${filterIdentifier}_${index}`}\n                      min={input.min}\n                      max={input.max}\n                      value={formInputValues[filterIdentifier][input.name]}\n                      disabled={!Boolean(inputFont)}\n                    ></RangeInput>\n                  );\n                default:\n                  throw new Error(\"component not found\");\n              }\n            })}\n            <button\n              className={css(column(4), getRule)}\n              onClick={() => setGetFormVisible(!getFormVisible)}\n              disabled={!Boolean(inputFont)}\n            >\n              {getFormVisible ? \"hide\" : \"get\"}\n            </button>\n            {getFormVisible && (\n              <>\n                <hr className={css(column(\"1 / span 5\"), width(\"100%\"))} />\n                <TextInput label={\"font name\"} />\n                <button className={css(column(\"5\"))}>download</button>\n                <TextInput label={\"email\"} />\n                <button className={css(column(\"5\"))}>send</button>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </DetailViewContext.Provider>\n  );\n}\n\nexport default DetailView;\n","import React, { useContext } from \"react\";\nimport { useFela } from \"react-fela\";\nimport {\n  FontVariationsContext,\n  PreviewedOutputFontsContext,\n  PreviewStringsContext,\n} from \"../Contexts\";\nimport FontPreview from \"../components/FontPreview\";\n\nconst containerRule = ({ navHeight }) => ({\n  marginTop: `${navHeight}px`,\n});\n\n\nfunction DetailViewOverlay(props) {\n  const { filterIdentifier, navHeight, layerColors, formHeight, fontSize } = props;\n  const { previewStrings } = useContext(PreviewStringsContext);\n  const { previewedOutputFonts } = useContext(PreviewedOutputFontsContext);\n  const { fontVariations } = useContext(FontVariationsContext)\n  const { css } = useFela({ navHeight });\n  return (\n    <div className={css(containerRule)}>\n        {layerColors.map((layerColor, index) => (\n        <FontPreview \n          key={`${filterIdentifier}-overlay-${index}`}\n          fontFamily={previewedOutputFonts[filterIdentifier][index] || `${filterIdentifier}-${index}`}\n          fontSize={fontSize}\n          fontVariations={fontVariations[filterIdentifier]}\n          color={layerColor}\n          formHeight={formHeight}\n        >\n          {previewStrings[filterIdentifier]}\n        </FontPreview>\n        ))}\n    </div>\n  );\n}\n\nexport default DetailViewOverlay;\n","import React, { useState, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\nimport FontPreview from \"../components/FontPreview\";\nimport Link from \"../components/Link\";\n\nexport const ulRule = () => ({\n  // overflowX: \"hidden\"\n})\n\nexport const fontPreviewContainerRule = ({ fontSize }) => ({\n  position: \"relative\",\n  height: `${fontSize * 1}px`,\n});\n\nfunction ListView(props) {\n  const { filterRoutes, fontSize } = props;\n  const { css } = useFela({ fontSize });\n  return (\n    <ul className={css(ulRule)}> \n      {filterRoutes.map((filterRoute) => (\n        <li key={`list-view-${filterRoute.route}`}>\n          <Link to={filterRoute.route}>\n            <div className={css(fontPreviewContainerRule)}>\n              <FontPreview\n                fontSize={fontSize}\n                inListView={true}\n              >\n                {filterRoute.title}\n              </FontPreview>\n            </div>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ListView;\n","import React from \"react\";\nimport { useFela } from \"react-fela\";\nimport FontPreview from \"../components/FontPreview\";\nimport Link from \"../components/Link\";\nimport { fontPreviewContainerRule } from \"./ListView\";\n\nconst containerRule = ({ navHeight }) => ({\n  marginTop: `${navHeight}px`,\n});\n\nfunction ListViewOverlay(props) {\n  const { filterRoutes, navHeight, fontSize } = props;\n  const { css } = useFela({ navHeight, fontSize });\n  return (\n    <ul className={css(containerRule)}>\n      {filterRoutes.map((filterRoute) => (\n        <li key={`overlay-link-${filterRoute.route}`}>\n          <Link to={filterRoute.route}>\n            <div className={css(fontPreviewContainerRule)}>\n              {filterRoute.layerColors.map((color, index) => (\n                <FontPreview\n                  key={`overlay-font-preview-${index}`}\n                  fontSize={fontSize}\n                  inListView={true}\n                  fontFamily={`${filterRoute.filterIdentifier}-${index}`}\n                  color={color}\n                  fontVariations={(filterRoute?.variableFontControlSliders ?? []).reduce(\n                    (collector, route) => {\n                      collector[route.tag] = route.default\n                      return collector\n                    },\n                    {}\n                  )}\n                >\n                  {filterRoute.title}\n                </FontPreview>\n              ))}\n            </div>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ListViewOverlay;\n","import React, { useState, useEffect, useRef, createContext } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { Route, Routes } from \"react-router\";\nimport Nav from \"./components/Nav\";\nimport data from \"./data\";\nimport { getMaxFontSize } from \"./misc\";\nimport About from \"./templates/About\";\nimport DetailView from \"./templates/DetailView\";\nimport DetailViewOverlay from \"./templates/DetailViewOverlay\";\nimport ListView from \"./templates/ListView\";\nimport ListViewOverlay from \"./templates/ListViewOverlay\";\nimport Contexts from \"./Contexts\";\n\nexport const ContentVisibilityContext = createContext();\n\nexport const filterRoutes = data.filter(\n  (route) => route.type === \"filterDetailView\"\n);\n\nfunction getMaxFontSizes() {\n  return filterRoutes.reduce((collector, filterRoute) => {\n    collector[filterRoute.filterIdentifier] = Math.ceil(\n      getMaxFontSize(filterRoute.title, \"vtt\")\n    );\n    return collector;\n  }, {});\n}\n\nconst contentOverlayRule = ({ contentIsVisible, navHeight }) => ({\n  position: \"fixed\",\n  bottom: 0,\n  width: \"100%\",\n  height: \"0px\",\n  left: 0,\n  background: \"#ccc\",\n  transition: `height ${350}ms`,\n  transform: \"translateZ(0)\",\n  transitionTimingFunction: contentIsVisible\n    ? \"cubic-bezier(.55,0,1,.45)\"\n    : \"cubic-bezier(0,.55,.45,1)\",\n  height: contentIsVisible ? 0 : `calc(100% - ${navHeight - 10}px)`,\n});\n\nconst contentBackgroundRule = ({\n  isTouching,\n  transitionWidth,\n  transitionHeight,\n}) => ({\n  zIndex: -1,\n  top: 0,\n  left: 0,\n  width: \"100%\",\n  height: \"100%\",\n  position: \"absolute\",\n  background: \"#eee\",\n  overflow: \"hidden\",\n  transform: \"translateZ(0)\",\n  extend: [\n    {\n      condition: isTouching,\n      style: {\n        height: \"100% !important\",\n      },\n    },\n    {\n      condition: !isTouching,\n      style: {\n        width: \"100% !important\",\n      },\n    },\n    {\n      condition: transitionWidth | transitionHeight,\n      style: {\n        transitionProperty: [\n          ...(transitionWidth ? [\"width\"] : []),\n          ...(transitionHeight ? [\"height\"] : []),\n        ].join(\",\"),\n        transitionDuration: \".15s\",\n        transitionTimingFunction: \"linear\",\n      },\n    },\n  ],\n});\n\nconst appRule = () => ({\n  fontSize: [\"23px\", \"19px\"],\n  lineHeight: [\"1.3em\", \"1.15em\"],\n});\n\nfunction App() {\n  const lastInnerWidth = useRef(window.innerWidth);\n  const [contentIsVisible, setContentIsVisible] = useState(true);\n  const [fontSizes, setFontSizes] = useState(getMaxFontSizes());\n  function setFontSize(filterIdentifier, value) {\n    let value_ = { ...fontSizes };\n    value_[filterIdentifier] = value;\n    setFontSizes(value_);\n  }\n  const isMounted = useRef(false);\n  const [navHeight, setNavHeight] = useState(0);\n  const [isTouching, setIsTouching] = useState(false);\n  const [transitionWidth, setTransitionWidth] = useState(false);\n  const [transitionHeight, setTransitionHeight] = useState(true);\n  const [listViewFontSize, setListViewFontSize] = useState(\n    Math.min(...Object.values(getMaxFontSizes()))\n  );\n  const contentBackground = useRef();\n  const lastTouchTimestamp = useRef(Date.now());\n\n  const { css } = useFela({\n    contentIsVisible,\n    navHeight,\n    isTouching,\n    transitionWidth,\n    transitionHeight,\n  });\n\n  function handleMouseEnter() {\n    if (Date.now() - lastTouchTimestamp.current > 500) {\n      setIsTouching(false);\n      setTransitionWidth(false);\n      if (transitionHeight) {\n        setTimeout(() => {\n          // setTransitionHeight(false);\n        }, 500);\n      }\n    }\n  }\n\n  function handleCursorY(e) {\n    if (transitionHeight) {\n      const {clientHeight} = contentBackground.current\n      if (clientHeight - 10 <= e.pageY) {\n        setTransitionHeight(false)\n      }\n    }\n    if (Date.now() - lastTouchTimestamp.current > 500) {\n      // setIsTouching(false);\n      // setTransitionHeight(false);\n      contentBackground.current.style.height = `${e.pageY}px`;\n    }\n  }\n\n  function handleTouchStart(e) {\n    lastTouchTimestamp.current = Date.now();\n    setTransitionWidth(true);\n    setIsTouching(true);\n    if (e.touches.length === 1) {\n      contentBackground.current.style.width = `${e.touches[0].pageX}px`;\n    }\n  }\n\n  function handleOnTouchMove(e) {\n    setTransitionWidth(false);\n    let value;\n    switch (e.touches.length) {\n      case 1:\n        value = e.touches[0].pageX;\n        break;\n      case 2:\n        const [{ pageX: x1 }, { pageX: x2 }] = e.touches;\n        value = Math.min(x1, x2) + Math.abs(x2 - x1) / 2;\n        break;\n    }\n    contentBackground.current.style.width = `${value}px`;\n  }\n\n  function handleOnResize(e) {\n    const { innerWidth, innerHeight } = window;\n    // console.log(innerHeight)\n    if (innerWidth !== lastInnerWidth.current) {\n      setListViewFontSize(Math.min(...Object.values(getMaxFontSizes())));\n      // document.body.style.minHeight = `${window.innerHeight}px`;\n      lastInnerWidth.current = innerWidth;\n    }\n  }\n\n  useEffect(() => {\n    // new ResizeObserver((el)=>console.log(contentBackground.current.offsetHeight, contentBackground.current.style.height)).observe(contentBackground.current)\n    isMounted.current = true;\n    window.addEventListener(\"resize\", handleOnResize);\n    window.addEventListener(\"mousemove\", handleCursorY, false);\n    document.body.addEventListener(\"mouseenter\", handleMouseEnter);\n    window.addEventListener(\"touchstart\", handleTouchStart);\n    window.addEventListener(\"touchmove\", handleOnTouchMove);\n    document.fonts.ready.then(function () {\n      setFontSizes(getMaxFontSizes());\n      setListViewFontSize(Math.min(...Object.values(getMaxFontSizes())));\n    });\n    return () => {\n      window.removeEventListener(\"resize\", handleOnResize);\n      window.removeEventListener(\"mousemove\", handleCursorY);\n      document.body.removeEventListener(\"mouseenter\", handleMouseEnter);\n      window.removeEventListener(\"touchstart\", handleTouchStart);\n      window.removeEventListener(\"touchmove\", handleOnTouchMove);\n    };\n  }, []);\n\n  return (\n    <ContentVisibilityContext.Provider value={setContentIsVisible}>\n      <Contexts>\n        <div className={css(appRule)}>\n          <Nav setNavHeight={setNavHeight} filterRoutes={filterRoutes} />\n          <main>\n            <Routes>\n              {data.map((route, index) => {\n                let element;\n                switch (route.type) {\n                  case \"filterDetailView\":\n                    element = (\n                      <DetailView\n                        {...route}\n                        navHeight={navHeight}\n                        key={route.route}\n                        fontSize={fontSizes[route.filterIdentifier]}\n                        setFontSize={(value) =>\n                          setFontSize(route.filterIdentifier, value)\n                        }\n                      ></DetailView>\n                    );\n                    break;\n                  case \"filterListView\":\n                    element = (\n                      <ListView\n                        {...route}\n                        filterRoutes={filterRoutes}\n                        fontSize={listViewFontSize}\n                      ></ListView>\n                    );\n                    break;\n                }\n                return (\n                  <Route\n                    path={route.route}\n                    element={element}\n                    key={`route_${index}`}\n                  ></Route>\n                );\n              })}\n              {filterRoutes.map((filterRoute, index) => (\n                <Route\n                  key={`about_route_${index}`}\n                  path={`${filterRoute.route}/about`}\n                  element={<About identifier={filterRoute.filterIdentifier} />}\n                ></Route>\n              ))}\n              <Route\n                path={`/about`}\n                element={<About identifier=\"foundry\"></About>}\n              ></Route>\n            </Routes>\n          </main>\n          <div className={css(contentOverlayRule)}></div>\n          <div ref={contentBackground} className={css(contentBackgroundRule)}>\n            <Routes>\n              {data.map((route, index) => {\n                let element;\n                switch (route.type) {\n                  case \"filterDetailView\":\n                    element = (\n                      <DetailViewOverlay\n                        {...route}\n                        navHeight={navHeight}\n                        key={route.route}\n                        fontSize={fontSizes[route.filterIdentifier]}\n                      />\n                    );\n                    break;\n                  case \"filterListView\":\n                    element = (\n                      <ListViewOverlay\n                        {...route}\n                        filterRoutes={filterRoutes}\n                        navHeight={navHeight}\n                        fontSize={listViewFontSize}\n                      />\n                    );\n                    break;\n                  default:\n                    throw new Error(\"not matched\");\n                }\n                return (\n                  <Route\n                    path={route.route}\n                    element={element}\n                    key={`overlay_route_${index}`}\n                  />\n                );\n              })}\n            </Routes>\n          </div>\n        </div>\n      </Contexts>\n    </ContentVisibilityContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { RendererProvider } from \"react-fela\";\nimport { createRenderer } from \"fela\";\nimport extend from \"fela-plugin-extend\";\nimport embedded from \"fela-plugin-embedded\";\nimport responsiveValue from \"fela-plugin-responsive-value\";\nimport multipleSelectors from \"fela-plugin-multiple-selectors\";\n\n\nconst getMediaQueries = (values, props) => {\n  switch (values.length) {\n    case 2:\n      return [\"@media (min-width: 800px)\"];\n    default:\n      return [];\n  }\n};\n\nconst renderer = createRenderer({\n  plugins: [\n    extend(),\n    embedded(),\n    multipleSelectors(),\n    responsiveValue(getMediaQueries, {\n      padding: true,\n      margin: true,\n      display: true,\n      fontSize: true,\n      gridTemplateColumns: true,\n      lineHeight: true,\n      width: true,\n      height: true,\n      borderRadius: true\n    }),\n  ],\n});\n\nconst resetStyle = {\n  boxSizing: \"border-box\",\n  fontFamily: \"inherit\",\n  fontSize: \"inherit\",\n  color: \"inherit\",\n  \"-webkit-font-smoothing\": \"antialiased\",\n  \"-moz-osx-font-smoothing\": \"grayscale\",\n  \"&:focus\": {\n    outline: \"none\",\n    background: \"none\",\n    boxShadow: \"none\"\n  }\n};\nrenderer.renderStatic(resetStyle, \"html,body,div,input,label,a,button\");\n\nconst headlineStyle = {\n  fontFamily: \"inherit\",\n  fontSize: \"inherit\",\n  fontWeight: \"inherit\",\n};\nrenderer.renderStatic(headlineStyle, \"h1,h2,h3,h4,h5,h6,h6,h8\");\n\nconst paddingMarginResetStyle = {\n  padding: 0,\n  margin: 0,\n};\n\nrenderer.renderStatic(\n  paddingMarginResetStyle,\n  \"html,body,div,input,label,a,button,h1,h2,h3,h4,h5,h6,h6,h8,p\"\n);\n\nconst bodyStyle = {\n  // fontFamily: `\"Times New Roman\"`,\n  fontFamily: `vtt, sans-serif`,\n  maxWidth: \"100vw\",\n  minHeight: \"100vh\",\n  touchAction: \"pan-y\",\n  position: \"relative\",\n  overscrollBehavior: \"contain\",\n  overflow: \"auto\"\n};\nrenderer.renderStatic(bodyStyle, \"body\");\n\nconst htmlStyle = {\n  height: \"100%\",\n  width: \"100%\",\n};\n\nrenderer.renderStatic(htmlStyle, \"html\");\n\nconst ulStyle = {\n  margin: 0,\n  listStyleType: \"None\",\n  padding: 0,\n};\nrenderer.renderStatic(ulStyle, \"ul\");\n\nconst buttonStyle = {\n  whiteSpace: \"nowrap\",\n  background: \"transparent\",\n  outline: \"none\",\n  border: \"none\",\n  appearance: \"none\",\n  textAlign: \"left\",\n  textDecoration: \"underline\",\n};\nrenderer.renderStatic(buttonStyle, \"button\");\n\nconst disabledStyle = {\n  color: \"#CCC\",\n  userSelect: \"none\",\n  pointerEvents: \"none\",\n  opacity: \"1 !important\",\n  \"-webkit-text-fill-color\": \"#CCC\"\n};\nrenderer.renderStatic(disabledStyle, \"*[disabled]\");\n\nconst inputRule = {\n  minWidth: \"80px\",\n};\nrenderer.renderStatic(inputRule, \"input\");\n\nconst aActiveRule = {\n  textDecoration: \"underline\",\n};\n\nrenderer.renderStatic(aActiveRule, \"a.active\");\n\nconst fonts = [\n  [\"rasterizer-0\", \"ttf\"],\n  [\"rotorizer-0\", \"ttf\"],\n  [\"rotorizer-1\", \"ttf\"],\n  [\"vtt\", \"woff2\"],\n];\nfonts.forEach(([font, extension]) =>\n  renderer.renderFont(font, [`${font}.${extension}`])\n);\n\nReactDOM.render(\n  <BrowserRouter>\n    <RendererProvider renderer={renderer}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </RendererProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}