{"version":3,"sources":["components/Link.js","components/NavLink.js","components/Nav.js","data.js","misc.js","templates/About.js","abouts/rasterizer.js","abouts/rotorizer.js","abouts/foundry.js","components/FontPreview.js","Contexts.js","rules/rules.js","components/FileInput.js","components/RangeInput.js","components/TextInput.js","components/Log.js","templates/DetailView.js","templates/DetailViewOverlay.js","templates/ListView.js","templates/ListViewOverlay.js","App.js","index.js"],"names":["props","to","className","setContentIsVisible","useContext","ContentVisibilityContext","navigate","useNavigate","useFela","css","onClick","e","preventDefault","setTimeout","children","linkRule","pathname","extend","condition","style","textDecoration","NavLink","startsWith","location","useLocation","Link","navRule","padding","menuItemRule","aboutRule","content","subUlRule","display","flexDirection","Nav","homeRef","useRef","setNavHeight","filterRoutes","handleOnResize","height","current","getBoundingClientRect","useEffect","window","addEventListener","removeEventListener","ref","includes","map","route","index","key","title","type","filterIdentifier","numberOfLayers","layerColors","variableFontControlSliders","label","tag","min","max","default","inputs","name","dictToFontVariationSettings","dict","value","Object","keys","reduce","collector","push","join","fontVariationSettings","abouts","rasterizer","rotorizer","foundry","articleRule","maxWidth","marginTop","About","identifier","itemRule","previewedFontFamily","inListView","visible","color","marginBottom","userSelect","transitionDuration","transitionProperty","transitionTimingFunction","whiteSpace","textRendering","fontFamily","opacity","filter","containerRule","zIndex","pointerEvents","position","top","left","width","transform","alignItems","justifyContent","FontPreview","fontSize","fontVariations","contentRef","useState","setVisible","setPreviewedFontFamily","previewedChildren","setPreviewedChildren","FontPreviewMarginsContext","fontPreviewMargins","fontPreviewOpacityTransition","FormInputsContext","createContext","InputFontContext","PreviewStringsContext","PreviewedInputFontContext","PreviewedOutputFontsContext","FontVariationsContext","Contexts","inputFont","setInputFont","previewedInputFont","setPreviewedInputFont","_setFontPreviewMargins","filterRoute","Array","previewedOutputFonts","_setPreviewedOutputFonts","previewStrings","_setPreviewString","inputCollector","input","formInputValues","_setFormInputsValue","slider","_setFontVariations","isMounted","Provider","setPreviewString","setPreviewedOutputFonts","setFontVariations","parseInt","setFormInputValue","setFontPreviewMargins","margins","column","nth","gridColumn","fullscreenDragRule","fileIsDragged","backgroundColor","right","bottom","draggedRule","dropItRule","buttonRule","FileInput","fileInputRef","dragState","cursorDrag","setCursorDrag","setFileIsDragged","handleDrop","stopPropagation","dataTransfer","files","length","handleDragEnter","handleDragLeave","handleDragOver","clientX","clientY","document","body","querySelector","removeProperty","onChange","target","accept","click","valueIndicatorRule","fontVariantNumeric","placeholderRule","visibility","RangeInput","animatable","disabled","inputRef","animationInterval","animating","setAnimating","DetailViewContext","currentValue","setCurrentValue","clearInterval","counter","start","setInterval","Math","round","offset","cos","PI","aria-label","checkValidity","inputRule","background","outline","border","TextInput","Log","lastTimeStamp","message","getRule","textAlign","formWrapperRule","innerHeight","transition","formRule","gridTemplateColumns","gap","gridAutoRows","fullscreenRule","minHeight","isProcessingWrapperRule","isProcessingRule","animationName","paddingBottom","animationDuration","animationIterationCount","animationDirection","animationPlayState","isProcessing","fontSizeSliderRule","CancelToken","axios","DetailView","setFontSize","setInnerHeight","formRef","previousDistance","logContent","setLogContent","fontSizeRef","cancel","undefined","previewedString","setPreviewedString","getFormVisible","setGetFormVisible","setIsProcessing","handleOnTouchMove","touches","x1","pageX","y1","pageY","x2","y2","distance","hypot","handleOnTouchEnd","now","Date","formData","FormData","append","forEach","method","cancelToken","c","url","data","headers","then","response","warnings","outputFontsArrays","fonts","fontBase64","Uint8Array","from","atob","charCodeAt","Promise","all","arrayBuffer","inputFontBuffer","FontFace","outputFontArray","outputFonts","add","outputFont","family","catch","thrown","isCancel","console","log","finally","sendRequest","touchAction","letter","animationDelay","rules","Boolean","Error","navHeight","DetailViewOverlay","formHeight","layerColor","ulRule","fontPreviewContainerRule","ListView","ListViewOverlay","getMaxFontSizes","ceil","text","span","createElement","innerHTML","appendChild","offsetWidth","removeChild","floor","clientWidth","getMaxFontSize","contentOverlayRule","contentIsVisible","contentBackgroundRule","isTouching","transitionWidth","transitionHeight","overflow","appRule","App","fontSizes","setFontSizes","setIsTouching","setTransitionWidth","setTransitionHeight","values","listViewFontSize","setListViewFontSize","contentBackground","lastTouchTimestamp","handleMouseEnter","handleCursorY","handleTouchStart","abs","ready","element","value_","path","renderer","createRenderer","plugins","embedded","multipleSelectors","responsiveValue","margin","renderStatic","boxSizing","fontWeight","overscrollBehavior","listStyleType","appearance","minWidth","font","extension","renderFont","ReactDOM","render","RendererProvider","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.be863129.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { Link, NavLink, useNavigate } from \"react-router-dom\";\nimport { ContentVisibilityContext } from \"../App\";\n\nconst linkRule = () => ({\n  \"-webkit-tap-highlight-color\": \"transparent\",\n});\n\nexport default function (props) {\n  const { to, className = \"\" } = props;\n  const setContentIsVisible = useContext(ContentVisibilityContext);\n  const navigate = useNavigate();\n  const { css } = useFela();\n\n  function delayAndGo(e) {\n    e.preventDefault();\n    setContentIsVisible(false);\n    setTimeout(() => {\n      navigate(to);\n      setContentIsVisible(true);\n    }, 350 + 50);\n  }\n  return (\n    <Link to={to} onClick={delayAndGo} className={className}>\n      {props.children}\n    </Link>\n  );\n}\n","import React, {useEffect} from 'react'\nimport { useFela } from 'react-fela'\nimport { useLocation } from 'react-router-dom'\nimport Link from './Link'\n\nconst linkRule = ({pathname, condition}) => ({\n    extend: [{\n        condition: condition(pathname),\n        style: {\n            textDecoration: \"underline\",\n        }\n    }]\n})\n\nfunction NavLink(props) {\n    const {to, className = \"\", condition = (pathname) => {\n        return pathname.startsWith(to)\n    }} = props\n    const location = useLocation()\n    const {css} = useFela({pathname: location.pathname, to, condition})\n\n    return (\n        <Link to={to} className={`${css(linkRule)} ${className}`}>{props.children}</Link>\n    )\n}\n\nexport default NavLink\n","import React, { useEffect, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { useLocation } from \"react-router\";\nimport NavLink from \"./NavLink\";\n\nconst navRule = () => ({\n  padding: \"10px\",\n  // position: \"sticky\",\n  // top: 0,\n});\n\nconst menuItemRule = () => ({});\n\nconst aboutRule = () => ({\n  \":before\": {\n    content: '\", \"',\n  },\n});\n\nconst subUlRule = () => ({\n  display: \"flex\",\n  flexDirection: \"row\",\n});\n\nfunction Nav(props) {\n  const homeRef = useRef();\n  const { setNavHeight, filterRoutes } = props;\n  const { css } = useFela();\n  const location = useLocation();\n\n  function handleOnResize() {\n    const { height } = homeRef.current.getBoundingClientRect();\n    setNavHeight(height + 20);\n  }\n\n  useEffect(() => {\n    handleOnResize();\n  }, [location]);\n\n  useEffect(() => {\n    handleOnResize();\n    window.addEventListener(\"resize\", handleOnResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleOnResize);\n    };\n  }, []);\n\n  return (\n    <nav className={css(navRule)}>\n      <ul>\n        <li ref={homeRef} className={css(menuItemRule)}>\n          <ul className={css(subUlRule)}>\n            <li>\n              <NavLink\n                to={\"/\"}\n                condition={(pathname) => [\"/\", \"/about\"].includes(pathname)}\n              >\n                no design foundry\n              </NavLink>\n            </li>\n            {(location.pathname === \"/\" || location.pathname === \"/about\") && (\n              <li>\n                <NavLink\n                  to={\"/about\"}\n                  className={css(aboutRule)}\n                  condition={(pathname) => pathname === \"/about\"}\n                >\n                  about\n                </NavLink>\n              </li>\n            )}\n          </ul>\n        </li>\n        {location.pathname !== \"/\" &&\n          filterRoutes.map((route, index) => (\n            <li key={`nav_${index}`}>\n              <ul className={css(subUlRule)}>\n                <li className={css(menuItemRule)}>\n                  <NavLink to={route.route}>{route.title}</NavLink>\n                </li>\n                {location.pathname.startsWith(route.route) && (\n                  <li>\n                    <NavLink\n                      to={`${route.route}/about`}\n                      className={css(aboutRule)}\n                    >\n                      about\n                    </NavLink>\n                  </li>\n                )}\n              </ul>\n            </li>\n          ))}\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","export default [\n  {\n    type: \"filterListView\",\n    route: \"/\",\n  },\n  {\n    type: \"filterDetailView\",\n    title: \"Rotorizer\",\n    filterIdentifier: \"rotorizer\",\n    route: \"/rotorizer\",\n    numberOfLayers: 2,\n    layerColors: [\"gray\", \"#000\"],\n    variableFontControlSliders: [\n      {\n        label: \"rotation\",\n        tag: \"RTTX\",\n        min: 0,\n        max: 360,\n        default: 130,\n      },\n    ],\n    inputs: [\n      {\n        type: \"range\",\n        label: \"depth\",\n        name: \"depth\",\n        min: 2,\n        max: 600,\n        default: 100,\n      },\n    ],\n  },\n  {\n    type: \"filterDetailView\",\n    title: \"Rastr\",\n    filterIdentifier: \"rasterizer\",\n    route: \"/rasterizer\",\n    numberOfLayers: 1,\n    layerColors: [\"#000\"],\n    inputs: [\n      {\n        type: \"range\",\n        label: \"resolution\",\n        name: \"resolution\",\n        min: 10,\n        max: 150,\n        default: 20,\n      },\n    ],\n  },\n];\n","export function getMaxFontSize(text, fontFamily) {\n  const span = document.createElement(\"span\");\n  span.innerHTML = text;\n  span.style.fontSize = \"200px\"\n  span.style.fontFamily = fontFamily\n  document.body.appendChild(span);\n  const { offsetWidth } = span;\n  document.body.removeChild(span);\n  return Math.floor(200 * ((document.body.clientWidth-20)/offsetWidth));\n}\n\nexport function dictToFontVariationSettings(dict) {\n  const value = Object.keys(dict).reduce((collector, key) => {\n    collector.push(`\"${key}\" ${dict[key]}`)\n    return collector\n  }, []).join(\", \")\n  return value ? {fontVariationSettings:value} : {}\n}\n\n\n","\nimport React from 'react'\nimport Markdown from 'markdown-to-jsx';\nimport rasterizer from '../abouts/rasterizer.js';\nimport rotorizer from '../abouts/rotorizer.js';\nimport foundry from '../abouts/foundry.js';\nimport { useFela } from 'react-fela';\n\nconst abouts = {\n    rasterizer, rotorizer, foundry\n}\n\nconst articleRule = () => ({\n    padding: \"calc(1em - 10px) 10px 10px 10px\",\n    maxWidth: \"50ch\",\n    \"& p + p\": {\n        marginTop: \"1em\",\n    }\n})\n\nfunction About(props) {\n    const {identifier} = props\n    const {css} = useFela()\n    return (\n        <article className={css(articleRule)}>\n            <Markdown>{abouts[identifier]}</Markdown>\n        </article>\n    )\n}\n\nexport default About\n","\nexport default `<p>A font that had this filter applied to went through the process of rasterisation. It's the same rasterization that rasterizes fonts on your iPhone or a Android phone, a coffee machines or something completely else. Software behind it is called <a href=\"https://freetype.org/\">FreeType</a> and it's an open source rasterizer that is used in the industry. </p>\n<p>Such rasterisation is very complex process, it uses font's information called hinting. Hinting simply hints the rasterizer what to do. It can tell it to make sure to have this stroke the same amount of pixels as this stroke or show overshoot only if the font size is above 20px. If the font doesn't contain any hinting, then the rasterizer tries to do its best job.</p>\n<p>General rule is that fonts with suffix <code>.ttf</code> should have better displaying capabilities than fonts ending with <code>.otf</code>. Old classic as Verdana, Arial or Times New Roman perform very well when rasterised in small sizes. </p>\n<p>The smallest sizes in some of the older fonts were specially prepared as separate bitmaps. Someone was really there, drawing that system font bitmap of eight pixels!</p>`\n","\nexport default `<p>There was a typeface that was replaced by an algorithm, this typeface was called rotor and its distinctive feature was something that soon every font can turn into. </p>\n<p>I started working on rotor. First version were done by hand in FontLab, slowly after studying at <a href=\"https://typemedia.org/\">TM</a> in the Hague,</p>`\n","\nexport default `<p>This is the type foundry without any typefaces. It contains collection of filters that can be applied on already existing fonts, the ones you already have. It tries to reuse and refresh already existing fonts and designs.</p>\n<p>This website doesn't store your fonts, your fonts are only processed on the server and send to you directly.</p>\n<p>This project is primarily work of <a href=\"https://www.jansindler.com\">Jan Šindler</a>, but also of many others who directly or indirectly influenced this project. Thank you: Thom Janssen, Oli Sabin, David Březina, Just Rossum &amp; everyone who keeps maintained all the libraries that I am using in this project.</p>`\n","import React, { useEffect, useState, useRef, useContext } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { dictToFontVariationSettings } from \"../misc\";\nimport { FontPreviewMarginsContext } from \"../Contexts\";\n\nexport const fontPreviewOpacityTransition = 350;\n\nconst itemRule = ({ previewedFontFamily, inListView, visible, color, marginBottom, marginTop }) => ({\n  userSelect: \"none\",\n  padding: \"10px\",\n  transitionDuration: `${fontPreviewOpacityTransition}ms`,\n  transitionProperty: \"opacity, filter\",\n  transitionTimingFunction: \"ease-in\",\n  whiteSpace: \"nowrap\",\n  textRendering: \"optimizeSpeed\",\n  marginBottom: `${(inListView || (!inListView && marginBottom)) ? -0.226 : marginBottom}em`,\n  marginTop: `${(inListView || (!inListView && marginTop))? -0.204 : marginTop}em`,\n  extend: [\n    {\n      condition: previewedFontFamily,\n      style: {\n        fontFamily: previewedFontFamily,\n      },\n    },\n    {\n      condition: color,\n      style: {\n        color,\n      },\n    },\n    {\n      condition: !visible,\n      style: {\n        opacity: 0,\n        filter: \"blur(.025em)\",\n      },\n    },\n  ],\n});\n\nconst containerRule = ({ inListView }) => ({\n  zIndex: -1,\n  userSelect: \"none\",\n  pointerEvents: \"none\",\n  position: \"absolute\",\n  top: 0,\n  left: 0,\n  width: \"100vw\",\n  height: \"100vh\",\n  display: \"flex\",\n  transform: \"translateZ(0)\",\n  alignItems: \"center\",\n  justifyContent: inListView ? \"flex-start\" : \"center\",\n  extend: [\n    {\n      condition: inListView,\n      style: {\n        height: \"100%\",\n      },\n    },\n  ],\n});\n\nfunction FontPreview(props) {\n  const {\n    fontSize,\n    inListView = false,\n    fontFamily,\n    fontVariations = {},\n    color,\n  } = props;\n  const contentRef = useRef();\n  const [visible, setVisible] = useState(false);\n  const [previewedFontFamily, setPreviewedFontFamily] = useState(fontFamily);\n  const [previewedChildren, setPreviewedChildren] = useState(props.children);\n  const { marginBottom, marginTop } = useContext(FontPreviewMarginsContext).fontPreviewMargins;\n\n  useEffect(() => {\n    setTimeout(() => {\n      setVisible(true);\n    }, 100);\n  }, []);\n\n  useEffect(() => {\n    if (fontFamily !== previewedFontFamily) {\n      setVisible(false);\n      setTimeout(() => {\n        setPreviewedFontFamily(fontFamily);\n        setPreviewedChildren(props.children);\n        setVisible(true);\n      }, fontPreviewOpacityTransition + 50);\n    }\n  }, [fontFamily]);\n\n  const { css } = useFela({\n    visible,\n    inListView,\n    previewedFontFamily,\n    color,\n    fontVariations,\n    marginTop,\n    marginBottom\n  });\n\n  return (\n    <div className={css(containerRule)} style={{ fontSize: `${fontSize}px` }}>\n      <span\n        ref={contentRef}\n        className={css(itemRule)}\n        style={{ ...dictToFontVariationSettings(fontVariations) }}\n      >\n        {previewedChildren}\n      </span>\n    </div>\n  );\n}\n\nexport default FontPreview;\n","import React, { createContext, useState, useEffect, useRef } from \"react\";\n// import opentype from \"opentype.js\";\n\nimport { filterRoutes } from \"./App\";\nimport { fontPreviewOpacityTransition } from \"./components/FontPreview\";\n\nexport const FormInputsContext = createContext();\nexport const InputFontContext = createContext();\nexport const PreviewStringsContext = createContext();\nexport const FontSizeContext = createContext();\nexport const PreviewedInputFontContext = createContext();\nexport const PreviewedOutputFontsContext = createContext();\nexport const FontVariationsContext = createContext();\nexport const FontPreviewMarginsContext = createContext();\n\nfunction Contexts(props) {\n  const [inputFont, setInputFont] = useState(null);\n  const [previewedInputFont, setPreviewedInputFont] = useState(null);\n  const [fontPreviewMargins, _setFontPreviewMargins] = useState({\n    marginBottom: 0,\n    marginTop: 0,\n  });\n\n  function setFontPreviewMargins(margins) {\n    setTimeout(()=>{\n      _setFontPreviewMargins(margins)\n    }, fontPreviewOpacityTransition)\n  }\n\n  const [previewedOutputFonts, _setPreviewedOutputFonts] = useState(\n    filterRoutes.reduce((collector, filterRoute) => {\n      collector[filterRoute.filterIdentifier] = Array(\n        filterRoute.numberOfLayers\n      );\n      return collector;\n    }, {})\n  );\n\n  const [previewStrings, _setPreviewString] = useState(\n    filterRoutes.reduce((collector, filterRoute) => {\n      collector[filterRoute.filterIdentifier] = filterRoute.title;\n      return collector;\n    }, {})\n  );\n\n  const [formInputValues, _setFormInputsValue] = useState(\n    filterRoutes.reduce((collector, filterRoute) => {\n      collector[filterRoute.filterIdentifier] = [\n        ...filterRoute.inputs,\n        ...(filterRoute?.variableFontControlSliders ?? []),\n      ].reduce(\n        (inputCollector, input) => {\n          inputCollector[input.name] = input.default;\n          return inputCollector;\n        },\n        { fontSize: null }\n      );\n      return collector;\n    }, {})\n  );\n\n  const [fontVariations, _setFontVariations] = useState(\n    filterRoutes.reduce((collector, filterRoute) => {\n      if (filterRoute.variableFontControlSliders) {\n        collector[filterRoute.filterIdentifier] =\n          filterRoute.variableFontControlSliders.reduce((collector, slider) => {\n            collector[slider.tag] = slider.default;\n            return collector;\n          }, {});\n      }\n      return collector;\n    }, {})\n  );\n\n  const isMounted = useRef(false);\n\n\n  useEffect(() => {\n    if (isMounted.current) {\n      // setTimeout(()=>{\n      //   inputFont\n      //     .arrayBuffer()\n      //     .then((data) => opentype.parse(data))\n      //     .then((font) => font.tables.os2)\n      //     .then((os2) => {\n      //       const { sCapHeight, sTypoLineGap, usWinDescent, usWinAscent } = os2;\n      //       const marginBottom = -usWinDescent / usWinAscent;\n      //       const marginTop = sTypoLineGap !== 0 ? sCapHeight / usWinAscent - 1 : 0;\n      //       setFontPreviewMargins({ marginBottom, marginTop });\n      //     });\n      // }, fontPreviewOpacityTransition)\n    }\n  }, [inputFont]);\n\n  useEffect(() => {\n    isMounted.current = true\n  }, [])\n\n  function setPreviewedOutputFonts(filterIdentifier, value) {\n    let collector = {};\n    collector[filterIdentifier] = value;\n    _setPreviewedOutputFonts({ ...previewedOutputFonts, ...collector });\n  }\n\n  function setFontVariations(filterIdentifier, tag, value) {\n    let collector = { ...fontVariations };\n    collector[filterIdentifier][tag] = parseInt(value);\n    _setFontVariations(collector);\n  }\n\n  function setFormInputValue(filterIdentifier, name, value) {\n    let collector = { ...formInputValues };\n    collector[filterIdentifier][name] = value;\n    _setFormInputsValue(collector);\n  }\n  function setPreviewString(filterIdentifier, value) {\n    let collector = { ...previewStrings };\n    collector[filterIdentifier] = value;\n    _setPreviewString(collector);\n  }\n\n  return (\n    <PreviewStringsContext.Provider\n      value={{ previewStrings, setPreviewString }}\n    >\n      <PreviewedOutputFontsContext.Provider\n        value={{ previewedOutputFonts, setPreviewedOutputFonts }}\n      >\n        <FontVariationsContext.Provider\n          value={{ fontVariations, setFontVariations }}\n        >\n          <FormInputsContext.Provider\n            value={{ formInputValues, setFormInputValue }}\n          >\n            <InputFontContext.Provider value={{ inputFont, setInputFont }}>\n              <PreviewedInputFontContext.Provider\n                value={{ previewedInputFont, setPreviewedInputFont }}\n              >\n                <FontPreviewMarginsContext.Provider value={{fontPreviewMargins, setFontPreviewMargins}}>\n                {props.children}\n                </FontPreviewMarginsContext.Provider>\n              </PreviewedInputFontContext.Provider>\n            </InputFontContext.Provider>\n          </FormInputsContext.Provider>\n        </FontVariationsContext.Provider>\n      </PreviewedOutputFontsContext.Provider>\n    </PreviewStringsContext.Provider>\n  );\n}\n\nexport default Contexts;\n","export const column = (nth) => () => ({\n    gridColumn: nth\n  })\n\nexport const width = (value) => () => ({\n    width: value\n  })","import React, { useContext, useRef, useEffect, useState } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { InputFontContext } from \"../Contexts\";\nimport { column } from \"../rules/rules\";\n\nconst fullscreenDragRule = ({ fileIsDragged }) => ({\n  position: \"fixed\",\n  fontSize: \"4em\",\n  top: 0,\n  backgroundColor: \"#fff\",\n  opacity: 1,\n  left: 0,\n  right: 0,\n  bottom: 0,\n});\n\n\nconst draggedRule = () => ({\n  position: \"absolute\",\n  // transform: \"translate(-50%, -50%)\"\n});\n\nconst dropItRule = () => ({\n  display: [\"none\", \"inline\"],\n});\n\nconst buttonRule = () => ({\n  whiteSpace: \"no-wrap\"\n});\n\nfunction FileInput(props) {\n  const { label } = props;\n  const fileInputRef = useRef();\n  const dragState = useRef();\n  const [cursorDrag, setCursorDrag] = useState({});\n  const { inputFont, setInputFont } = useContext(InputFontContext);\n  const [fileIsDragged, setFileIsDragged] = useState(false);\n  const { css } = useFela({ fileIsDragged });\n\n  useEffect(() => {\n    if (fileIsDragged) {\n      document.body.querySelector(\"#root\").style.pointerEvents = \"none\";\n      dragState.current = \"moving\";\n    } else {\n      document.body\n        .querySelector(\"#root\")\n        .style.removeProperty(\"pointer-events\");\n    }\n  }, [fileIsDragged]);\n\n  function handleDrop(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.dataTransfer?.files.length === 1) {\n      setInputFont(e.dataTransfer.files[0]);\n      dragState.current = null;\n    }\n    setFileIsDragged(false);\n  }\n\n  function handleDragEnter(e) {\n    dragState.current = \"entered\";\n    e.preventDefault();\n    e.stopPropagation();\n    setFileIsDragged(true);\n  }\n\n  function handleDragLeave(e) {\n    if (dragState.current === \"moving\") {\n      e.preventDefault();\n      e.stopPropagation();\n      setFileIsDragged(false);\n      dragState.current = \"left\";\n    }\n  }\n\n  function handleDragOver(e) {\n    const { clientX: left, clientY: top } = e;\n    setCursorDrag({ left, top });\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  function handleOnChange(e) {\n    if (e.target.files.length === 1) {\n      setInputFont(e.target.files[0]);\n    }\n  }\n\n  function handleOnClick(e) {\n    fileInputRef.current.click();\n  }\n\n  useEffect(() => {\n    document.body.addEventListener(\"dragenter\", handleDragEnter);\n    document.body.addEventListener(\"dragleave\", handleDragLeave);\n    document.body.addEventListener(\"dragover\", handleDragOver);\n    document.body.addEventListener(\"drop\", handleDrop);\n    return () => {\n      document.body.removeEventListener(\"dragleave\", handleDragLeave);\n      document.body.removeEventListener(\"dragenter\", handleDragEnter);\n      document.body.removeEventListener(\"dragover\", handleDragOver);\n      document.body.removeEventListener(\"drop\", handleDrop);\n    };\n  }, []);\n  return (\n    <>\n      <label className={css(column(1))}>{label}</label>\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        onChange={handleOnChange}\n        style={{ display: \"none\" }}\n        accept=\".ttf,.otf,woff,woff2\"\n      ></input>\n      <button className={css(column(3), buttonRule)} onClick={handleOnClick}>\n        <span>{inputFont?.name ?? \"select file\"}</span>{!inputFont?.name && <span className={css(dropItRule)}> or drop it</span>}\n      </button>\n      {/* <span className={css(dropItRule, column(\"4 / span 2\"))}> or drop it</span> */}\n      {fileIsDragged && (\n        <div className={css(fullscreenDragRule)}>\n          <span className={css(draggedRule)} style={cursorDrag}>\n            Drop it\n          </span>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default FileInput;\n","import React, { useEffect, useRef, useContext, useState } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { FormInputsContext } from \"../Contexts\";\nimport { column } from \"../rules/rules\";\nimport { DetailViewContext } from \"../templates/DetailView\";\n\nconst valueIndicatorRule = () => ({\n  fontVariantNumeric: \"tabular-nums\",\n  padding: \"0 .2em\",\n});\n\nconst buttonRule = () => ({\n  height: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n})\n\nconst placeholderRule = () => ({\n  visibility: \"hidden\"\n})\n\nfunction RangeInput(props) {\n  const {\n    label,\n    name,\n    min,\n    max,\n    value,\n    onChange,\n    animatable = false,\n    disabled = false,\n  } = props;\n  const inputRef = useRef();\n  const animationInterval = useRef();\n  const [animating, setAnimating] = useState();\n  const { filterIdentifier } = useContext(DetailViewContext);\n  const { setFormInputValue } = useContext(FormInputsContext);\n  const [currentValue, setCurrentValue] = useState(value);\n  const { css } = useFela({animating});\n  \n  useEffect(() => {\n    inputRef.current.value = currentValue;\n    return () => {\n      clearInterval(animationInterval.current)\n    }\n  }, []);\n  \n  function handleOnChange(e) {\n    if (inputRef.current.checkValidity()) {\n      const value = parseInt(e.target.value);\n      setCurrentValue(value);\n      if (onChange) {\n        onChange(e.target.value);\n      }\n      if (name) {\n        setFormInputValue(filterIdentifier, name, value);\n      }\n    }\n  }\n\n  function handleOnClickAnimate() {\n    if (animating === true) {\n      clearInterval(animationInterval.current);\n    } else {\n      let counter = 0;\n      const start = currentValue;\n      animationInterval.current = setInterval(() => {\n        const position = (start + counter) % 720;\n        const value = Math.round(position - 360 < 0 ? position : 360 - (position % 360))\n        setCurrentValue(value)\n        inputRef.current.value = value;\n        if (onChange) {\n          onChange(value)\n        }\n        const offset =\n          10 - ((Math.cos((Math.PI * position) / 180) + 1) / 2) * 9;\n        counter += offset;\n      }, 1000 / 30);\n    }\n    setAnimating(!animating);\n  }\n\n  return (\n    <>\n      <label className={css(column(1))}>{label}</label>\n      {animatable && (\n        <button className={css(buttonRule, column(2))} onClick={handleOnClickAnimate}>\n          <span>{animating ? \"stop\" : \"play\"}</span>\n          <span className={css(placeholderRule)} aria-label=\"hidden\">play</span>\n          <span className={css(placeholderRule)} aria-label=\"hidden\">stop</span>\n        </button>\n      )}\n      <input\n        ref={inputRef}\n        className={css(column(3))}\n        type=\"range\"\n        onChange={handleOnChange}\n        min={min}\n        max={max}\n        disabled={disabled}\n      ></input>\n      <div className={css(valueIndicatorRule)} disabled={disabled}>\n        {currentValue}\n      </div>\n    </>\n  );\n}\n\nexport default RangeInput;\n","import React, { useEffect, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { column } from \"../rules/rules\";\n\nconst inputRule = () => ({\n  background: \"transparent\",\n  outline: \"none\",\n  border: \"none\"\n})\n\nfunction TextInput(props) {\n  const { label, value, onChange, disabled } = props;\n  const inputRef = useRef();\n  const { css } = useFela();\n  useEffect(() => {\n    inputRef.current.value = value\n  }, []);\n\n  function handleOnChange() {\n    if (inputRef.current.checkValidity()) {\n      if (onChange) {\n        onChange(inputRef.current.value);\n      }\n    }\n  }\n  return (\n    <>\n      <label className={css(column(1))}>{label}</label>\n      <input\n        ref={inputRef}\n        className={css(inputRule, column(3))}\n        type=\"text\"\n        onChange={handleOnChange}\n        disabled={disabled}\n      ></input>\n    </>\n  );\n}\n\nexport default TextInput;\n","import React from \"react\";\n\nfunction Log(props) {\n  const { content } = props;\n  return <ul>\n    {content.map((message, index) => <li key={index}>{message}</li>)}\n  </ul>;\n}\n\nexport default Log;\n","import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport {\n  FormInputsContext,\n  InputFontContext,\n  PreviewedInputFontContext,\n  PreviewedOutputFontsContext,\n  PreviewStringsContext,\n  FontVariationsContext,\n  FontPreviewMarginsContext,\n} from \"../Contexts\";\nimport FileInput from \"../components/FileInput\";\nimport RangeInput from \"../components/RangeInput\";\nimport TextInput from \"../components/TextInput\";\nimport { useFela } from \"react-fela\";\nimport { column, width } from \"../rules/rules\";\nimport FontPreview from \"../components/FontPreview\";\nimport axios from \"axios\";\nimport Log from \"../components/Log\";\n\nexport const DetailViewContext = createContext();\n\nconst getRule = () => ({\n  textAlign: \"right\",\n});\n\nconst formWrapperRule = ({ innerHeight }) => ({\n  top: 0,\n  position: \"fixed\",\n  flexDirection: \"column\",\n  height: `100%`,\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  transition: \"height .05s ease-in\",\n});\nconst formRule = () => ({\n  pointerEvents: \"all\",\n  display: \"grid\",\n  gridTemplateColumns: [\n    \"min-content min-content auto 3ch 5ch\",\n    \"repeat(4, min-content) 3ch\",\n  ],\n  width: [\"calc(100% - 10px)\", \"auto\"],\n  gap: \"0px 6px\",\n  gridAutoRows: \"1.2em\",\n  whiteSpace: \"nowrap\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  marginBottom: \"10px\",\n});\n\nconst fullscreenRule = () => ({\n  minHeight: `100%`,\n  top: 0,\n  position: \"absolute\",\n  width: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  padding: \"10px\",\n  pointerEvents: \"none\",\n  // overflow: \"hidden\",\n});\n\nconst isProcessingWrapperRule = () => ({\n  display: \"flex\",\n  alignItems: \"flex-end\",\n  flexDirection: \"row\",\n});\n\nconst isProcessingRule = ({ isProcessing }) => ({\n  display: \"block\",\n  animationName: {\n    \"0%\": { paddingBottom: \".5em\" },\n    \"40%\": { paddingBottom: \"0\" },\n    \"100%\": { paddingBottom: \"0\" },\n  },\n  animationDuration: \"1s\",\n  animationIterationCount: \"infinite\",\n  animationDirection: \"alternate-reverse\",\n  animationPlayState: isProcessing ? \"processing\" : \"paused\",\n});\n\nconst fontSizeSliderRule = () => ({\n  \"@media(hover:none)\": {\n    display: \"none\",\n  },\n});\n\nconst CancelToken = axios.CancelToken;\nlet lastTimeStamp;\n\nfunction DetailView(props) {\n  const {\n    inputs,\n    variableFontControlSliders,\n    filterIdentifier,\n    fontSize,\n    setFontSize,\n  } = props;\n  const { previewedInputFont, setPreviewedInputFont } = useContext(\n    PreviewedInputFontContext\n  );\n  const [innerHeight, setInnerHeight] = useState(window.innerHeight);\n  const formRef = useRef();\n  const previousDistance = useRef(null);\n  const [logContent, setLogContent] = useState([]);\n  const { setPreviewedOutputFonts } = useContext(PreviewedOutputFontsContext);\n  const { formInputValues } = useContext(FormInputsContext);\n  const fontSizeRef = useRef(fontSize);\n  const { inputFont } = useContext(InputFontContext);\n  const isMounted = useRef(false);\n  const cancel = useRef(undefined);\n  const { previewStrings, setPreviewString } = useContext(\n    PreviewStringsContext\n  );\n  const [previewedString, setPreviewedString] = useState(\n    previewStrings[filterIdentifier]\n  );\n  const [getFormVisible, setGetFormVisible] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const { fontVariations, setFontVariations } = useContext(\n    FontVariationsContext\n  );\n  const { setFontPreviewMargins } = useContext(FontPreviewMarginsContext);\n  const { css } = useFela({ isProcessing, innerHeight });\n\n  function cancelRequest() {\n    if (cancel.current !== undefined) {\n      setIsProcessing(false);\n      cancel.current(\"cancelled by user\");\n      cancel.current = undefined;\n    }\n  }\n\n  function sendRequest() {\n    const formData = new FormData();\n    formData.append(\"font_file\", inputFont);\n    formData.append(\"preview_string\", previewedString);\n    Object.keys(formInputValues[filterIdentifier]).forEach((key) =>\n      formData.append(key, formInputValues[filterIdentifier][key])\n    );\n    setIsProcessing(true);\n    let margins = {}\n    axios({\n      method: \"post\",\n      cancelToken: new CancelToken(function executor(c) {\n        cancel.current = c;\n      }),\n      url: `http://0.0.0.0:5000/filters/${filterIdentifier}`,\n      data: formData,\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    })\n      .then((response) => {\n        setLogContent(response.data.warnings);\n        if (response.data.margins) {\n          margins = response.data.margins\n        }\n        const outputFontsArrays = response.data.fonts.map((fontBase64) =>\n          Uint8Array.from(atob(fontBase64), (c) => c.charCodeAt(0))\n        );\n        return Promise.all([inputFont.arrayBuffer(), outputFontsArrays]);\n      })\n      .then(([inputFontBuffer, outputFontsArrays]) => [\n        new FontFace(`preview-input-font-${Date.now()}`, inputFontBuffer),\n        outputFontsArrays.map(\n          (outputFontArray, index) =>\n            new FontFace(\n              `preview-output-font-${Date.now()}-${index}`,\n              outputFontArray\n            )\n        ),\n      ])\n      .then(([inputFont, outputFonts]) => {\n        document.fonts.add(inputFont);\n        outputFonts.map((outputFont) => document.fonts.add(outputFont));\n        return [inputFont, outputFonts];\n      })\n      .then(([inputFont, outputFonts]) => {\n        setPreviewedInputFont(inputFont.family);\n        setPreviewedOutputFonts(\n          filterIdentifier,\n          outputFonts.map((outputFont) => outputFont.family)\n        );\n      })\n      .catch((thrown) => {\n        if (axios.isCancel(thrown)) {\n          console.log(thrown.message);\n        } else {\n          console.log(thrown);\n        }\n      })\n      .finally(() => {\n        setIsProcessing(false);\n        setFontPreviewMargins(margins)\n      });\n  }\n\n  // form auto-submit\n  useEffect(() => {\n    if (isMounted.current && inputFont) {\n      const now = Date.now();\n      lastTimeStamp = now;\n      setTimeout(function () {\n        if (now === lastTimeStamp) {\n          setPreviewString(filterIdentifier, previewedString);\n          sendRequest();\n        }\n      }, 500);\n    }\n  }, [formInputValues, inputFont, previewedString, filterIdentifier]);\n\n  function handleOnTouchMove(e) {\n    switch (e.touches.length) {\n      case 2:\n        const [{ pageX: x1, pageY: y1 }, { pageX: x2, pageY: y2 }] = e.touches;\n        const distance = Math.hypot(y2 - y1, x2 - x1) * 2;\n        if (previousDistance.current) {\n          const value =\n            fontSizeRef.current - (previousDistance.current - distance);\n          if (value > 20) {\n            setFontSize(value);\n            fontSizeRef.current = value;\n          }\n        }\n        previousDistance.current = distance;\n        break;\n    }\n  }\n\n  function handleOnTouchEnd(e) {\n    previousDistance.current = null;\n  }\n\n  function handleOnResize(e) {\n    setInnerHeight(window.innerHeight);\n  }\n\n  useEffect(() => {\n    isMounted.current = true;\n    document.body.style.touchAction = \"none\";\n    window.addEventListener(\"resize\", handleOnResize);\n    window.addEventListener(\"touchmove\", handleOnTouchMove);\n    window.addEventListener(\"touchend\", handleOnTouchEnd);\n    return () => {\n      window.removeEventListener(\"resize\", handleOnResize);\n      window.removeEventListener(\"touchmove\", handleOnTouchMove);\n      window.removeEventListener(\"touchend\", handleOnTouchEnd);\n      document.body.style.removeProperty(\"touch-action\");\n      isMounted.current = false;\n      setGetFormVisible(false);\n      cancelRequest();\n    };\n  }, []);\n\n  return (\n    <DetailViewContext.Provider value={{ filterIdentifier }}>\n      <div className={css(fullscreenRule)}>\n        <FontPreview fontFamily={previewedInputFont} fontSize={fontSize}>\n          {previewStrings[filterIdentifier]}\n        </FontPreview>\n        <div className={css(formWrapperRule)}>\n          {isProcessing && (\n            <div className={css(isProcessingWrapperRule)}>\n              {[...\"processing...........\"].map((letter, index) => (\n                <span\n                  key={`processing-${index}`}\n                  className={css(isProcessingRule, () => ({\n                    animationDelay: `${index / 10}s`,\n                  }))}\n                >\n                  {letter}\n                </span>\n              ))}\n            </div>\n          )}\n          <Log content={logContent} />\n          <div ref={formRef} className={css(formRule)}>\n            {variableFontControlSliders?.map((input, index) => (\n              <RangeInput\n                label={input.label}\n                key={`font_ui_${index}`}\n                min={input.min}\n                max={input.max}\n                tag={input.tag}\n                value={fontVariations[filterIdentifier][input.tag]}\n                onChange={(value) =>\n                  setFontVariations(filterIdentifier, input.tag, value)\n                }\n                // animatable={true}\n              />\n            ))}\n            <RangeInput\n              label={\"font size\"}\n              min={20}\n              max={1000}\n              value={fontSize}\n              onChange={(value) => setFontSize(value)}\n              rules={[fontSizeSliderRule]}\n            />\n            <FileInput label=\"font file\"></FileInput>\n            <TextInput\n              label={\"preview\"}\n              value={previewStrings[filterIdentifier]}\n              onChange={(value) => setPreviewedString(value)}\n              disabled={!Boolean(inputFont)}\n            ></TextInput>\n            {inputs.map((input, index) => {\n              switch (input.type) {\n                case \"range\":\n                  return (\n                    <RangeInput\n                      label={input.label}\n                      name={input.name}\n                      key={`input_${filterIdentifier}_${index}`}\n                      min={input.min}\n                      max={input.max}\n                      value={formInputValues[filterIdentifier][input.name]}\n                      disabled={!Boolean(inputFont)}\n                    ></RangeInput>\n                  );\n                default:\n                  throw new Error(\"component not found\");\n              }\n            })}\n            <button\n              className={css(column(5), getRule)}\n              onClick={() => setGetFormVisible(!getFormVisible)}\n              disabled={!Boolean(inputFont)}\n            >\n              {getFormVisible ? \"hide\" : \"get\"}\n            </button>\n            {getFormVisible && (\n              <>\n                <hr className={css(column(\"1 / span 5\"), width(\"100%\"))} />\n                <TextInput label={\"font name\"} />\n                <button className={css(column(\"5\"))}>download</button>\n                <TextInput label={\"email\"} />\n                <button className={css(column(\"5\"))}>send</button>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </DetailViewContext.Provider>\n  );\n}\n\nexport default DetailView;\n","import React, { useContext } from \"react\";\nimport { useFela } from \"react-fela\";\nimport {\n  FontVariationsContext,\n  PreviewedOutputFontsContext,\n  PreviewStringsContext,\n} from \"../Contexts\";\nimport FontPreview from \"../components/FontPreview\";\n\nconst containerRule = ({ navHeight }) => ({\n  marginTop: `${navHeight}px`,\n});\n\n\nfunction DetailViewOverlay(props) {\n  const { filterIdentifier, navHeight, layerColors, formHeight, fontSize } = props;\n  const { previewStrings } = useContext(PreviewStringsContext);\n  const { previewedOutputFonts } = useContext(PreviewedOutputFontsContext);\n  const { fontVariations } = useContext(FontVariationsContext)\n  const { css } = useFela({ navHeight });\n  return (\n    <div className={css(containerRule)}>\n        {layerColors.map((layerColor, index) => (\n        <FontPreview \n          key={`${filterIdentifier}-overlay-${index}`}\n          fontFamily={previewedOutputFonts[filterIdentifier][index] || `${filterIdentifier}-${index}`}\n          fontSize={fontSize}\n          fontVariations={fontVariations[filterIdentifier]}\n          color={layerColor}\n          formHeight={formHeight}\n        >\n          {previewStrings[filterIdentifier]}\n        </FontPreview>\n        ))}\n    </div>\n  );\n}\n\nexport default DetailViewOverlay;\n","import React, { useState, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\nimport FontPreview from \"../components/FontPreview\";\nimport Link from \"../components/Link\";\n\nexport const ulRule = () => ({\n  // overflowX: \"hidden\"\n})\n\nexport const fontPreviewContainerRule = ({ fontSize }) => ({\n  position: \"relative\",\n  height: `${fontSize * 1}px`,\n});\n\nfunction ListView(props) {\n  const { filterRoutes, fontSize } = props;\n  const { css } = useFela({ fontSize });\n  return (\n    <ul className={css(ulRule)}> \n      {filterRoutes.map((filterRoute) => (\n        <li key={`list-view-${filterRoute.route}`}>\n          <Link to={filterRoute.route}>\n            <div className={css(fontPreviewContainerRule)}>\n              <FontPreview\n                fontSize={fontSize}\n                inListView={true}\n              >\n                {filterRoute.title}\n              </FontPreview>\n            </div>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ListView;\n","import React from \"react\";\nimport { useFela } from \"react-fela\";\nimport FontPreview from \"../components/FontPreview\";\nimport Link from \"../components/Link\";\nimport { fontPreviewContainerRule } from \"./ListView\";\n\nconst containerRule = ({ navHeight }) => ({\n  marginTop: `${navHeight}px`,\n});\n\nfunction ListViewOverlay(props) {\n  const { filterRoutes, navHeight, fontSize } = props;\n  const { css } = useFela({ navHeight, fontSize });\n  return (\n    <ul className={css(containerRule)}>\n      {filterRoutes.map((filterRoute) => (\n        <li key={`overlay-link-${filterRoute.route}`}>\n          <Link to={filterRoute.route}>\n            <div className={css(fontPreviewContainerRule)}>\n              {filterRoute.layerColors.map((color, index) => (\n                <FontPreview\n                  key={`overlay-font-preview-${index}`}\n                  fontSize={fontSize}\n                  inListView={true}\n                  fontFamily={`${filterRoute.filterIdentifier}-${index}`}\n                  color={color}\n                  fontVariations={(filterRoute?.variableFontControlSliders ?? []).reduce(\n                    (collector, route) => {\n                      collector[route.tag] = route.default\n                      return collector\n                    },\n                    {}\n                  )}\n                >\n                  {filterRoute.title}\n                </FontPreview>\n              ))}\n            </div>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ListViewOverlay;\n","import React, { useState, useEffect, useRef, createContext } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { Route, Routes } from \"react-router\";\nimport Nav from \"./components/Nav\";\nimport data from \"./data\";\nimport { getMaxFontSize } from \"./misc\";\nimport About from \"./templates/About\";\nimport DetailView from \"./templates/DetailView\";\nimport DetailViewOverlay from \"./templates/DetailViewOverlay\";\nimport ListView from \"./templates/ListView\";\nimport ListViewOverlay from \"./templates/ListViewOverlay\";\nimport Contexts from \"./Contexts\";\n\nexport const ContentVisibilityContext = createContext();\n\nexport const filterRoutes = data.filter(\n  (route) => route.type === \"filterDetailView\"\n);\n\nfunction getMaxFontSizes() {\n  return filterRoutes.reduce((collector, filterRoute) => {\n    collector[filterRoute.filterIdentifier] = Math.ceil(\n      getMaxFontSize(filterRoute.title, \"vtt\")\n    );\n    return collector;\n  }, {});\n}\n\nconst contentOverlayRule = ({ contentIsVisible, navHeight }) => ({\n  position: \"fixed\",\n  bottom: 0,\n  width: \"100%\",\n  height: \"0px\",\n  left: 0,\n  background: \"#ccc\",\n  transition: `height ${350}ms`,\n  transform: \"translateZ(0)\",\n  transitionTimingFunction: contentIsVisible\n    ? \"cubic-bezier(.55,0,1,.45)\"\n    : \"cubic-bezier(0,.55,.45,1)\",\n  height: contentIsVisible ? 0 : `calc(100% - ${navHeight - 10}px)`,\n});\n\nconst contentBackgroundRule = ({\n  isTouching,\n  transitionWidth,\n  transitionHeight,\n}) => ({\n  zIndex: -1,\n  top: 0,\n  left: 0,\n  width: \"100%\",\n  height: \"100%\",\n  position: \"absolute\",\n  background: \"#eee\",\n  overflow: \"hidden\",\n  transform: \"translateZ(0)\",\n  extend: [\n    {\n      condition: isTouching,\n      style: {\n        height: \"100% !important\",\n      },\n    },\n    {\n      condition: !isTouching,\n      style: {\n        width: \"100% !important\",\n      },\n    },\n    {\n      condition: transitionWidth | transitionHeight,\n      style: {\n        transitionProperty: [\n          ...(transitionWidth ? [\"width\"] : []),\n          ...(transitionHeight ? [\"height\"] : []),\n        ].join(\",\"),\n        transitionDuration: \".05s\",\n        transitionTimingFunction: \"ease-in\",\n      },\n    },\n  ],\n});\n\nconst appRule = () => ({\n  fontSize: [\"22px\", \"18px\"],\n});\n\nfunction App() {\n  const [contentIsVisible, setContentIsVisible] = useState(true);\n  const [fontSizes, setFontSizes] = useState(getMaxFontSizes());\n  function setFontSize(filterIdentifier, value) {\n    let value_ = { ...fontSizes };\n    value_[filterIdentifier] = value;\n    setFontSizes(value_);\n  }\n  const isMounted = useRef(false);\n  const [navHeight, setNavHeight] = useState(0);\n  const [isTouching, setIsTouching] = useState(false);\n  const [transitionWidth, setTransitionWidth] = useState(false);\n  const [transitionHeight, setTransitionHeight] = useState(true);\n  const [listViewFontSize, setListViewFontSize] = useState(\n    Math.min(...Object.values(getMaxFontSizes()))\n  );\n  const contentBackground = useRef();\n  const lastTouchTimestamp = useRef(Date.now());\n\n  const { css } = useFela({\n    contentIsVisible,\n    navHeight,\n    isTouching,\n    transitionWidth,\n    transitionHeight,\n  });\n\n  function handleMouseEnter() {\n    if (Date.now() - lastTouchTimestamp.current > 500) {\n      setIsTouching(false);\n      setTransitionWidth(false);\n      if (transitionHeight) {\n        setTimeout(() => {\n          setTransitionHeight(false);\n        }, 500);\n      }\n\n    }\n  }\n\n  function handleCursorY(e) {\n    if (Date.now() - lastTouchTimestamp.current > 500) {\n      setIsTouching(false);\n      setTransitionHeight(false);\n      contentBackground.current.style.height = `${e.pageY}px`;\n    }\n  }\n\n  function handleTouchStart(e) {\n    lastTouchTimestamp.current = Date.now();\n    setTransitionWidth(true);\n    setIsTouching(true);\n    if (e.touches.length === 1) {\n      contentBackground.current.style.width = `${e.touches[0].pageX}px`;\n    }\n  }\n\n  function handleOnTouchMove(e) {\n    setTransitionWidth(false);\n    let value;\n    switch (e.touches.length) {\n      case 1:\n        value = e.touches[0].pageX;\n        break;\n      case 2:\n        const [{ pageX: x1 }, { pageX: x2 }] = e.touches;\n        value = Math.min(x1, x2) + Math.abs(x2 - x1) / 2;\n        break;\n    }\n    contentBackground.current.style.width = `${value}px`;\n  }\n\n  function handleOnResize(e) {\n    setListViewFontSize(Math.min(...Object.values(getMaxFontSizes())));\n  }\n\n  useEffect(() => {\n    isMounted.current = true;\n    window.addEventListener(\"resize\", handleOnResize);\n    window.addEventListener(\"mousemove\", handleCursorY, false);\n    document.body.addEventListener(\"mouseenter\", handleMouseEnter);\n    window.addEventListener(\"touchstart\", handleTouchStart);\n    window.addEventListener(\"touchmove\", handleOnTouchMove);\n    document.fonts.ready.then(function () {\n      setFontSizes(getMaxFontSizes());\n      setListViewFontSize(Math.min(...Object.values(getMaxFontSizes())));\n    });\n    return () => {\n      window.removeEventListener(\"resize\", handleOnResize);\n      window.removeEventListener(\"mousemove\", handleCursorY);\n      document.body.removeEventListener(\"mouseenter\", handleMouseEnter);\n      window.removeEventListener(\"touchstart\", handleTouchStart);\n      window.removeEventListener(\"touchmove\", handleOnTouchMove);\n    };\n  }, []);\n\n  return (\n    <ContentVisibilityContext.Provider value={setContentIsVisible}>\n      <Contexts>\n      <div className={css(appRule)}>\n        <Nav setNavHeight={setNavHeight} filterRoutes={filterRoutes} />\n        <main>\n          <Routes>\n            {data.map((route, index) => {\n              let element;\n              switch (route.type) {\n                case \"filterDetailView\":\n                  element = (\n                    <DetailView\n                      {...route}\n                      navHeight={navHeight}\n                      key={route.route}\n                      fontSize={fontSizes[route.filterIdentifier]}\n                      setFontSize={(value) =>\n                        setFontSize(route.filterIdentifier, value)\n                      }\n                    ></DetailView>\n                  );\n                  break;\n                case \"filterListView\":\n                  element = (\n                    <ListView\n                      {...route}\n                      filterRoutes={filterRoutes}\n                      fontSize={listViewFontSize}\n                    ></ListView>\n                  );\n                  break;\n              }\n              return (\n                <Route\n                  path={route.route}\n                  element={element}\n                  key={`route_${index}`}\n                ></Route>\n              );\n            })}\n            {filterRoutes.map((filterRoute, index) => (\n              <Route\n                key={`about_route_${index}`}\n                path={`${filterRoute.route}/about`}\n                element={<About identifier={filterRoute.filterIdentifier} />}\n              ></Route>\n            ))}\n            <Route\n              path={`/about`}\n              element={<About identifier=\"foundry\"></About>}\n            ></Route>\n          </Routes>\n        </main>\n        <div className={css(contentOverlayRule)}></div>\n        <div ref={contentBackground} className={css(contentBackgroundRule)}>\n          <Routes>\n            {data.map((route, index) => {\n              let element;\n              switch (route.type) {\n                case \"filterDetailView\":\n                  element = (\n                    <DetailViewOverlay\n                      {...route}\n                      navHeight={navHeight}\n                      key={route.route}\n                      fontSize={fontSizes[route.filterIdentifier]}\n                    />\n                  );\n                  break;\n                case \"filterListView\":\n                  element = (\n                    <ListViewOverlay\n                      {...route}\n                      filterRoutes={filterRoutes}\n                      navHeight={navHeight}\n                      fontSize={listViewFontSize}\n                    />\n                  );\n                  break;\n                default:\n                  throw new Error(\"not matched\");\n              }\n              return (\n                <Route\n                  path={route.route}\n                  element={element}\n                  key={`overlay_route_${index}`}\n                />\n              );\n            })}\n          </Routes>\n        </div>\n      </div>\n      </Contexts>\n    </ContentVisibilityContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { RendererProvider } from \"react-fela\";\nimport { createRenderer } from \"fela\";\nimport extend from \"fela-plugin-extend\";\nimport embedded from \"fela-plugin-embedded\";\nimport responsiveValue from \"fela-plugin-responsive-value\";\nimport multipleSelectors from \"fela-plugin-multiple-selectors\";\n\n\nconst getMediaQueries = (values, props) => {\n  switch (values.length) {\n    case 2:\n      return [\"@media (min-width: 570px)\"];\n    default:\n      return [];\n  }\n};\n\nconst renderer = createRenderer({\n  plugins: [\n    extend(),\n    embedded(),\n    multipleSelectors(),\n    responsiveValue(getMediaQueries, {\n      padding: true,\n      margin: true,\n      display: true,\n      fontSize: true,\n      gridTemplateColumns: true,\n      width: true,\n      height: true,\n    }),\n  ],\n});\n\nconst resetStyle = {\n  boxSizing: \"border-box\",\n  textDecoration: \"None\",\n  fontFamily: \"inherit\",\n  fontSize: \"inherit\",\n  color: \"inherit\",\n  \"-webkit-font-smoothing\": \"antialiased\",\n  \"-moz-osx-font-smoothing\": \"grayscale\",\n};\nrenderer.renderStatic(resetStyle, \"html,body,div,input,label,a,button\");\n\nconst headlineStyle = {\n  fontFamily: \"inherit\",\n  fontSize: \"inherit\",\n  fontWeight: \"inherit\",\n};\nrenderer.renderStatic(headlineStyle, \"h1,h2,h3,h4,h5,h6,h6,h8\");\n\nconst paddingMarginResetStyle = {\n  padding: 0,\n  margin: 0,\n};\n\nrenderer.renderStatic(\n  paddingMarginResetStyle,\n  \"html,body,div,input,label,a,button,h1,h2,h3,h4,h5,h6,h6,h8,p\"\n);\n\nconst bodyStyle = {\n  // fontFamily: `\"Times New Roman\"`,\n  fontFamily: `vtt, sans-serif`,\n  fontSize: \"20px\",\n  maxWidth: \"100vw\",\n  minHeight: \"100vh\",\n  position: \"relative\",\n  overscrollBehavior: \"contain\",\n  overflow: \"auto\",\n};\nrenderer.renderStatic(bodyStyle, \"body\");\n\nconst htmlStyle = {\n  height: \"100%\",\n  width: \"100%\",\n};\n\nrenderer.renderStatic(htmlStyle, \"html\");\n\nconst ulStyle = {\n  margin: 0,\n  listStyleType: \"None\",\n  padding: 0,\n};\nrenderer.renderStatic(ulStyle, \"ul\");\n\nconst buttonStyle = {\n  whiteSpace: \"nowrap\",\n  background: \"transparent\",\n  outline: \"none\",\n  border: \"none\",\n  appearance: \"none\",\n  textAlign: \"left\",\n  textDecoration: \"underline\",\n};\nrenderer.renderStatic(buttonStyle, \"button\");\n\nconst disabledStyle = {\n  color: \"gray\",\n  userSelect: \"none\",\n  pointerEvents: \"none\",\n};\nrenderer.renderStatic(disabledStyle, \"*[disabled]\");\n\nconst inputRule = {\n  minWidth: \"80px\",\n};\nrenderer.renderStatic(inputRule, \"input\");\n\nconst aActiveRule = {\n  textDecoration: \"underline\",\n};\n\nrenderer.renderStatic(aActiveRule, \"a.active\");\n\nconst fonts = [\n  [\"rasterizer-0\", \"ttf\"],\n  [\"rotorizer-0\", \"ttf\"],\n  [\"rotorizer-1\", \"ttf\"],\n  [\"vtt\", \"woff2\"],\n];\nfonts.forEach(([font, extension]) =>\n  renderer.renderFont(font, [`${font}.${extension}`])\n);\n\nReactDOM.render(\n  <BrowserRouter>\n    <RendererProvider renderer={renderer}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </RendererProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}