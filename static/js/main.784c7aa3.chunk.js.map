{"version":3,"sources":["components/Link.js","components/NavLink.js","components/Nav.js","data.js","misc.js","rules/rules.js","templates/About.js","abouts/rasterizer.js","abouts/rotorizer.js","abouts/foundry.js","Contexts.js","components/FontPreview.js","components/Log.js","components/TextInput.js","components/RangeInput.js","components/FileInput.js","components/Form.js","components/Layer.js","templates/DetailView.js","templates/DetailViewOverlay.js","templates/ListView.js","templates/ListViewOverlay.js","App.js","index.js"],"names":["linkRule","textDecoration","props","to","className","css","useContext","ContentVisibilityContext","useNavigate","useFela","onClick","e","children","pathname","extend","condition","style","NavLink","startsWith","location","useLocation","Link","navRule","padding","menuItemRule","aboutRule","content","subUlRule","display","flexDirection","Nav","homeRef","useRef","setNavHeight","filterRoutes","handleOnResize","height","current","getBoundingClientRect","useEffect","window","addEventListener","removeEventListener","ref","includes","map","route","index","key","title","type","filterIdentifier","numberOfLayers","layerColors","variableFontControlSliders","label","tag","min","max","default","inputs","name","dictToFontVariationSettings","dict","value","Object","keys","reduce","collector","push","join","column","nth","gridColumn","pageFade","transition","opacity","mounted","abouts","rasterizer","rotorizer","foundry","articleRule","maxWidth","marginTop","About","identifier","useState","setMounted","FormInputsContext","createContext","InputFontContext","PreviewStringsContext","PreviewedInputFontContext","PreviewedOutputFontsContext","FontVariationsContext","FontPreviewMarginsContext","FontPreviewsContext","SetCursorFileDrag","dropItRule","dragIndicationVisible","zIndex","position","top","right","bottom","left","background","dropItTitleRule","whiteSpace","fontSize","Contexts","inputFont","setInputFont","previewedInputFont","setPreviewedInputFont","marginBottom","fontPreviewMargins","_setFontPreviewMargins","setDragIndicationVisible","dragIndication","setDragIndication","dropIndicationRef","fontPreviews","setTimeout","filterRoute","Array","previewedOutputFonts","_setPreviewedOutputFonts","previewStrings","_setPreviewString","inputCollector","input","formInputValues","_setFormInputsValue","slider","fontVariations","_setFontVariations","isMounted","Provider","setPreviewString","setPreviewedOutputFonts","setFontVariations","parseInt","setFormInputValue","setFontPreviewMargins","margins","itemRule","fontFamily","inListView","color","visible","userSelect","textRendering","transform","willChange","fontVariationSettings","containerRule","width","alignItems","justifyContent","React","memo","contentRef","Log","length","message","inputRule","outline","border","TextInput","onChange","disabled","inputRef","checkValidity","valueIndicatorRule","fontVariantNumeric","borderRadius","appearance","boxShadow","filter","cursor","RangeInput","animatable","animationInterval","animating","DetailViewContext","currentValue","setCurrentValue","clearInterval","target","buttonRule","lastTimeStamp","fileInputRef","dragState","setCursorFileDrag","fileIsDragged","handleDrop","preventDefault","stopPropagation","dataTransfer","files","handleDragEnter","clientX","clientY","handleDragLeave","handleDragOver","document","body","querySelector","pointerEvents","removeProperty","accept","click","isProcessingWrapperRule","require","isProcessingRule","animationName","paddingBottom","animationDuration","animationIterationCount","animationDirection","animationPlayState","isProcessing","formWrapperRule","formRule","gridTemplateColumns","gap","gridAutoRows","CancelToken","axios","Form","formRef","cancel","undefined","logContent","setLogContent","previewedString","setPreviewedString","getFormVisible","setGetFormVisible","setIsProcessing","prepareFormData","formData","FormData","append","forEach","now","Date","method","cancelToken","c","url","data","headers","then","response","warnings","outputFontsArrays","fonts","fontBase64","Uint8Array","from","atob","charCodeAt","Promise","all","arrayBuffer","inputFontBuffer","FontFace","outputFontArray","outputFonts","add","outputFont","family","catch","thrown","isCancel","console","log","finally","sendPreviewRequest","letter","animationDelay","fontPreview","RTTX","Boolean","Error","responseType","layerRule","lineHeight","transitionDuration","transitionTimingFunction","transitionProperty","previewedFontFamily","setPreviewedFontFamily","previewedChildren","setPreviewedChildren","setVisible","fullscreenRule","minHeight","overflow","DetailView","setFontSize","innerHeight","setInnerHeight","touchAction","navHeight","formHeight","ulRule","fontPreviewContainerRule","ListView","getMaxFontSizes","Math","ceil","text","span","createElement","innerHTML","appendChild","offsetWidth","removeChild","floor","clientWidth","getMaxFontSize","contentBackgroundRule","isTouching","transitionWidth","transitionHeight","appRule","App","lastInnerWidth","innerWidth","contentIsVisible","setContentIsVisible","fontSizes","setFontSizes","setIsTouching","setTransitionWidth","setTransitionHeight","values","listViewFontSize","setListViewFontSize","contentBackground","lastTouchTimestamp","handleMouseEnter","handleCursorY","clientHeight","pageY","handleTouchStart","touches","pageX","handleOnTouchMove","x1","x2","abs","ready","routes","element","value_","path","renderer","createRenderer","plugins","embedded","multipleSelectors","responsiveValue","margin","renderStatic","boxSizing","fontWeight","overscrollBehavior","listStyleType","textAlign","minWidth","font","extension","renderFont","ReactDOM","render","RendererProvider","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.784c7aa3.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { Link, NavLink, useNavigate } from \"react-router-dom\";\nimport { ContentVisibilityContext } from \"../App\";\n\nconst linkRule = () => ({\n  textDecoration: \"None\"\n});\n\nexport default function (props) {\n  const { to, className = \"\" } = props;\n  const setContentIsVisible = useContext(ContentVisibilityContext);\n  const navigate = useNavigate();\n  const { css } = useFela();\n\n  function delayAndGo(e) {\n    // e.preventDefault();\n    // setContentIsVisible(false);\n    // setTimeout(() => {\n    //   navigate(to);\n    //   setContentIsVisible(true);\n    // }, 350 + 50);\n  }\n  return (\n    <Link to={to} onClick={delayAndGo} className={`${css(linkRule)} ${className}`}>\n      {props.children}\n    </Link>\n  );\n}\n","import React from 'react'\nimport { useFela } from 'react-fela'\nimport { useLocation } from 'react-router-dom'\nimport Link from './Link'\n\nconst linkRule = ({pathname, condition}) => ({\n    extend: [{\n        condition: condition(pathname),\n        style: {\n            textDecoration: \"underline !important\",\n        }\n    }]\n})\n\nfunction NavLink(props) {\n    const {to, className = \"\", condition = (pathname) => {\n        return pathname.startsWith(to)\n    }} = props\n    const location = useLocation()\n    const {css} = useFela({pathname: location.pathname, to, condition})\n\n    return (\n        <Link to={to} className={`${css(linkRule)} ${className}`}>{props.children}</Link>\n    )\n}\n\nexport default NavLink\n","import React, { useEffect, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { useLocation } from \"react-router\";\nimport NavLink from \"./NavLink\";\n\nconst navRule = () => ({\n  padding: \"10px\",\n  // position: \"sticky\",\n  // top: 0,\n});\n\nconst menuItemRule = () => ({});\n\nconst aboutRule = () => ({\n  \":before\": {\n    content: '\", \"',\n  },\n});\n\nconst subUlRule = () => ({\n  display: \"flex\",\n  flexDirection: \"row\",\n});\n\nfunction Nav(props) {\n  const homeRef = useRef();\n  const { setNavHeight, filterRoutes } = props;\n  const { css } = useFela();\n  const location = useLocation();\n\n  function handleOnResize() {\n    const { height } = homeRef.current.getBoundingClientRect();\n    setNavHeight(height + 20);\n  }\n\n  useEffect(() => {\n    handleOnResize();\n  }, [location]);\n\n  useEffect(() => {\n    handleOnResize();\n    window.addEventListener(\"resize\", handleOnResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleOnResize);\n    };\n  }, []);\n\n  return (\n    <nav className={css(navRule)}>\n      <ul>\n        <li ref={homeRef} className={css(menuItemRule)}>\n          <ul className={css(subUlRule)}>\n            <li>\n              <NavLink\n                to={\"/\"}\n                condition={(pathname) => [\"/\", \"/about\"].includes(pathname)}\n              >\n                no design foundry\n              </NavLink>\n            </li>\n            {(location.pathname === \"/\" || location.pathname === \"/about\") && (\n              <li>\n                <NavLink\n                  to={\"/about\"}\n                  className={css(aboutRule)}\n                  condition={(pathname) => pathname === \"/about\"}\n                >\n                  about\n                </NavLink>\n              </li>\n            )}\n          </ul>\n        </li>\n        {location.pathname !== \"/\" &&\n          filterRoutes.map((route, index) => (\n            <li key={`nav_${index}`}>\n              <ul className={css(subUlRule)}>\n                <li className={css(menuItemRule)}>\n                  <NavLink to={route.route}>{route.title}</NavLink>\n                </li>\n                {location.pathname.startsWith(route.route) && (\n                  <li>\n                    <NavLink\n                      to={`${route.route}/about`}\n                      className={css(aboutRule)}\n                    >\n                      about\n                    </NavLink>\n                  </li>\n                )}\n              </ul>\n            </li>\n          ))}\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","export default [\n  {\n    type: \"filterListView\",\n    route: \"/\",\n  },\n  {\n    type: \"filterDetailView\",\n    title: \"Rotorizer\",\n    filterIdentifier: \"rotorizer\",\n    route: \"/rotorizer\",\n    numberOfLayers: 2,\n    layerColors: [\"gray\", \"#000\"],\n    variableFontControlSliders: [\n      {\n        label: \"rotation\",\n        tag: \"RTTX\",\n        min: 0,\n        max: 360,\n        default: 130,\n      },\n    ],\n    inputs: [\n      {\n        type: \"range\",\n        label: \"depth\",\n        name: \"depth\",\n        min: 2,\n        max: 600,\n        default: 100,\n      },\n    ],\n  },\n  {\n    type: \"filterDetailView\",\n    title: \"Rastr\",\n    filterIdentifier: \"rasterizer\",\n    route: \"/rasterizer\",\n    numberOfLayers: 1,\n    layerColors: [\"#000\"],\n    inputs: [\n      {\n        type: \"range\",\n        label: \"resolution\",\n        name: \"resolution\",\n        min: 10,\n        max: 150,\n        default: 20,\n      },\n    ],\n  },\n];\n","export function getMaxFontSize(text, fontFamily) {\n  const span = document.createElement(\"span\");\n  span.innerHTML = text;\n  span.style.fontSize = \"200px\"\n  span.style.fontFamily = fontFamily\n  document.body.appendChild(span);\n  const { offsetWidth } = span;\n  document.body.removeChild(span);\n  return Math.floor(200 * ((document.body.clientWidth-20)/offsetWidth));\n}\n\nexport function dictToFontVariationSettings(dict) {\n  const value = Object.keys(dict).reduce((collector, key) => {\n    collector.push(`\"${key}\" ${dict[key]}`)\n    return collector\n  }, []).join(\", \")\n  return value ? value : null\n}\n\n\n","export const column = (nth) => () => ({\n    gridColumn: nth\n  })\n\n\nexport const pageFade = ({mounted}) => ({\n  transition: \"opacity .35s ease-in\",\n  opacity: mounted ? 1 : 0\n})\n\n","import React, { useEffect, useState } from \"react\";\nimport Markdown from \"markdown-to-jsx\";\nimport rasterizer from \"../abouts/rasterizer.js\";\nimport rotorizer from \"../abouts/rotorizer.js\";\nimport foundry from \"../abouts/foundry.js\";\nimport { useFela } from \"react-fela\";\nimport { pageFade } from \"../rules/rules.js\";\n\nconst abouts = {\n  rasterizer,\n  rotorizer,\n  foundry,\n};\n\nconst articleRule = () => ({\n  padding: \"calc(1em - 10px) 10px 10px 10px\",\n  maxWidth: \"50ch\",\n  \"& p + p\": {\n    marginTop: \"1em\",\n  },\n});\n\nfunction About(props) {\n  const { identifier } = props;\n  const [mounted, setMounted] = useState(false);\n  useEffect(() => {\n    setMounted(true)\n    return () => {\n        setMounted(false)\n    }\n  }, []);\n  const { css } = useFela({ mounted });\n  return (\n    <article className={css(articleRule, pageFade)}>\n      <Markdown>{abouts[identifier]}</Markdown>\n    </article>\n  );\n}\n\nexport default About;\n","\nexport default `<p>A font that had this filter applied on went through the process of rasterisation. It's the same rasterization that rasterizes fonts on your iPhone or a Android phone, a coffee machines or something completely else. Software behind it is called <a href=\"https://freetype.org/\" target=\"_blank\">FreeType</a> and it's an open source rasterizer that is used in the industry. </p>\n<p>Such rasterisation is very complex process, it uses font's information called hinting. Hinting simply hints the rasterizer what to do. It can tell it to make sure to have this stroke the same amount of pixels as this stroke or show overshoot only if the font size is above 20px. If the font doesn't contain any hinting, then the rasterizer tries to do its best job.</p>\n<p>General rule is that fonts with suffix <code>.ttf</code> should have better displaying capabilities than fonts ending with <code>.otf</code>. Old classic as Verdana, Arial or Times New Roman perform very well when rasterised in small sizes. </p>\n<p>The smallest sizes in some of the older fonts were specially prepared as separate bitmaps. Someone was really there, drawing that system font bitmap of eight pixels!</p>`\n","\nexport default `<p>There was a typeface that was soon replaced by an algorithm, this typeface's only distinctive feature was something that soon every font can turn into.</p>\n<p>The font is dead, long live the algorithm!</p>\n<p>It was a long journey of slowly learning how to automate my tedious inhuman workflow to produce the variable font until completely automating it.</p>\n<p>It already asks the question of our future lives, are we gonna be all replaced by an algorithm? What kind of work will humans do? Only the creative one? I don't know, but lets leave production of such fonts to an algorithm.</p>`\n","\nexport default `<p>This is the type foundry without any typefaces. It contains collection of filters that can be applied on already existing fonts, the ones you already have. It tries to reuse and refresh already existing fonts and designs.</p>\n<p>This website doesn't store your fonts, your fonts are only processed on the server and send to you directly.</p>\n<p>This project is primarily work of <a href=\"https://www.jansindler.com\" target=\"_blank\">Jan Šindler</a>, but also of many others who directly or indirectly influenced this project. Thank you: <a href=\"https://www.hallotype.nl/\" target=\"_blank\">Thom Janssen</a>, <a href=\"https://www.youtube.com/watch?v=7uNYg98YTNI\" target=\"_blank\">Oli Sabin</a>, <a href=\"https://rosettatype.com/\" target=\"_blank\">David Březina</a>, Just van Rossum &amp; everyone at <a href=\"https://typemedia.org/\" target=\"_blank\">TM</a> &amp; everyone who keeps maintained all the libraries that I am using in this project.</p>`\n","import React, { createContext, useState, useEffect, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { filterRoutes } from \"./App\";\n\nexport const FormInputsContext = createContext();\nexport const InputFontContext = createContext();\nexport const PreviewStringsContext = createContext();\nexport const PreviewedInputFontContext = createContext();\nexport const PreviewedOutputFontsContext = createContext();\nexport const FontVariationsContext = createContext();\nexport const FontPreviewMarginsContext = createContext();\nexport const FontPreviewsContext = createContext();\nexport const SetCursorFileDrag = createContext();\n\nconst fontPreviewOpacityTransition = 350;\nconst dragIndicationTransition = 100;\n\nconst dropItRule = ({dragIndicationVisible}) => ({\n  zIndex: 1000,\n  position: \"fixed\",\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  background: \"#eee\",\n  transition: `opacity ${dragIndicationTransition}ms ease-in`,\n  opacity: dragIndicationVisible ? 1 : 0\n})\n\nconst dropItTitleRule = () => ({\n  position: \"absolute\",\n  whiteSpace: \"nowrap\",\n  fontSize: \"50px\"\n})\n\nfunction Contexts(props) {\n  const [inputFont, setInputFont] = useState(null);\n  const [previewedInputFont, setPreviewedInputFont] = useState(null);\n  // const [cursorFileDrag, setCursorFileDrag] = useState(false);\n  const [fontPreviewMargins, _setFontPreviewMargins] = useState({\n    marginBottom: 0,\n    marginTop: 0,\n  });\n  const [dragIndicationVisible, setDragIndicationVisible] = useState(false)\n  const [dragIndication, setDragIndication] = useState(false)\n  const dropIndicationRef = useRef()\n  \n  const fontPreviews = useRef([]);\n\n  useEffect(() => {\n    if (dragIndication) {\n      setDragIndicationVisible(true)\n    }\n  }, [dragIndication])\n\n  useEffect(() => {\n    if (!dragIndicationVisible) {\n      setTimeout(() => {\n        setDragIndication(false)\n      }, dragIndicationTransition)\n    }\n  }, [dragIndicationVisible])\n  \n  function setCursorFileDrag(value) {\n    if (value) {\n      setDragIndication(true)\n      dropIndicationRef.current.style.left = value.left + \"px\"\n      dropIndicationRef.current.style.top = value.top + \"px\"\n    }\n    else {\n      setDragIndicationVisible(false)\n    }\n  }\n\n\n  function setFontPreviewMargins(margins) {\n    setTimeout(() => {\n      _setFontPreviewMargins(margins);\n    }, fontPreviewOpacityTransition);\n  }\n\n  const [previewedOutputFonts, _setPreviewedOutputFonts] = useState(\n    filterRoutes.reduce((collector, filterRoute) => {\n      collector[filterRoute.filterIdentifier] = Array(\n        filterRoute.numberOfLayers\n      );\n      return collector;\n    }, {})\n  );\n\n  const [previewStrings, _setPreviewString] = useState(\n    filterRoutes.reduce((collector, filterRoute) => {\n      collector[filterRoute.filterIdentifier] = filterRoute.title;\n      return collector;\n    }, {})\n  );\n\n  const [formInputValues, _setFormInputsValue] = useState(\n    filterRoutes.reduce((collector, filterRoute) => {\n      collector[filterRoute.filterIdentifier] = [\n        ...filterRoute.inputs,\n        ...(filterRoute?.variableFontControlSliders ?? []),\n      ].reduce(\n        (inputCollector, input) => {\n          inputCollector[input.name] = input.default;\n          return inputCollector;\n        },\n        { fontSize: null }\n      );\n      return collector;\n    }, {})\n  );\n\n  const [fontVariations, _setFontVariations] = useState(\n    filterRoutes.reduce((collector, filterRoute) => {\n      if (filterRoute.variableFontControlSliders) {\n        collector[filterRoute.filterIdentifier] =\n          filterRoute.variableFontControlSliders.reduce((collector, slider) => {\n            collector[slider.tag] = slider.default;\n            return collector;\n          }, {});\n      }\n      return collector;\n    }, {})\n  );\n\n  const isMounted = useRef(false);\n\n  useEffect(() => {\n    if (isMounted.current) {\n      // setTimeout(()=>{\n      //   inputFont\n      //     .arrayBuffer()\n      //     .then((data) => opentype.parse(data))\n      //     .then((font) => font.tables.os2)\n      //     .then((os2) => {\n      //       const { sCapHeight, sTypoLineGap, usWinDescent, usWinAscent } = os2;\n      //       const marginBottom = -usWinDescent / usWinAscent;\n      //       const marginTop = sTypoLineGap !== 0 ? sCapHeight / usWinAscent - 1 : 0;\n      //       setFontPreviewMargins({ marginBottom, marginTop });\n      //     });\n      // }, fontPreviewOpacityTransition)\n    }\n  }, [inputFont]);\n\n  useEffect(() => {\n    isMounted.current = true;\n  }, []);\n\n  function setPreviewedOutputFonts(filterIdentifier, value) {\n    let collector = {};\n    collector[filterIdentifier] = value;\n    _setPreviewedOutputFonts({ ...previewedOutputFonts, ...collector });\n  }\n\n  function setFontVariations(filterIdentifier, tag, value) {\n    let collector = { ...fontVariations };\n    collector[filterIdentifier][tag] = parseInt(value);\n    _setFontVariations(collector);\n  }\n\n  function setFormInputValue(filterIdentifier, name, value) {\n    let collector = { ...formInputValues };\n    collector[filterIdentifier][name] = value;\n    _setFormInputsValue(collector);\n  }\n  function setPreviewString(filterIdentifier, value) {\n    let collector = { ...previewStrings };\n    collector[filterIdentifier] = value;\n    _setPreviewString(collector);\n  }\n\n  const { css } = useFela({dragIndicationVisible});\n\n  return (\n    <PreviewStringsContext.Provider\n      value={{ previewStrings, setPreviewString }}\n    >\n      <PreviewedOutputFontsContext.Provider\n        value={{ previewedOutputFonts, setPreviewedOutputFonts }}\n      >\n        <FontVariationsContext.Provider\n          value={{ fontVariations, setFontVariations }}\n        >\n          <FormInputsContext.Provider\n            value={{ formInputValues, setFormInputValue }}\n          >\n            <InputFontContext.Provider value={{ inputFont, setInputFont }}>\n              <PreviewedInputFontContext.Provider\n                value={{ previewedInputFont, setPreviewedInputFont }}\n              >\n                <FontPreviewMarginsContext.Provider\n                  value={{ fontPreviewMargins, setFontPreviewMargins }}\n                >\n                  <FontPreviewsContext.Provider value={fontPreviews}>\n                    <SetCursorFileDrag.Provider value={setCursorFileDrag}>\n                      {dragIndication ? (\n                        <div className={css(dropItRule)}>\n                          <div ref={dropIndicationRef} className={css(dropItTitleRule)}>\n                            Drop it!\n                          </div>\n                        </div>\n                      ) : (\n                        <></>\n                      )}\n                      {props.children}\n                    </SetCursorFileDrag.Provider>\n                  </FontPreviewsContext.Provider>\n                </FontPreviewMarginsContext.Provider>\n              </PreviewedInputFontContext.Provider>\n            </InputFontContext.Provider>\n          </FormInputsContext.Provider>\n        </FontVariationsContext.Provider>\n      </PreviewedOutputFontsContext.Provider>\n    </PreviewStringsContext.Provider>\n  );\n}\n\nexport default Contexts;\n","import React, { useEffect, useState, useRef, useContext } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { dictToFontVariationSettings } from \"../misc\";\nimport { FontPreviewMarginsContext, FontPreviewsContext } from \"../Contexts\";\n\n\nconst itemRule = ({\n  fontFamily,\n  inListView,\n  visible,\n  color,\n  marginBottom,\n  marginTop,\n  fontVariations,\n}) => ({\n  userSelect: \"none\",\n  whiteSpace: \"nowrap\",\n  textRendering: \"optimizeSpeed\",\n  marginBottom: `${\n    inListView || (!inListView && marginBottom) ? -0.226 : marginBottom\n  }em`,\n  marginTop: `${\n    inListView || (!inListView && marginTop) ? -0.204 : marginTop\n  }em`,\n  transform: \"translateZ(0)\",\n  willChange: \"font-size, font-variation-settings, opacity, filter\",\n  fontFamily: fontFamily ? fontFamily : \"unset\",\n  extend: [\n    {\n      condition: color,\n      style: {\n        color,\n      },\n    },\n    {\n      condition: fontVariations,\n      style: {\n        fontVariationSettings: dictToFontVariationSettings(fontVariations),\n      },\n    },\n  ],\n});\n\nconst containerRule = ({ inListView }) => ({\n  zIndex: -1,\n  userSelect: \"none\",\n  position: \"absolute\",\n  top: 0,\n  left: 0,\n  width: \"100vw\",\n  height: \"100vh\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: inListView ? \"flex-start\" : \"center\",\n  extend: [\n    {\n      condition: inListView,\n      style: {\n        height: \"100%\",\n      },\n    },\n  ],\n});\n\nfunction FontPreview(props) {\n  const {\n    inListView = false,\n    color,\n    children,\n    fontVariations = {},\n    fontSize,\n  } = props;\n  const contentRef = useRef();\n  const { marginBottom, marginTop } = useContext(\n    FontPreviewMarginsContext\n  ).fontPreviewMargins;\n  const fontPreviews = useContext(FontPreviewsContext);\n\n  useEffect(() => {\n    if (fontPreviews) {\n      fontPreviews.current.push(contentRef.current);\n    }\n  }, []);\n\n  useEffect(() => {\n    contentRef.current.style.fontSize = fontSize + \"px\";\n  }, [fontSize]);\n\n  const { css } = useFela({\n    inListView,\n    color,\n    marginTop,\n    marginBottom,\n    fontVariations,\n  });\n\n  return (\n    <div className={css(containerRule)}>\n      <span ref={contentRef} className={css(itemRule)}>\n        {children}\n      </span>\n    </div>\n  );\n}\n\nexport default React.memo(FontPreview);\n","import React from \"react\";\n\nfunction Log(props) {\n  const { content } = props;\n  return content.length ? (\n    <ul>\n      {content.map((message, index) => (\n        <li key={index}>{message}</li>\n      ))}\n    </ul>\n  ) : (\n    <></>\n  );\n}\n\nexport default Log;\n","import React, { useEffect, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { column } from \"../rules/rules\";\n\nconst inputRule = () => ({\n  background: \"transparent\",\n  outline: \"none\",\n  border: \"none\"\n})\n\nfunction TextInput(props) {\n  const { label, value, onChange, disabled } = props;\n  const inputRef = useRef();\n  const { css } = useFela();\n  useEffect(() => {\n    inputRef.current.value = value\n  }, []);\n\n  function handleOnChange() {\n    if (inputRef.current.checkValidity()) {\n      if (onChange) {\n        onChange(inputRef.current.value);\n      }\n    }\n  }\n  return (\n    <>\n      <label className={css(column(1))} disabled={disabled}>{label}</label>\n      <input\n        ref={inputRef}\n        className={css(inputRule, column(2))}\n        type=\"text\"\n        onChange={handleOnChange}\n        disabled={disabled}\n      ></input>\n    </>\n  );\n}\n\nexport default TextInput;\n","import React, { useEffect, useRef, useContext, useState } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { FormInputsContext } from \"../Contexts\";\nimport { column } from \"../rules/rules\";\nimport { DetailViewContext } from \"../templates/DetailView\";\n\nconst valueIndicatorRule = () => ({\n  fontVariantNumeric: \"tabular-nums\",\n  padding: \"0 .2em\",\n});\n\nconst borderRadius = [\"12px\", \"8px\"]\nconst inputRule = ({position}) => ({\n  appearance: \"none\",\n  \"-webkit-appearance\": \"none\",\n  height: [\"12px\", \"8px\"],\n  borderRadius,\n  boxShadow: \"inset 0 2px 2px #00000066\",\n  \"&::-webkit-slider-thumb, &::-moz-range-thumb\": {\n    appearance: \"none\",\n    \"-webkit-appearance\": \"none\",\n    height: [\"26px\", \"18px\"],\n    width: [\"26px\", \"18px\"],\n    background: \"#333\",\n    borderRadius: \"100%\",\n    filter: \"drop-shadow(0 2px 3px #00000066)\",\n    border: \"none\",\n    outline: \"none\",\n    cursor: \"pointer\"\n  },\n  \n  background: \"#EEE\",\n  \"&::-moz-range-progress\": {\n    boxShadow: \"inset 0 2px 2px #00000066\",\n    background: \"#CCC\",\n    height: \"100%\",\n    borderRadius\n  },\n  \"@supports not selector(::-moz-range-progress)\": {\n    background: `linear-gradient(to right, #CCC 0%, #CCC ${position}%, #EEE ${position}%, #EEE 100%)`,\n    \"&:disabled\": {\n      background: `linear-gradient(to right, #DDD 0%, #DDD ${position}%, #EEE ${position}%, #EEE 100%) !important`,\n    },\n  },\n  \"&:disabled\": {\n    \"&::-webkit-slider-thumb, &::-moz-range-thumb\": {\n      background: \"#EEE\"\n    }\n  }\n})\n\nfunction RangeInput(props) {\n  const {\n    className,\n    label,\n    name,\n    min,\n    max,\n    value,\n    onChange,\n    animatable = false,\n    disabled = false,\n  } = props;\n  const inputRef = useRef();\n  const animationInterval = useRef();\n  const [animating, setAnimating] = useState();\n  const { filterIdentifier } = useContext(DetailViewContext);\n  const { setFormInputValue } = useContext(FormInputsContext);\n  const [currentValue, setCurrentValue] = useState(value);\n  const { css } = useFela({animating, position:currentValue/max*100});\n  \n  useEffect(() => {\n    inputRef.current.value = currentValue;\n    return () => {\n      clearInterval(animationInterval.current)\n    }\n  }, []);\n  \n  function handleOnChange(e) {\n    if (inputRef.current.checkValidity()) {\n      const value = parseInt(e.target.value);\n      setCurrentValue(value);\n      if (onChange) {\n        onChange(e.target.value);\n      }\n      if (name) {\n        setFormInputValue(filterIdentifier, name, value);\n      }\n    }\n  }\n\n  // function handleOnClickAnimate() {\n  //   if (animating === true) {\n  //     clearInterval(animationInterval.current);\n  //   } else {\n  //     let counter = 0;\n  //     const start = currentValue;\n  //     animationInterval.current = setInterval(() => {\n  //       const position = (start + counter) % 720;\n  //       const value = Math.round(position - 360 < 0 ? position : 360 - (position % 360))\n  //       setCurrentValue(value)\n  //       inputRef.current.value = value;\n  //       if (onChange) {\n  //         onChange(value)\n  //       }\n  //       const offset =\n  //         10 - ((Math.cos((Math.PI * position) / 180) + 1) / 2) * 9;\n  //       counter += offset;\n  //     }, 1000 / 30);\n  //   }\n  //   setAnimating(!animating);\n  // }\n\n  return (\n    <>\n      <label className={[css(column(1)), className].join(\" \")} disabled={disabled}>{label}</label>\n      {/* {animatable && (\n        <button className={css(buttonRule, column(2))} onClick={handleOnClickAnimate}>\n          <span>{animating ? \"stop\" : \"play\"}</span>\n          <span className={css(placeholderRule)} aria-label=\"hidden\">play</span>\n          <span className={css(placeholderRule)} aria-label=\"hidden\">stop</span>\n        </button>\n      )} */}\n      <input\n        ref={inputRef}\n        className={[css(column(2), inputRule), className].join(\" \")}\n        type=\"range\"\n        onChange={handleOnChange}\n        min={min}\n        max={max}\n        disabled={disabled}\n      ></input>\n      <div className={[css(valueIndicatorRule), className].join(\" \")} disabled={disabled}>\n        {currentValue}\n      </div>\n    </>\n  );\n}\n\nexport default RangeInput;\n","import React, { useContext, useRef, useEffect, useState } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { InputFontContext, SetCursorFileDrag } from \"../Contexts\";\nimport { column } from \"../rules/rules\";\n\nconst fullscreenDragRule = ({ fileIsDragged }) => ({\n  position: \"fixed\",\n  fontSize: \"4em\",\n  top: 0,\n  zIndex: 10000,\n  backgroundColor: \"#fff\",\n  opacity: 1,\n  left: 0,\n  right: 0,\n  bottom: 0,\n});\n\n\nconst draggedRule = () => ({\n  position: \"absolute\",\n  // transform: \"translate(-50%, -50%)\"\n});\n\nconst dropItRule = () => ({\n  display: [\"none\", \"inline\"],\n});\n\nconst buttonRule = () => ({\n  whiteSpace: \"no-wrap\"\n});\n\nfunction FileInput(props) {\n  const { label } = props;\n  const fileInputRef = useRef();\n  const dragState = useRef();\n  const setCursorFileDrag = useContext(SetCursorFileDrag)\n  const { inputFont, setInputFont } = useContext(InputFontContext);\n  const [fileIsDragged, setFileIsDragged] = useState(false);\n  const { css } = useFela({ fileIsDragged });\n\n  useEffect(() => {\n    if (fileIsDragged) {\n      document.body.querySelector(\"#root\").style.pointerEvents = \"none\";\n      dragState.current = \"moving\";\n    } else {\n      document.body\n        .querySelector(\"#root\")\n        .style.removeProperty(\"pointer-events\");\n    }\n  }, [fileIsDragged]);\n\n  function handleDrop(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.dataTransfer?.files.length === 1) {\n      setInputFont(e.dataTransfer.files[0]);\n      dragState.current = null;\n    }\n    setCursorFileDrag(false);\n  }\n\n  function handleDragEnter(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    dragState.current = \"entered\";\n    const { clientX: left, clientY: top } = e;\n    setCursorFileDrag({left, top})\n  }\n\n  function handleDragLeave(e) {\n    if (dragState.current === \"moving\") {\n      e.preventDefault();\n      e.stopPropagation();\n      setCursorFileDrag(false);\n      dragState.current = \"left\";\n    }\n  }\n\n  function handleDragOver(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const { clientX: left, clientY: top } = e;\n    setCursorFileDrag({ left, top });\n  }\n\n  function handleOnChange(e) {\n    if (e.target.files.length === 1) {\n      setInputFont(e.target.files[0]);\n    }\n  }\n\n  function handleOnClick(e) {\n    fileInputRef.current.click();\n  }\n\n  useEffect(() => {\n    document.body.addEventListener(\"dragenter\", handleDragEnter);\n    document.body.addEventListener(\"dragleave\", handleDragLeave);\n    document.body.addEventListener(\"dragover\", handleDragOver);\n    document.body.addEventListener(\"drop\", handleDrop);\n    return () => {\n      document.body.removeEventListener(\"dragleave\", handleDragLeave);\n      document.body.removeEventListener(\"dragenter\", handleDragEnter);\n      document.body.removeEventListener(\"dragover\", handleDragOver);\n      document.body.removeEventListener(\"drop\", handleDrop);\n    };\n  }, []);\n  return (\n    <>\n      <label className={css(column(1))}>{label}</label>\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        onChange={handleOnChange}\n        style={{ display: \"none\" }}\n        accept=\".ttf,.otf,woff,woff2\"\n      ></input>\n      <button className={css(column(2), buttonRule)} onClick={handleOnClick}>\n        <span>{inputFont?.name ?? \"select file\"}</span>{!inputFont?.name && <span className={css(dropItRule)}> or drop it</span>}\n      </button>\n      {/* <span className={css(dropItRule, column(\"4 / span 2\"))}> or drop it</span> */}\n      {/* {fileIsDragged && (\n        <div className={css(fullscreenDragRule)}>\n          <span className={css(draggedRule)} style={cursorDrag}>\n            Drop it\n          </span>\n        </div>\n      )} */}\n    </>\n  );\n}\n\nexport default React.memo(FileInput);\n","import React, { useRef, useEffect, useState, useContext } from \"react\";\nimport {\n  FontPreviewMarginsContext,\n  FontPreviewsContext,\n  FontVariationsContext,\n  FormInputsContext,\n  InputFontContext,\n  PreviewedInputFontContext,\n  PreviewedOutputFontsContext,\n  PreviewStringsContext,\n} from \"../Contexts\";\nimport Log from \"../components/Log\";\nimport { useFela } from \"react-fela\";\nimport axios from \"axios\";\nimport { column, pageFade } from \"../rules/rules\";\nimport { dictToFontVariationSettings } from \"../misc\";\nimport TextInput from \"../components/TextInput\";\nimport RangeInput from \"../components/RangeInput\";\nimport FileInput from \"../components/FileInput\";\n\nvar FileSaver = require('file-saver');\n\n\nconst isProcessingWrapperRule = () => ({\n  display: \"flex\",\n  alignItems: \"flex-end\",\n  flexDirection: \"row\",\n});\n\nconst isProcessingRule = ({ isProcessing }) => ({\n  display: \"block\",\n  animationName: {\n    \"0%\": { paddingBottom: \".5em\" },\n    \"40%\": { paddingBottom: \"0\" },\n    \"100%\": { paddingBottom: \"0\" },\n  },\n  animationDuration: \"1s\",\n  animationIterationCount: \"infinite\",\n  animationDirection: \"alternate-reverse\",\n  animationPlayState: isProcessing ? \"processing\" : \"paused\",\n});\n\nconst formWrapperRule = () => ({\n  bottom: 0,\n  position: \"fixed\",\n  transform: \"translateZ(0)\",\n  flexDirection: \"column\",\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  transition: \"height .05s ease-in\",\n});\n\nconst formRule = () => ({\n  pointerEvents: \"all\",\n  display: \"grid\",\n  gridTemplateColumns: [\"auto auto 3ch auto\", \"repeat(4, min-content) 3ch\"],\n  width: [\"calc(100% - 10px)\", \"auto\"],\n  gap: \"0px 6px\",\n  gridAutoRows: \"1.2em\",\n  whiteSpace: \"nowrap\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  marginBottom: \"10px\",\n});\n\nconst CancelToken = axios.CancelToken;\nlet lastTimeStamp;\n\nfunction Form(props) {\n  const { filterIdentifier, inputs, fontSize, variableFontControlSliders } =\n    props;\n\n  const { formInputValues } = useContext(FormInputsContext);\n  const { setPreviewedOutputFonts } = useContext(PreviewedOutputFontsContext);\n  const { setFontPreviewMargins } = useContext(FontPreviewMarginsContext);\n  const { inputFont } = useContext(InputFontContext);\n  const { fontVariations } = useContext(FontVariationsContext);\n  const { previewStrings, setPreviewString } = useContext(\n    PreviewStringsContext\n  );\n  const { setPreviewedInputFont } = useContext(PreviewedInputFontContext);\n  const fontPreviews = useContext(FontPreviewsContext).current;\n\n  const formRef = useRef();\n  const cancel = useRef(undefined);\n\n  const [logContent, setLogContent] = useState([]);\n  const [mounted, setMounted] = useState(false);\n  const [previewedString, setPreviewedString] = useState(\n    previewStrings[filterIdentifier]\n  );\n  const [getFormVisible, setGetFormVisible] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n    return () => {\n      setGetFormVisible(false);\n      cancelRequest();\n    };\n  }, []);\n\n  const { css } = useFela({ mounted });\n\n  function cancelRequest() {\n    if (cancel.current !== undefined) {\n      setIsProcessing(false);\n      cancel.current(\"cancelled by user\");\n      cancel.current = undefined;\n    }\n  }\n\n  function prepareFormData() {\n    const formData = new FormData();\n    formData.append(\"font_file\", inputFont);\n    formData.append(\"preview_string\", previewedString);\n    Object.keys(formInputValues[filterIdentifier]).forEach((key) =>\n      formData.append(key, formInputValues[filterIdentifier][key])\n    );\n    return formData;\n  }\n\n  function sendGetRequest() {\n    const formData = prepareFormData();\n    axios({\n      method: \"post\",\n      url: `http://0.0.0.0:5000/filters/${filterIdentifier}/get`,\n      data: formData,\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n      responseType: \"blob\",\n    }).then((response) => {\n      console.log(response)\n      // const fileNameHeader = \"x-suggested-filename\";\n      // const suggestedFileName = response.headers[fileNameHeader];\n      // const effectiveFileName = (suggestedFileName === undefined\n      //             ? \"allergierOchPreferenser.xls\"\n      //             : suggestedFileName);\n      // FileSaver.saveAs(response.data, effectiveFileName);\n    });\n  }\n\n  function sendPreviewRequest() {\n    const formData = prepareFormData();\n    setIsProcessing(true);\n    let margins = {};\n    axios({\n      method: \"post\",\n      cancelToken: new CancelToken(function executor(c) {\n        cancel.current = c;\n      }),\n      url: `http://0.0.0.0:5000/filters/${filterIdentifier}`,\n      data: formData,\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    })\n      .then((response) => {\n        setLogContent(response.data.warnings);\n        if (response.data.margins) {\n          margins = response.data.margins;\n        }\n        const outputFontsArrays = response.data.fonts.map((fontBase64) =>\n          Uint8Array.from(atob(fontBase64), (c) => c.charCodeAt(0))\n        );\n        return Promise.all([inputFont.arrayBuffer(), outputFontsArrays]);\n      })\n      .then(([inputFontBuffer, outputFontsArrays]) => [\n        new FontFace(`preview-input-font-${Date.now()}`, inputFontBuffer),\n        outputFontsArrays.map(\n          (outputFontArray, index) =>\n            new FontFace(\n              `preview-output-font-${Date.now()}-${index}`,\n              outputFontArray\n            )\n        ),\n      ])\n      .then(([inputFont, outputFonts]) => {\n        document.fonts.add(inputFont);\n        outputFonts.map((outputFont) => document.fonts.add(outputFont));\n        return [inputFont, outputFonts];\n      })\n      .then(([inputFont, outputFonts]) => {\n        setPreviewedInputFont(inputFont.family);\n        setPreviewedOutputFonts(\n          filterIdentifier,\n          outputFonts.map((outputFont) => outputFont.family)\n        );\n      })\n      .catch((thrown) => {\n        if (axios.isCancel(thrown)) {\n          console.log(thrown.message);\n        } else {\n          console.log(thrown);\n        }\n      })\n      .finally(() => {\n        setIsProcessing(false);\n        setFontPreviewMargins(margins);\n      });\n  }\n\n  // form auto-submit\n  useEffect(() => {\n    if (mounted && inputFont) {\n      const now = Date.now();\n      lastTimeStamp = now;\n      setTimeout(function () {\n        if (now === lastTimeStamp) {\n          setPreviewString(filterIdentifier, previewedString);\n          sendPreviewRequest();\n        }\n      }, 500);\n    }\n  }, [formInputValues, inputFont, previewedString, filterIdentifier]);\n\n  return (\n    <div className={css(formWrapperRule, pageFade)}>\n      {isProcessing && (\n        <div className={css(isProcessingWrapperRule)}>\n          {[...\"processing...........\"].map((letter, index) => (\n            <span\n              key={`processing-${index}`}\n              className={css(isProcessingRule, () => ({\n                animationDelay: `${index / 10}s`,\n              }))}\n            >\n              {letter}\n            </span>\n          ))}\n        </div>\n      )}\n      <Log content={logContent} />\n      <div ref={formRef} className={css(formRule)}>\n        {variableFontControlSliders?.map((input, index) => (\n          <RangeInput\n            label={input.label}\n            key={`font_ui_${index}`}\n            min={input.min}\n            max={input.max}\n            tag={input.tag}\n            value={fontVariations[filterIdentifier][input.tag]}\n            onChange={(value) => {\n              fontPreviews.forEach(\n                (fontPreview) =>\n                  (fontPreview.style.fontVariationSettings =\n                    dictToFontVariationSettings({ RTTX: value }))\n              );\n            }}\n          />\n        ))}\n        <RangeInput\n          label={\"font size\"}\n          min={20}\n          max={1000}\n          value={fontSize}\n          onChange={(value) =>\n            fontPreviews.forEach(\n              (fontPreview) => (fontPreview.style.fontSize = value + \"px\")\n            )\n          }\n        />\n        <FileInput label=\"font file\"></FileInput>\n        <TextInput\n          label={\"preview\"}\n          value={previewStrings[filterIdentifier]}\n          onChange={(value) => setPreviewedString(value)}\n          disabled={!Boolean(inputFont)}\n        ></TextInput>\n        {inputs.map((input, index) => {\n          switch (input.type) {\n            case \"range\":\n              return (\n                <RangeInput\n                  label={input.label}\n                  name={input.name}\n                  key={`input_${filterIdentifier}_${index}`}\n                  min={input.min}\n                  max={input.max}\n                  value={formInputValues[filterIdentifier][input.name]}\n                  disabled={!Boolean(inputFont)}\n                ></RangeInput>\n              );\n            default:\n              throw new Error(\"component not found\");\n          }\n        })}\n        <button\n          className={css(column(4), pageFade)}\n          onClick={() => setGetFormVisible(!getFormVisible)}\n          disabled={!Boolean(inputFont)}\n        >\n          {getFormVisible ? \"hide\" : \"get\"}\n        </button>\n        {getFormVisible && (\n          <>\n            <hr className={css(column(\"1 / span 5\"))} />\n            <TextInput name=\"font_name\" label={\"font name\"} value=\"My Font\" />\n            <button className={css(column(\"5\"))} onClick={sendGetRequest}>\n              download\n            </button>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Form;\n","import React, {useEffect, useState} from \"react\";\nimport { useFela } from \"react-fela\";\n\nexport const fontPreviewOpacityTransition = 350;\n\nconst layerRule = ({ visible, fontFamily, color }) => ({\n  // position: \"absolute\",\n  lineHeight: 0,\n  transitionDuration: `${fontPreviewOpacityTransition}ms`,\n  transitionTimingFunction: \"ease-in\",\n  transitionProperty: \"opacity, filter\",\n  opacity: visible ? 1 : 0,\n  fontFamily,\n  color,\n});\n\nfunction Layer(props) {\n  const { fontFamily, children, color } = props;\n  const [previewedFontFamily, setPreviewedFontFamily] = useState(null)\n  const [previewedChildren, setPreviewedChildren] = useState(children)\n  const [visible, setVisible] = useState(false);\n\n\n  useEffect(()=>{\n    setVisible(true);\n    return () => {\n      setVisible(false)\n    }\n  }, [])\n\n  useEffect(() => {\n    setVisible(false)\n    setTimeout(() => {\n      setPreviewedFontFamily(fontFamily)\n      setPreviewedChildren(children)\n    }, fontPreviewOpacityTransition)\n  }, [fontFamily, children])\n\n  useEffect(() => {\n    setTimeout(()=>{\n      setVisible(true)\n    }, 100)\n  }, [previewedFontFamily, previewedChildren])\n\n  const { css } = useFela({ visible, fontFamily: previewedFontFamily, color });\n  return <div className={css(layerRule)}>{previewedChildren}</div>\n}\n\nexport default React.memo(Layer);\n","import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport {\n  PreviewedInputFontContext,\n  PreviewStringsContext,\n  FontPreviewsContext,\n} from \"../Contexts\";\nimport { useFela } from \"react-fela\";\nimport FontPreview from \"../components/FontPreview\";\nimport Form from \"../components/Form\";\nimport Layer from \"../components/Layer\";\n\nexport const DetailViewContext = createContext();\n\nconst fullscreenRule = () => ({\n  minHeight: `100%`,\n  top: 0,\n  position: \"absolute\",\n  width: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  padding: \"10px\",\n  pointerEvents: \"none\",\n  overflow: \"hidden\",\n});\n\nfunction DetailView(props) {\n  const {\n    inputs,\n    variableFontControlSliders,\n    filterIdentifier,\n    fontSize,\n    setFontSize,\n  } = props;\n  const { previewedInputFont } = useContext(PreviewedInputFontContext);\n  const { previewStrings } = useContext(PreviewStringsContext);\n  const [innerHeight, setInnerHeight] = useState(window.innerHeight);\n  const isMounted = useRef(false);\n  const { css } = useFela({ innerHeight });\n  const fontPreviews = useContext(FontPreviewsContext);\n\n  function handleOnResize(e) {\n    setInnerHeight(window.innerHeight);\n  }\n\n  useEffect(() => {\n    // new ResizeObserver(()=>{document.body.clientHeight}).observe(document.body)\n    isMounted.current = true;\n    document.body.style.touchAction = \"none\";\n    window.addEventListener(\"resize\", handleOnResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleOnResize);\n      document.body.style.removeProperty(\"touch-action\");\n      isMounted.current = false;\n      fontPreviews.current = [];\n    };\n  }, []);\n\n  return (\n    <DetailViewContext.Provider value={{ filterIdentifier }}>\n      <div className={css(fullscreenRule)}>\n        <FontPreview fontSize={fontSize}>\n          <Layer fontFamily={previewedInputFont}>\n            {previewStrings[filterIdentifier]}\n          </Layer>\n        </FontPreview>\n        <Form\n          variableFontControlSliders={variableFontControlSliders}\n          filterIdentifier={filterIdentifier}\n          inputs={inputs}\n          fontSize={fontSize}\n        />\n      </div>\n    </DetailViewContext.Provider>\n  );\n}\n\nexport default DetailView;\n","import React, { useContext } from \"react\";\nimport { useFela } from \"react-fela\";\nimport {\n  FontVariationsContext,\n  PreviewedOutputFontsContext,\n  PreviewStringsContext,\n} from \"../Contexts\";\nimport FontPreview from \"../components/FontPreview\";\nimport Layer from \"../components/Layer\";\n\nconst containerRule = ({ navHeight }) => ({\n  marginTop: `${navHeight}px`,\n});\n\nfunction DetailViewOverlay(props) {\n  const { filterIdentifier, navHeight, layerColors, formHeight, fontSize } = props;\n  const { previewStrings } = useContext(PreviewStringsContext);\n  const { previewedOutputFonts } = useContext(PreviewedOutputFontsContext);\n  const { fontVariations } = useContext(FontVariationsContext);\n  const { css } = useFela({ navHeight });\n\n  return (\n    <div className={css(containerRule)}>\n      {/* {layerColors.map((layerColor, index) => ( */}\n      <FontPreview\n        key={`${filterIdentifier}-overlay`}\n        fontVariations={fontVariations[filterIdentifier]}\n        formHeight={formHeight}\n        layerColors={layerColors}\n        fontSize={fontSize}\n      >\n        {layerColors.map((color, index) => (\n          <Layer\n            key={`${filterIdentifier}-overlay-layer-${index}`}\n            fontFamily={\n              previewedOutputFonts[filterIdentifier][index] ||\n              `${filterIdentifier}-${index}`\n            }\n            color={color}\n          >\n            {previewStrings[filterIdentifier]}\n          </Layer>\n        ))}\n      </FontPreview>\n    </div>\n  );\n}\n\nexport default React.memo(DetailViewOverlay);\n","import React from \"react\";\nimport { useFela } from \"react-fela\";\nimport FontPreview from \"../components/FontPreview\";\nimport Layer from \"../components/Layer\";\nimport Link from \"../components/Link\";\n\nexport const ulRule = () => ({\n  // overflowX: \"hidden\"\n})\n\nexport const fontPreviewContainerRule = ({ fontSize }) => ({\n  position: \"relative\",\n  height: `${fontSize * 1}px`,\n});\n\nfunction ListView(props) {\n  const { filterRoutes, fontSize } = props;\n  const { css } = useFela({ fontSize });\n  return (\n    <ul className={css(ulRule)}> \n      {filterRoutes.map((filterRoute) => (\n        <li key={`list-view-${filterRoute.route}`}>\n          <Link to={filterRoute.route}>\n            <div className={css(fontPreviewContainerRule)}>\n              <FontPreview\n                fontSize={fontSize}\n                inListView={true}\n              >\n                <Layer>\n                  {filterRoute.title}\n                </Layer>\n              </FontPreview>\n            </div>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ListView;\n","import React from \"react\";\nimport { useFela } from \"react-fela\";\nimport FontPreview from \"../components/FontPreview\";\nimport Layer from \"../components/Layer\";\nimport Link from \"../components/Link\";\nimport { fontPreviewContainerRule } from \"./ListView\";\n\nconst containerRule = ({ navHeight }) => ({\n  marginTop: `${navHeight}px`,\n});\n\nfunction ListViewOverlay(props) {\n  const { filterRoutes, navHeight, fontSize } = props;\n  const { css } = useFela({ navHeight, fontSize });\n  return (\n    <ul className={css(containerRule)}>\n      {filterRoutes.map((filterRoute) => (\n        <li key={`overlay-link-${filterRoute.route}`}>\n          <Link to={filterRoute.route}>\n            <div className={css(fontPreviewContainerRule)}>\n              <FontPreview\n                key={`overlay-font-preview-${filterRoute.route}`}\n                fontSize={fontSize}\n                inListView={true}\n                fontVariations={(\n                  filterRoute?.variableFontControlSliders ?? []\n                ).reduce((collector, route) => {\n                  collector[route.tag] = route.default;\n                  return collector;\n                }, {})}\n              >\n                {filterRoute.layerColors.map((color, index) => (\n                  <Layer\n                    color={color}\n                    key={`listViewOverlay-${color}-${index}`}\n                    fontFamily={`${filterRoute.filterIdentifier}-${index}`}\n                    color={color}\n                  >\n                    {filterRoute.title}\n                  </Layer>\n                ))}\n              </FontPreview>\n            </div>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default React.memo(ListViewOverlay);\n","import React, { useState, useEffect, useRef, createContext } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { Route, Routes, useLocation } from \"react-router\";\nimport Nav from \"./components/Nav\";\nimport data from \"./data\";\nimport { getMaxFontSize } from \"./misc\";\nimport About from \"./templates/About\";\nimport DetailView from \"./templates/DetailView\";\nimport DetailViewOverlay from \"./templates/DetailViewOverlay\";\nimport ListView from \"./templates/ListView\";\nimport ListViewOverlay from \"./templates/ListViewOverlay\";\nimport Contexts from \"./Contexts\";\n\nexport const ContentVisibilityContext = createContext();\n\nexport const filterRoutes = data.filter(\n  (route) => route.type === \"filterDetailView\"\n);\n\nfunction getMaxFontSizes() {\n  return filterRoutes.reduce((collector, filterRoute) => {\n    collector[filterRoute.filterIdentifier] = Math.ceil(\n      getMaxFontSize(filterRoute.title, \"vtt\")\n    );\n    return collector;\n  }, {});\n}\n\nconst contentBackgroundRule = ({\n  isTouching,\n  transitionWidth,\n  transitionHeight,\n}) => ({\n  zIndex: -1,\n  top: 0,\n  left: 0,\n  width: \"100%\",\n  height: \"100%\",\n  position: \"absolute\",\n  background: \"#eee\",\n  overflow: \"hidden\",\n  transform: \"translateZ(0)\",\n  extend: [\n    {\n      condition: isTouching,\n      style: {\n        height: \"100% !important\",\n      },\n    },\n    {\n      condition: !isTouching,\n      style: {\n        width: \"100% !important\",\n      },\n    },\n    {\n      condition: transitionWidth | transitionHeight,\n      style: {\n        transitionProperty: [\n          ...(transitionWidth ? [\"width\"] : []),\n          ...(transitionHeight ? [\"height\"] : []),\n        ].join(\",\"),\n        transitionDuration: \".15s\",\n        transitionTimingFunction: \"linear\",\n      },\n    },\n  ],\n});\n\nconst appRule = () => ({\n  fontSize: [\"23px\", \"19px\"],\n  lineHeight: [\"1.3em\", \"1.15em\"],\n});\n\nfunction App() {\n  const lastInnerWidth = useRef(window.innerWidth);\n  const [contentIsVisible, setContentIsVisible] = useState(true);\n  const [fontSizes, setFontSizes] = useState(getMaxFontSizes());\n  function setFontSize(filterIdentifier, value) {\n    let value_ = { ...fontSizes };\n    value_[filterIdentifier] = value;\n    setFontSizes(value_);\n  }\n  const isMounted = useRef(false);\n  const [navHeight, setNavHeight] = useState(0);\n  const [isTouching, setIsTouching] = useState(false);\n  const [transitionWidth, setTransitionWidth] = useState(false);\n  const [transitionHeight, setTransitionHeight] = useState(true);\n  const [listViewFontSize, setListViewFontSize] = useState(\n    Math.min(...Object.values(getMaxFontSizes()))\n  );\n  const contentBackground = useRef();\n  const lastTouchTimestamp = useRef(Date.now());\n\n  const { css } = useFela({\n    contentIsVisible,\n    navHeight,\n    isTouching,\n    transitionWidth,\n    transitionHeight,\n  });\n\n  function handleMouseEnter() {\n    if (Date.now() - lastTouchTimestamp.current > 500) {\n      setIsTouching(false);\n      setTransitionWidth(false);\n      if (transitionHeight) {\n        setTimeout(() => {\n          // setTransitionHeight(false);\n        }, 500);\n      }\n    }\n  }\n\n  function handleCursorY(e) {\n    if (transitionHeight) {\n      const {clientHeight} = contentBackground.current\n      if (clientHeight - 10 <= e.pageY) {\n        setTransitionHeight(false)\n      }\n    }\n    if (Date.now() - lastTouchTimestamp.current > 500) {\n      // setIsTouching(false);\n      // setTransitionHeight(false);\n      contentBackground.current.style.height = `${e.pageY}px`;\n    }\n  }\n\n  function handleTouchStart(e) {\n    lastTouchTimestamp.current = Date.now();\n    setTransitionWidth(true);\n    setIsTouching(true);\n    if (e.touches.length === 1) {\n      contentBackground.current.style.width = `${e.touches[0].pageX}px`;\n    }\n  }\n\n  function handleOnTouchMove(e) {\n    setTransitionWidth(false);\n    let value;\n    switch (e.touches.length) {\n      case 1:\n        value = e.touches[0].pageX;\n        break;\n      case 2:\n        const [{ pageX: x1 }, { pageX: x2 }] = e.touches;\n        value = Math.min(x1, x2) + Math.abs(x2 - x1) / 2;\n        break;\n    }\n    contentBackground.current.style.width = `${value}px`;\n  }\n\n  function handleOnResize(e) {\n    const { innerWidth } = window;\n    // console.log(innerHeight)\n    if (innerWidth !== lastInnerWidth.current) {\n      setListViewFontSize(Math.min(...Object.values(getMaxFontSizes())));\n      // document.body.style.minHeight = `${window.innerHeight}px`;\n      lastInnerWidth.current = innerWidth;\n    }\n  }\n\n  useEffect(() => {\n    // new ResizeObserver((el)=>console.log(contentBackground.current.offsetHeight, contentBackground.current.style.height)).observe(contentBackground.current)\n    isMounted.current = true;\n    window.addEventListener(\"resize\", handleOnResize);\n    window.addEventListener(\"mousemove\", handleCursorY, false);\n    document.body.addEventListener(\"mouseenter\", handleMouseEnter);\n    window.addEventListener(\"touchstart\", handleTouchStart);\n    window.addEventListener(\"touchmove\", handleOnTouchMove);\n    document.fonts.ready.then(function () {\n      setFontSizes(getMaxFontSizes());\n      setListViewFontSize(Math.min(...Object.values(getMaxFontSizes())));\n    });\n    return () => {\n      window.removeEventListener(\"resize\", handleOnResize);\n      window.removeEventListener(\"mousemove\", handleCursorY);\n      document.body.removeEventListener(\"mouseenter\", handleMouseEnter);\n      window.removeEventListener(\"touchstart\", handleTouchStart);\n      window.removeEventListener(\"touchmove\", handleOnTouchMove);\n    };\n  }, []);\n\n  const routes = [\n    ...data, \n    ...data.reduce((collector, currentValue) => {\n      collector.push({\n        type: \"about\",\n        route: (currentValue.route !== \"/\" ? currentValue.route : \"\") + \"/about\",\n        identifier: currentValue.route !== \"/\" ? currentValue.filterIdentifier : \"foundry\"\n      })\n      return collector\n    }, [])\n  ]\n\n  const location = useLocation()\n\n  useEffect(() => {\n    setContentIsVisible(false)\n    setTimeout(() => {\n      setContentIsVisible(true)\n    }, (3500));\n    return () => {\n    };\n  }, [location.pathname]);\n  \n\n  return (\n    <ContentVisibilityContext.Provider value={setContentIsVisible}>\n      <Contexts>\n        <div className={css(appRule)}>\n          <Nav setNavHeight={setNavHeight} filterRoutes={filterRoutes} />\n          <main>\n            <Routes>\n              {routes.map((route, index) => {\n                let element;\n                switch (route.type) {\n                  case \"filterDetailView\":\n                    element = (\n                      <DetailView\n                        {...route}\n                        navHeight={navHeight}\n                        key={route.route}\n                        fontSize={fontSizes[route.filterIdentifier]}\n                        setFontSize={(value) =>\n                          setFontSize(route.filterIdentifier, value)\n                        }\n                      ></DetailView>\n                    );\n                    break;\n                  case \"filterListView\":\n                    element = (\n                      <ListView\n                        {...route}\n                        filterRoutes={filterRoutes}\n                        fontSize={listViewFontSize}\n                      ></ListView>\n                    );\n                    break;\n                  case \"about\":\n                      element = (\n                      <About identifier={route.identifier} />\n                      )\n                    break;\n                }\n                return (\n                  <Route\n                    path={route.route}\n                    element={element}\n                    key={`route_${index}`}\n                  ></Route>\n                );\n              })}\n            </Routes>\n          </main>\n          <div ref={contentBackground} className={css(contentBackgroundRule)}>\n            <Routes>\n              {data.map((route, index) => {\n                let element;\n                switch (route.type) {\n                  case \"filterDetailView\":\n                    element = (\n                      <DetailViewOverlay\n                        {...route}\n                        navHeight={navHeight}\n                        key={route.route}\n                        fontSize={fontSizes[route.filterIdentifier]}\n                      />\n                    );\n                    break;\n                  case \"filterListView\":\n                    element = (\n                      <ListViewOverlay\n                        {...route}\n                        filterRoutes={filterRoutes}\n                        navHeight={navHeight}\n                        fontSize={listViewFontSize}\n                      />\n                    );\n                    break;\n                  default:\n                    throw new Error(\"not matched\");\n                }\n                return (\n                  <Route\n                    path={route.route}\n                    element={element}\n                    key={`overlay_route_${index}`}\n                  />\n                );\n              })}\n            </Routes>\n          </div>\n        </div>\n      </Contexts>\n    </ContentVisibilityContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { RendererProvider } from \"react-fela\";\nimport { createRenderer } from \"fela\";\nimport extend from \"fela-plugin-extend\";\nimport embedded from \"fela-plugin-embedded\";\nimport responsiveValue from \"fela-plugin-responsive-value\";\nimport multipleSelectors from \"fela-plugin-multiple-selectors\";\n\n\nconst getMediaQueries = (values, props) => {\n  switch (values.length) {\n    case 2:\n      return [\"@media (min-width: 800px)\"];\n    default:\n      return [];\n  }\n};\n\nconst renderer = createRenderer({\n  plugins: [\n    extend(),\n    embedded(),\n    multipleSelectors(),\n    responsiveValue(getMediaQueries, {\n      padding: true,\n      margin: true,\n      display: true,\n      fontSize: true,\n      gridTemplateColumns: true,\n      lineHeight: true,\n      width: true,\n      height: true,\n      borderRadius: true\n    }),\n  ],\n});\n\nconst resetStyle = {\n  boxSizing: \"border-box\",\n  fontFamily: \"inherit\",\n  fontSize: \"inherit\",\n  color: \"inherit\",\n  \"-webkit-font-smoothing\": \"antialiased\",\n  \"-moz-osx-font-smoothing\": \"grayscale\",\n  \"&:focus\": {\n    outline: \"none\",\n    background: \"none\",\n    boxShadow: \"none\"\n  }\n};\nrenderer.renderStatic(resetStyle, \"html,body,div,input,label,a,button\");\n\nconst headlineStyle = {\n  fontFamily: \"inherit\",\n  fontSize: \"inherit\",\n  fontWeight: \"inherit\",\n};\nrenderer.renderStatic(headlineStyle, \"h1,h2,h3,h4,h5,h6,h6,h8\");\n\nconst paddingMarginResetStyle = {\n  padding: 0,\n  margin: 0,\n};\n\nrenderer.renderStatic(\n  paddingMarginResetStyle,\n  \"html,body,div,input,label,a,button,h1,h2,h3,h4,h5,h6,h6,h8,p\"\n);\n\nconst bodyStyle = {\n  // fontFamily: `\"Times New Roman\"`,\n  fontFamily: `vtt, sans-serif`,\n  // \"-webkit-font-smoothing\": \"antialiased\",\n  // \"-moz-osx-font-smoothing\": \"grayscale\",\n  maxWidth: \"100vw\",\n  minHeight: \"100vh\",\n  touchAction: \"pan-y\",\n  position: \"relative\",\n  overscrollBehavior: \"contain\",\n  overflow: \"auto\"\n};\nrenderer.renderStatic(bodyStyle, \"body\");\n\nconst htmlStyle = {\n  height: \"100%\",\n  width: \"100%\",\n};\n\nrenderer.renderStatic(htmlStyle, \"html\");\n\nconst ulStyle = {\n  margin: 0,\n  listStyleType: \"None\",\n  padding: 0,\n};\nrenderer.renderStatic(ulStyle, \"ul\");\n\nconst buttonStyle = {\n  whiteSpace: \"nowrap\",\n  background: \"transparent\",\n  outline: \"none\",\n  border: \"none\",\n  appearance: \"none\",\n  textAlign: \"left\",\n  textDecoration: \"underline\",\n};\nrenderer.renderStatic(buttonStyle, \"button\");\n\nconst disabledStyle = {\n  color: \"#CCC\",\n  userSelect: \"none\",\n  pointerEvents: \"none\",\n  opacity: \"1 !important\",\n  \"-webkit-text-fill-color\": \"#CCC\"\n};\nrenderer.renderStatic(disabledStyle, \"*[disabled]\");\n\nconst inputRule = {\n  minWidth: \"80px\",\n};\nrenderer.renderStatic(inputRule, \"input\");\n\nconst aActiveRule = {\n  textDecoration: \"underline\",\n};\n\nrenderer.renderStatic(aActiveRule, \"a.active\");\n\nconst fonts = [\n  [\"rasterizer-0\", \"ttf\"],\n  [\"rotorizer-0\", \"ttf\"],\n  [\"rotorizer-1\", \"ttf\"],\n  [\"vtt\", \"woff2\"],\n];\nfonts.forEach(([font, extension]) =>\n  renderer.renderFont(font, [`${font}.${extension}`])\n);\n\nReactDOM.render(\n  <BrowserRouter>\n    <RendererProvider renderer={renderer}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </RendererProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}