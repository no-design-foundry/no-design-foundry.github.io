{"version":3,"sources":["components/Link.js","components/NavLink.js","components/Nav.js","data.js","templates/About.js","abouts/rasterizer.js","abouts/rotorizer.js","abouts/foundry.js","rules/rules.js","components/FileInput.js","components/RangeInput.js","components/TextInput.js","components/FontPreview.js","components/Log.js","templates/DetailView.js","templates/DetailViewOverlay.js","templates/ListView.js","templates/ListViewOverlay.js","App.js","misc.js","index.js"],"names":["linkRule","props","to","className","setContentIsVisible","useContext","ContentVisibilityContext","navigate","useNavigate","css","useFela","params","onClick","e","preventDefault","setTimeout","children","NavLink","Link","isActive","pattern","location","console","log","navRule","fontFamily","padding","menuItemRule","aboutRule","content","subUlRule","display","flexDirection","Nav","homeRef","useRef","setNavHeight","filterRoutes","useLocation","handleOnResize","height","current","getBoundingClientRect","useEffect","window","addEventListener","removeEventListener","ref","pathname","map","route","index","key","title","startsWith","type","filterIdentifier","numberOfLayers","layerColors","variableFontControlSliders","label","tag","min","max","default","inputs","name","abouts","rasterizer","rotorizer","foundry","articleRule","About","identifier","column","nth","gridColumn","fullscreenDragRule","fileIsDragged","position","fontSize","top","backgroundColor","opacity","left","right","bottom","draggedRule","dropItRule","buttonRule","whiteSpace","FileInput","fileInputRef","dragState","useState","cursorDrag","setCursorDrag","InputFontContext","inputFont","setInputFont","setFileIsDragged","handleDrop","stopPropagation","dataTransfer","files","length","handleDragEnter","handleDragLeave","handleDragOver","clientX","clientY","document","body","querySelector","style","pointerEvents","removeProperty","onChange","target","accept","click","valueIndicatorRule","fontVariantNumeric","placeholderRule","visibility","RangeInput","value","animatable","disabled","rules","inputRef","animationInterval","animating","setAnimating","DetailViewContext","setFormInputValue","FormInputsContext","currentValue","setCurrentValue","clearInterval","counter","start","setInterval","Math","round","offset","cos","PI","aria-label","checkValidity","parseInt","inputRule","background","outline","border","TextInput","itemRule","previewedFontFamily","visible","color","inListView","formHeight","userSelect","transitionDuration","transitionProperty","transitionTimingFunction","textRendering","extend","condition","filter","fontVariationSettings","containerRule","zIndex","width","overflow","alignItems","justifyContent","FontPreview","fontVariations","contentRef","setVisible","setPreviewedFontFamily","previewedChildren","setPreviewedChildren","opacityTransition","Object","keys","join","Log","lastTimeStamp","message","createContext","getRule","textAlign","formWrapperRule","innerHeight","transition","formRule","gridTemplateColumns","gap","gridAutoRows","marginBottom","fullscreenRule","minHeight","isProcessingWrapperRule","isProcessingRule","animationName","paddingBottom","animationDuration","animationIterationCount","animationDirection","animationPlayState","isProcessing","fontSizeSliderRule","CancelToken","axios","DetailView","navHeight","setFormHeight","setFontSize","PreviewedInputFontContext","previewedInputFont","setPreviewedInputFont","setInnerHeight","formRef","previousDistance","logContent","setLogContent","setPreviewedOutputFonts","PreviewedOutputFontsContext","formInputValues","fontSizeRef","isMounted","cancel","undefined","PreviewStringsContext","previewStrings","setPreviewString","previewedString","setPreviewedString","getFormVisible","setGetFormVisible","setIsProcessing","FontVariationsContext","setFontVariations","handleOnTouchMove","touches","x1","pageX","y1","pageY","x2","y2","distance","hypot","handleOnTouchEnd","now","Date","formData","FormData","append","forEach","method","cancelToken","c","url","data","headers","then","response","warnings","outputFontsArrays","fonts","fontBase64","Uint8Array","from","atob","charCodeAt","Promise","all","arrayBuffer","inputFontBuffer","FontFace","outputFontArray","outputFonts","add","outputFont","family","catch","thrown","isCancel","finally","sendRequest","offsetHeight","touchAction","Provider","letter","animationDelay","input","Boolean","Error","marginTop","DetailViewOverlay","previewedOutputFonts","layerColor","fontPreviewContainerRule","ListView","filterRoute","ListViewOverlay","_formInputValues","reduce","collector","inputCollector","getMaxFontSizes","ceil","text","span","createElement","innerHTML","appendChild","offsetWidth","removeChild","floor","clientWidth","getMaxFontSize","contentOverlayRule","contentIsVisible","transform","contentBackgroundRule","isTouching","transitionWidth","appRule","App","fontSizes","_setFontSize","_setFormInputsValue","setIsTouching","setTransitionWidth","cursorY","setCursorY","dragX","setDragX","values","listViewFontSize","setListViewFontSize","contentBackground","lastTouchTimestamp","Array","_setPreviewedOutputFonts","slider","_setFontVariations","handleCursorY","handleTouchStart","abs","_setPreviewString","element","value_","path","renderer","createRenderer","plugins","embedded","multipleSelectors","responsiveValue","margin","renderStatic","boxSizing","textDecoration","fontWeight","maxWidth","overscrollBehavior","listStyleType","appearance","minWidth","font","renderFont","ReactDOM","render","RendererProvider","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fe17c5b0.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { Link, NavLink, useNavigate } from \"react-router-dom\";\nimport { ContentVisibilityContext } from \"../App\";\n\nconst linkRule = () => ({\n  \"-webkit-tap-highlight-color\": \"transparent\",\n});\n\nexport default function (props) {\n  const { to, className = \"\" } = props;\n  const setContentIsVisible = useContext(ContentVisibilityContext);\n  const navigate = useNavigate();\n  const { css } = useFela();\n\n  function delayAndGo(e) {\n    e.preventDefault();\n    setContentIsVisible(false);\n    setTimeout(() => {\n      navigate(to);\n      setContentIsVisible(true);\n    }, 350 + 50);\n  }\n  const params = {\n    to,\n    onClick: delayAndGo,\n    className: `${css(linkRule)} ${className}`,\n  };\n  return (\n    <NavLink {...params}>{props.children}</NavLink>\n    // ) : (\n    // <Link {...params}>{props.children}</Link>\n  );\n}\n","import React from 'react'\nimport Link from './Link'\n\nfunction NavLink(props) {\n    const {to, className} = props\n    function isActive(pattern, location){\n        console.log(pattern, location)\n    }\n    return (\n        <Link to={to} className={className} NavLink={true} isActive={isActive}>{props.children}</Link>\n    )\n}\n\nexport default NavLink\n","import React, { useEffect, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { useLocation } from \"react-router\";\nimport Link from \"./Link\";\nimport NavLink from \"./NavLink\";\n\nconst navRule = () => ({\n  fontFamily: \"test\",\n  padding: \"10px\",\n  // position: \"sticky\",\n  // top: 0,\n});\n\nconst menuItemRule = () => ({});\n\nconst aboutRule = () => ({\n  \":before\": {\n    content: '\", \"',\n  },\n});\n\nconst subUlRule = () => ({\n  display: \"flex\",\n  flexDirection: \"row\"\n})\n\nfunction Nav(props) {\n  const homeRef = useRef();\n  const { setNavHeight, filterRoutes } = props;\n  const { css } = useFela();\n  const location = useLocation();\n\n  function handleOnResize() {\n    const { height } = homeRef.current.getBoundingClientRect();\n    setNavHeight(height + 20);\n  }\n\n  useEffect(() => {\n    handleOnResize();\n  }, [location]);\n\n  useEffect(() => {\n    handleOnResize();\n    window.addEventListener(\"resize\", handleOnResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleOnResize);\n    };\n  }, []);\n\n  return (\n    <nav className={css(navRule)}>\n      <ul>\n        <li ref={homeRef} className={css(menuItemRule)}>\n          <ul className={css(subUlRule)}>\n            <li>\n              <NavLink to={\"/\"}>no design foundry</NavLink>\n            </li>\n            {(location.pathname === \"/\" || location.pathname === \"/about\") &&\n            <li>\n              <NavLink to={\"/about\"} className={css(aboutRule)}>\n                about\n              </NavLink>\n            </li>\n            }\n          </ul>\n        </li>\n        {location.pathname !== \"/\" &&\n          filterRoutes.map((route, index) => (\n            <li key={`nav_${index}`}>\n              <ul className={css(subUlRule)}>\n                <li className={css(menuItemRule)}>\n                  <NavLink to={route.route}>{route.title}</NavLink>\n                </li>\n                {location.pathname.startsWith(route.route) &&\n                <li>\n                  <NavLink\n                    to={`${route.route}/about`}\n                    className={css(aboutRule)}\n                  >\n                    about\n                  </NavLink>\n                </li>\n                }\n              </ul>\n            </li>\n          ))}\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","export default [\n  {\n    type: \"filterListView\",\n    route: \"/\",\n  },\n  {\n    type: \"filterDetailView\",\n    title: \"Rotorizer\",\n    filterIdentifier: \"rotorizer\",\n    route: \"/rotorizer\",\n    numberOfLayers: 2,\n    layerColors: [\"gray\", \"#000\"],\n    variableFontControlSliders: [\n      {\n        label: \"rotation\",\n        tag: \"RTTX\",\n        min: 0,\n        max: 360,\n        default: 0,\n      },\n    ],\n    inputs: [\n      {\n        type: \"range\",\n        label: \"depth\",\n        name: \"depth\",\n        min: 2,\n        max: 600,\n        default: 20,\n      },\n    ],\n  },\n  {\n    type: \"filterDetailView\",\n    title: \"Rastr\",\n    filterIdentifier: \"rasterizer\",\n    route: \"/rasterizer\",\n    numberOfLayers: 1,\n    layerColors: [\"#000\"],\n    inputs: [\n      {\n        type: \"range\",\n        label: \"resolution\",\n        name: \"resolution\",\n        min: 10,\n        max: 150,\n        default: 20,\n      },\n    ],\n  },\n];\n","\nimport React from 'react'\nimport Markdown from 'markdown-to-jsx';\nimport rasterizer from '../abouts/rasterizer.js';\nimport rotorizer from '../abouts/rotorizer.js';\nimport foundry from '../abouts/foundry.js';\nimport { useFela } from 'react-fela';\n\nconst abouts = {\n    rasterizer, rotorizer, foundry\n}\n\nconst articleRule = () => ({\n    padding: \"0 10px 10px 10px\"\n})\n\nfunction About(props) {\n    const {identifier} = props\n    const {css} = useFela()\n    return (\n        <article className={css(articleRule)}>\n            <Markdown>{abouts[identifier]}</Markdown>\n        </article>\n    )\n}\n\nexport default About\n","\nexport default `<p>My interest in Rasterization started during my first internship at <a href=\"https://www.lucasfonts.com\">LucasFonts</a>, where I heard talking lucas about VTT and some other stuff that I didn't understand. VTT is a program for Windows that is used to create very advanced and powerful hinting for fonts used on many types of computers. It's very challenging to become.</p>`\n","\nexport default `<p>There was a font that was replaced by an algorithm, started to reproduce. I started working on rotor. First version were done by hand in FontLab, slowly after studying at <a href=\"https://typemedia.org/\">TM</a> in the Hague,</p>`\n","\nexport default `<p>this is about foundry</p>`\n","export const column = (nth) => () => ({\n    gridColumn: nth\n  })\n\nexport const width = (value) => () => ({\n    width: value\n  })","import React, { useContext, useRef, useEffect, useState } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { InputFontContext } from \"../App\";\nimport { column } from \"../rules/rules\";\n\nconst fullscreenDragRule = ({ fileIsDragged }) => ({\n  position: \"fixed\",\n  fontSize: \"4em\",\n  top: 0,\n  backgroundColor: \"#fff\",\n  opacity: 1,\n  left: 0,\n  right: 0,\n  bottom: 0,\n});\n\n\nconst draggedRule = () => ({\n  position: \"absolute\",\n  // transform: \"translate(-50%, -50%)\"\n});\n\nconst dropItRule = () => ({\n  display: [\"none\", \"inline\"],\n});\n\nconst buttonRule = () => ({\n  whiteSpace: \"no-wrap\"\n});\n\nfunction FileInput(props) {\n  const { label } = props;\n  const fileInputRef = useRef();\n  const dragState = useRef();\n  const [cursorDrag, setCursorDrag] = useState({});\n  const { inputFont, setInputFont } = useContext(InputFontContext);\n  const [fileIsDragged, setFileIsDragged] = useState(false);\n  const { css } = useFela({ fileIsDragged });\n\n  useEffect(() => {\n    if (fileIsDragged) {\n      document.body.querySelector(\"#root\").style.pointerEvents = \"none\";\n      dragState.current = \"moving\";\n    } else {\n      document.body\n        .querySelector(\"#root\")\n        .style.removeProperty(\"pointer-events\");\n    }\n  }, [fileIsDragged]);\n\n  function handleDrop(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.dataTransfer?.files.length === 1) {\n      setInputFont(e.dataTransfer.files[0]);\n      dragState.current = null;\n    }\n    setFileIsDragged(false);\n  }\n\n  function handleDragEnter(e) {\n    dragState.current = \"entered\";\n    e.preventDefault();\n    e.stopPropagation();\n    setFileIsDragged(true);\n  }\n\n  function handleDragLeave(e) {\n    if (dragState.current === \"moving\") {\n      e.preventDefault();\n      e.stopPropagation();\n      setFileIsDragged(false);\n      dragState.current = \"left\";\n    }\n  }\n\n  function handleDragOver(e) {\n    const { clientX: left, clientY: top } = e;\n    setCursorDrag({ left, top });\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  function handleOnChange(e) {\n    if (e.target.files.length === 1) {\n      setInputFont(e.target.files[0]);\n    }\n  }\n\n  function handleOnClick(e) {\n    fileInputRef.current.click();\n  }\n\n  useEffect(() => {\n    document.body.addEventListener(\"dragenter\", handleDragEnter);\n    document.body.addEventListener(\"dragleave\", handleDragLeave);\n    document.body.addEventListener(\"dragover\", handleDragOver);\n    document.body.addEventListener(\"drop\", handleDrop);\n    return () => {\n      document.body.removeEventListener(\"dragleave\", handleDragLeave);\n      document.body.removeEventListener(\"dragenter\", handleDragEnter);\n      document.body.removeEventListener(\"dragover\", handleDragOver);\n      document.body.removeEventListener(\"drop\", handleDrop);\n    };\n  }, []);\n  return (\n    <>\n      <label className={css(column(1))}>{label}</label>\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        onChange={handleOnChange}\n        style={{ display: \"none\" }}\n        accept=\".ttf,.otf,woff,woff2\"\n      ></input>\n      <button className={css(column(3), buttonRule)} onClick={handleOnClick}>\n        <span>{inputFont?.name ?? \"select file\"}</span>{!inputFont?.name && <span className={css(dropItRule)}> or drop it</span>}\n      </button>\n      {/* <span className={css(dropItRule, column(\"4 / span 2\"))}> or drop it</span> */}\n      {fileIsDragged && (\n        <div className={css(fullscreenDragRule)}>\n          <span className={css(draggedRule)} style={cursorDrag}>\n            Drop it\n          </span>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default FileInput;\n","import React, { useEffect, useRef, useContext, useState } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { FormInputsContext } from \"../App\";\nimport { column } from \"../rules/rules\";\nimport { DetailViewContext } from \"../templates/DetailView\";\n\nconst valueIndicatorRule = () => ({\n  fontVariantNumeric: \"tabular-nums\",\n  padding: \"0 .2em\",\n});\n\nconst buttonRule = () => ({\n  height: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n})\n\nconst placeholderRule = () => ({\n  visibility: \"hidden\"\n})\n\nfunction RangeInput(props) {\n  const {\n    label,\n    name,\n    min,\n    max,\n    value,\n    onChange,\n    animatable = false,\n    disabled = false,\n    rules = []\n  } = props;\n  const inputRef = useRef();\n  const animationInterval = useRef();\n  const [animating, setAnimating] = useState();\n  const { filterIdentifier } = useContext(DetailViewContext);\n  const { setFormInputValue } = useContext(FormInputsContext);\n  const [currentValue, setCurrentValue] = useState(value);\n  const { css } = useFela({animating});\n  \n  useEffect(() => {\n    inputRef.current.value = currentValue;\n    return () => {\n      clearInterval(animationInterval.current)\n    }\n  }, []);\n  \n  function handleOnChange(e) {\n    if (inputRef.current.checkValidity()) {\n      const value = parseInt(e.target.value);\n      setCurrentValue(value);\n      onChange(e.target.value);\n      if (name) {\n        setFormInputValue(filterIdentifier, name, value);\n      }\n    }\n  }\n\n  function handleOnClickAnimate() {\n    if (animating === true) {\n      clearInterval(animationInterval.current);\n    } else {\n      let counter = 0;\n      const start = currentValue;\n      animationInterval.current = setInterval(() => {\n        const position = (start + counter) % 720;\n        const value = Math.round(position - 360 < 0 ? position : 360 - (position % 360))\n        setCurrentValue(value)\n        inputRef.current.value = value;\n        if (onChange) {\n          onChange(value)\n        }\n        const offset =\n          10 - ((Math.cos((Math.PI * position) / 180) + 1) / 2) * 9;\n        counter += offset;\n      }, 1000 / 30);\n    }\n    setAnimating(!animating);\n  }\n\n  return (\n    <>\n      <label className={css(column(1), ...rules)}>{label}</label>\n      {animatable && (\n        <button className={css(buttonRule, column(2), ...rules)} onClick={handleOnClickAnimate}>\n          <span>{animating ? \"stop\" : \"play\"}</span>\n          <span className={css(placeholderRule)} aria-label=\"hidden\">play</span>\n          <span className={css(placeholderRule)} aria-label=\"hidden\">stop</span>\n        </button>\n      )}\n      <input\n        ref={inputRef}\n        className={css(column(3), ...rules)}\n        type=\"range\"\n        onChange={handleOnChange}\n        min={min}\n        max={max}\n        disabled={disabled}\n      ></input>\n      <div className={css(valueIndicatorRule, ...rules)} disabled={disabled}>\n        {currentValue}\n      </div>\n    </>\n  );\n}\n\nexport default RangeInput;\n","import React, { useEffect, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { column } from \"../rules/rules\";\n\nconst inputRule = () => ({\n  background: \"transparent\",\n  outline: \"none\",\n  border: \"none\"\n})\n\nfunction TextInput(props) {\n  const { label, value, onChange, disabled } = props;\n  const inputRef = useRef();\n  const { css } = useFela();\n  useEffect(() => {\n    inputRef.current.value = value\n  }, []);\n\n  function handleOnChange() {\n    if (inputRef.current.checkValidity()) {\n      if (onChange) {\n        onChange(inputRef.current.value);\n      }\n    }\n  }\n  return (\n    <>\n      <label className={css(column(1))}>{label}</label>\n      <input\n        ref={inputRef}\n        className={css(inputRule, column(3))}\n        type=\"text\"\n        onChange={handleOnChange}\n        disabled={disabled}\n      ></input>\n    </>\n  );\n}\n\nexport default TextInput;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\n\nconst opacityTransition = 350;\n\nconst itemRule = ({\n  previewedFontFamily,\n  visible,\n  color,\n  inListView,\n  formHeight,\n}) => ({\n  userSelect: \"none\",\n  padding: \"10px\",\n  transitionDuration: `${opacityTransition}ms`,\n  transitionProperty: \"opacity, filter\",\n  transitionTimingFunction: \"ease-in\",\n  whiteSpace: \"nowrap\",\n  textRendering: \"optimizeSpeed\",\n  // marginTop: `${-formHeight/2}px`,\n  // \"@media(hover:none)\": {\n  //   marginTop: `${-formHeight}px `\n  // },\n  extend: [\n    {\n      condition: previewedFontFamily,\n      style: {\n        fontFamily: previewedFontFamily,\n      },\n    },\n    {\n      condition: color,\n      style: {\n        color,\n      },\n    },\n    {\n      condition: !visible,\n      style: {\n        opacity: 0,\n        filter: \"blur(.025em)\",\n      },\n    },\n    {\n      condition: inListView,\n      style: {\n        fontVariationSettings: '\"RTTX\" 150',\n      },\n    },\n  ],\n});\n\nconst containerRule = ({ inListView, formHeight }) => ({\n  zIndex: -1,\n  userSelect: \"none\",\n  pointerEvents: \"none\",\n  position: \"absolute\",\n  top: 0,\n  left: 0,\n  width: \"100vw\",\n  height: \"100vh\",\n  // marginTop: \"25px\",\n  overflow: \"hidden\",\n  // height: \"100%\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: inListView ? \"flex-start\" : \"center\",\n  extend: [\n    {\n      condition: inListView,\n      style: {\n        height: \"100%\",\n      },\n    },\n    {\n      condition: !inListView && !formHeight,\n      style: {\n        visibility: \"hidden\",\n      },\n    },\n  ],\n});\n\nfunction FontPreview(props) {\n  const {\n    fontSize,\n    inListView = false,\n    fontFamily,\n    fontVariations = {},\n    color,\n    formHeight,\n  } = props;\n  const contentRef = useRef();\n  const [visible, setVisible] = useState(true);\n  const [previewedFontFamily, setPreviewedFontFamily] = useState(fontFamily);\n  const [previewedChildren, setPreviewedChildren] = useState(props.children);\n\n  useEffect(() => {\n    if (fontFamily !== previewedFontFamily) {\n      setVisible(false);\n      setTimeout(() => {\n        setPreviewedFontFamily(fontFamily);\n        setPreviewedChildren(props.children);\n        setVisible(true);\n      }, opacityTransition + 50);\n    }\n  }, [fontFamily]);\n\n  const { css } = useFela({\n    visible,\n    inListView,\n    previewedFontFamily,\n    color,\n    formHeight,\n  });\n\n  return (\n    <div className={css(containerRule)} style={{ fontSize: `${fontSize}px` }}>\n      <span\n        ref={contentRef}\n        className={css(itemRule)}\n        style={{\n          fontVariationSettings: Object.keys(fontVariations)\n            .map((key) => `\"${key}\" ${fontVariations[key]}`)\n            .join(\", \"),\n        }}\n      >\n        {previewedChildren}\n      </span>\n    </div>\n  );\n}\n\nexport default FontPreview;\n","import React from \"react\";\n\nfunction Log(props) {\n  const { content } = props;\n  return <ul>\n    {content.map((message, index) => <li key={index}>{message}</li>)}\n  </ul>;\n}\n\nexport default Log;\n","import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport {\n  FormInputsContext,\n  InputFontContext,\n  PreviewedInputFontContext,\n  PreviewedOutputFontsContext,\n  PreviewStringsContext,\n  FontVariationsContext,\n} from \"../App\";\nimport FileInput from \"../components/FileInput\";\nimport RangeInput from \"../components/RangeInput\";\nimport TextInput from \"../components/TextInput\";\nimport { useFela } from \"react-fela\";\nimport { column, width } from \"../rules/rules\";\nimport FontPreview from \"../components/FontPreview\";\nimport axios from \"axios\";\nimport Log from \"../components/Log\";\n\nexport const DetailViewContext = createContext();\n\nconst getRule = () => ({\n  textAlign: \"right\"\n})\n\nconst formWrapperRule = ({innerHeight}) => ({\n  top: 0,\n  position: \"fixed\",\n  height: `100%`,\n  display: \"flex\",\n  alignItems: \"flex-end\",\n  transition: \"height .05s ease-in\"\n});\nconst formRule = () => ({\n  pointerEvents: \"all\",\n  display: \"grid\",\n  gridTemplateColumns: [\n    \"min-content min-content auto 3ch 5ch\",\n    \"repeat(4, min-content) 3ch\",\n  ],\n  width: [\"calc(100% - 10px)\", \"auto\"],\n  gap: \"0px 6px\",\n  gridAutoRows: \"1.2em\",\n  whiteSpace: \"nowrap\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  marginBottom: \"10px\",\n});\n\nconst fullscreenRule = () => ({\n  minHeight: `100%`,\n  top: 0,\n  position: \"absolute\",\n  width: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  padding: \"10px\",\n  pointerEvents: \"none\",\n});\n\nconst isProcessingWrapperRule = () => ({\n  display: \"flex\",\n  alignItems: \"flex-end\",\n  flexDirection: \"row\",\n});\n\nconst isProcessingRule = ({ isProcessing }) => ({\n  display: \"block\",\n  animationName: {\n    \"0%\": { paddingBottom: \".5em\" },\n    \"40%\": { paddingBottom: \"0\" },\n    \"100%\": { paddingBottom: \"0\" },\n  },\n  animationDuration: \"1s\",\n  animationIterationCount: \"infinite\",\n  animationDirection: \"alternate-reverse\",\n  animationPlayState: isProcessing ? \"processing\" : \"paused\",\n});\n\nconst fontSizeSliderRule = () => ({\n  \"@media(hover:none)\": {\n    display: \"none\",\n  },\n});\n\nconst CancelToken = axios.CancelToken;\nlet lastTimeStamp;\n\nfunction DetailView(props) {\n  const {\n    inputs,\n    variableFontControlSliders,\n    filterIdentifier,\n    navHeight,\n    formHeight,\n    setFormHeight,\n    fontSize,\n    setFontSize,\n  } = props;\n  const { previewedInputFont, setPreviewedInputFont } = useContext(\n    PreviewedInputFontContext\n  );\n  const [innerHeight, setInnerHeight] = useState(window.innerHeight);\n  const formRef = useRef();\n  const previousDistance = useRef(null);\n  const [logContent, setLogContent] = useState([]);\n  const { setPreviewedOutputFonts } = useContext(PreviewedOutputFontsContext);\n  const { formInputValues } = useContext(FormInputsContext);\n  const fontSizeRef = useRef(fontSize);\n  const { inputFont } = useContext(InputFontContext);\n  const isMounted = useRef(false);\n  const cancel = useRef(undefined);\n  const { previewStrings, setPreviewString } = useContext(\n    PreviewStringsContext\n  );\n  const [previewedString, setPreviewedString] = useState(\n    previewStrings[filterIdentifier]\n  );\n  const [getFormVisible, setGetFormVisible] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const { fontVariations, setFontVariations } = useContext(\n    FontVariationsContext\n  );\n  const { css } = useFela({ navHeight, isProcessing, innerHeight });\n\n  function cancelRequest() {\n    if (cancel.current !== undefined) {\n      setIsProcessing(false);\n      cancel.current(\"cancelled by user\");\n      cancel.current = undefined;\n    }\n  }\n\n  function sendRequest() {\n    const formData = new FormData();\n    formData.append(\"font_file\", inputFont);\n    formData.append(\"preview_string\", previewedString);\n    Object.keys(formInputValues[filterIdentifier]).forEach((key) =>\n      formData.append(key, formInputValues[filterIdentifier][key])\n    );\n    setIsProcessing(true);\n    axios({\n      method: \"post\",\n      cancelToken: new CancelToken(function executor(c) {\n        cancel.current = c;\n      }),\n      url: `http://0.0.0.0:5000/filters/${filterIdentifier}`,\n      data: formData,\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    })\n      .then((response) => {\n        setLogContent(response.data.warnings);\n        const outputFontsArrays = response.data.fonts.map((fontBase64) =>\n          Uint8Array.from(atob(fontBase64), (c) => c.charCodeAt(0))\n        );\n        return Promise.all([inputFont.arrayBuffer(), outputFontsArrays]);\n      })\n      .then(([inputFontBuffer, outputFontsArrays]) => [\n        new FontFace(`preview-input-font-${Date.now()}`, inputFontBuffer),\n        outputFontsArrays.map(\n          (outputFontArray, index) =>\n            new FontFace(\n              `preview-output-font-${Date.now()}-${index}`,\n              outputFontArray\n            )\n        ),\n      ])\n      .then(([inputFont, outputFonts]) => {\n        document.fonts.add(inputFont);\n        outputFonts.map((outputFont) => document.fonts.add(outputFont));\n        return [inputFont, outputFonts];\n      })\n      .then(([inputFont, outputFonts]) => {\n        setPreviewedInputFont(inputFont.family);\n        setPreviewedOutputFonts(\n          filterIdentifier,\n          outputFonts.map((outputFont) => outputFont.family)\n        );\n      })\n      .catch((thrown) => {\n        if (axios.isCancel(thrown)) {\n          console.log(thrown.message);\n        } else {\n          console.log(thrown);\n        }\n      })\n      .finally(() => {\n        setIsProcessing(false);\n      });\n  }\n\n  // form auto-submit\n  useEffect(() => {\n    if (isMounted.current && inputFont) {\n      const now = Date.now();\n      lastTimeStamp = now;\n      setTimeout(function () {\n        if (now === lastTimeStamp) {\n          setPreviewString(filterIdentifier, previewedString);\n          sendRequest();\n        }\n      }, 500);\n    }\n  }, [formInputValues, inputFont, previewedString, filterIdentifier]);\n\n\n  function handleOnTouchMove(e) {\n    switch (e.touches.length) {\n      case 2:\n        const [{ pageX: x1, pageY: y1 }, { pageX: x2, pageY: y2 }] = e.touches;\n        const distance = Math.hypot(y2 - y1, x2 - x1) * 2;\n        if (previousDistance.current) {\n          const value =\n            fontSizeRef.current - (previousDistance.current - distance);\n          if (value > 20) {\n            setFontSize(value);\n            fontSizeRef.current = value;\n          }\n        }\n        previousDistance.current = distance;\n        break;\n    }\n  }\n\n  function handleOnTouchEnd(e) {\n    previousDistance.current = null;\n  }\n\n  function handleOnResize(e) {\n    setInnerHeight(window.innerHeight)\n  }\n\n  useEffect(() => {\n    isMounted.current = true;\n    const { offsetHeight } = formRef.current;\n    setFormHeight(offsetHeight);\n    document.body.style.touchAction = \"none\";\n    window.addEventListener(\"resize\", handleOnResize);\n    window.addEventListener(\"touchmove\", handleOnTouchMove);\n    window.addEventListener(\"touchend\", handleOnTouchEnd);\n    return () => {\n      window.removeEventListener(\"resize\", handleOnResize);\n      window.removeEventListener(\"touchmove\", handleOnTouchMove);\n      window.removeEventListener(\"touchend\", handleOnTouchEnd);\n      document.body.style.removeProperty(\"touch-action\");\n      isMounted.current = false;\n      setGetFormVisible(false);\n      cancelRequest();\n    };\n  }, []);\n  \n  return (\n    <DetailViewContext.Provider value={{ filterIdentifier }}>\n      <div className={css(fullscreenRule)}>\n        <FontPreview\n          fontFamily={previewedInputFont}\n          fontSize={fontSize}\n          formHeight={formHeight}\n        >\n          {previewStrings[filterIdentifier]}\n        </FontPreview>\n        <div className={css(formWrapperRule)}>\n          {isProcessing && (\n            <div className={css(isProcessingWrapperRule)}>\n              {[...\"processing...........\"].map((letter, index) => (\n                <span\n                  key={`processing-${index}`}\n                  className={css(isProcessingRule, () => ({\n                    animationDelay: `${index / 10}s`,\n                  }))}\n                >\n                  {letter}\n                </span>\n              ))}\n            </div>\n          )}\n          <Log content={logContent} />\n          <div ref={formRef} className={css(formRule)}>\n            {variableFontControlSliders?.map((input, index) => (\n              <RangeInput\n                label={input.label}\n                key={`font_ui_${index}`}\n                min={input.min}\n                max={input.max}\n                tag={input.tag}\n                value={fontVariations[filterIdentifier][input.tag]}\n                onChange={(value) =>\n                  setFontVariations(filterIdentifier, input.tag, value)\n                }\n                animatable={true}\n              />\n            ))}\n            <RangeInput\n              label={\"font size\"}\n              name=\"fontSize\"\n              min={20}\n              max={1000}\n              value={fontSize}\n              onChange={(value) => setFontSize(value)}\n              rules={[fontSizeSliderRule]}\n            />\n            <FileInput label=\"font file\"></FileInput>\n            <TextInput\n              label={\"preview\"}\n              value={previewStrings[filterIdentifier]}\n              onChange={(value) => setPreviewedString(value)}\n              disabled={!Boolean(inputFont)}\n            ></TextInput>\n            {inputs.map((input, index) => {\n              switch (input.type) {\n                case \"range\":\n                  return (\n                    <RangeInput\n                      label={input.label}\n                      name={input.name}\n                      key={`input_${filterIdentifier}_${index}`}\n                      min={input.min}\n                      max={input.max}\n                      value={formInputValues[filterIdentifier][input.name]}\n                      disabled={!Boolean(inputFont)}\n                    ></RangeInput>\n                  );\n                default:\n                  throw new Error(\"component not found\");\n              }\n            })}\n            <button\n              className={css(column(5), getRule)}\n              onClick={() => setGetFormVisible(!getFormVisible)}\n              disabled={!Boolean(inputFont)}\n            >\n              {getFormVisible ? \"hide\" : \"get\"}\n            </button>\n            {getFormVisible && (\n              <>\n                <hr className={css(column(\"1 / span 5\"), width(\"100%\"))} />\n                <TextInput label={\"font name\"} />\n                <button className={css(column(\"5\"))}>download</button>\n                <TextInput label={\"email\"} />\n                <button className={css(column(\"5\"))}>send</button>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </DetailViewContext.Provider>\n  );\n}\n\nexport default DetailView;\n","import React, { useContext } from \"react\";\nimport { useFela } from \"react-fela\";\nimport {\n  FontSizeContext,\n  FontVariationsContext,\n  PreviewedOutputFontsContext,\n  PreviewStringsContext,\n} from \"../App\";\nimport FontPreview from \"../components/FontPreview\";\n\nconst containerRule = ({ navHeight }) => ({\n  marginTop: `${navHeight}px`,\n});\n\n\nfunction DetailViewOverlay(props) {\n  const { filterIdentifier, navHeight, layerColors, formHeight, fontSize } = props;\n  const { previewStrings } = useContext(PreviewStringsContext);\n  const { previewedOutputFonts } = useContext(PreviewedOutputFontsContext);\n  const { fontVariations } = useContext(FontVariationsContext)\n  const { css } = useFela({ navHeight });\n  return (\n    <div className={css(containerRule)}>\n        {layerColors.map((layerColor, index) => (\n        <FontPreview \n          key={`${filterIdentifier}-overlay-${index}`}\n          fontFamily={previewedOutputFonts[filterIdentifier][index] || `${filterIdentifier}-${index}`}\n          fontSize={fontSize}\n          fontVariations={fontVariations[filterIdentifier]}\n          color={layerColor}\n          formHeight={formHeight}\n        >\n          {previewStrings[filterIdentifier]}\n        </FontPreview>\n        ))}\n    </div>\n  );\n}\n\nexport default DetailViewOverlay;\n","import React, { useState, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\nimport FontPreview from \"../components/FontPreview\";\nimport Link from \"../components/Link\";\n\nexport const fontPreviewContainerRule = ({ fontSize }) => ({\n  position: \"relative\",\n  height: `${fontSize * 0.8}px`,\n});\n\nfunction ListView(props) {\n  const { filterRoutes, fontSize } = props;\n  const { css } = useFela({ fontSize });\n  return (\n    <ul>\n      {filterRoutes.map((filterRoute, index) => (\n        <li key={`list-view-${filterRoute.route}`}>\n          <Link to={filterRoute.route}>\n            <div className={css(fontPreviewContainerRule)}>\n              <FontPreview\n                fontSize={fontSize}\n                inListView={true}\n              >\n                {filterRoute.title}\n              </FontPreview>\n            </div>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ListView;\n","import React from \"react\";\nimport { useFela } from \"react-fela\";\nimport FontPreview from \"../components/FontPreview\";\nimport Link from \"../components/Link\";\nimport { fontPreviewContainerRule } from \"./ListView\";\n\nconst containerRule = ({ navHeight }) => ({\n  marginTop: `${navHeight}px`,\n});\n\nfunction ListViewOverlay(props) {\n  const { filterRoutes, navHeight, fontSize } = props;\n  const { css } = useFela({ navHeight, fontSize });\n  return (\n    <ul className={css(containerRule)}>\n      {filterRoutes.map((filterRoute) => (\n        <li key={`overlay-link-${filterRoute.route}`}>\n          <Link to={filterRoute.route}>\n            <div className={css(fontPreviewContainerRule)}>\n              {filterRoute.layerColors.map((color, index) => (\n                <FontPreview\n                  key={`overlay-font-preview-${index}`}\n                  fontSize={fontSize}\n                  inListView={true}\n                  fontFamily={`${filterRoute.filterIdentifier}-${index}`}\n                  color={color}\n                >\n                  {filterRoute.title}\n                </FontPreview>\n              ))}\n            </div>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ListViewOverlay;\n","import React, { createContext, useState, useEffect, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { Route, Routes } from \"react-router\";\nimport Nav from \"./components/Nav\";\nimport data from \"./data\";\nimport { getMaxFontSize } from \"./misc\";\nimport About from \"./templates/About\";\nimport DetailView from \"./templates/DetailView\";\nimport DetailViewOverlay from \"./templates/DetailViewOverlay\";\nimport ListView from \"./templates/ListView\";\nimport ListViewOverlay from \"./templates/ListViewOverlay\";\n\nexport const FormInputsContext = createContext();\nexport const InputFontContext = createContext();\nexport const PreviewStringsContext = createContext();\nexport const FontSizeContext = createContext();\nexport const ContentVisibilityContext = createContext();\nexport const PreviewedInputFontContext = createContext();\nexport const PreviewedOutputFontsContext = createContext();\nexport const FontVariationsContext = createContext();\n\nconst filterRoutes = data.filter((route) => route.type === \"filterDetailView\");\nconst _formInputValues = filterRoutes.reduce((collector, filterRoute) => {\n  collector[filterRoute.filterIdentifier] = [\n    ...filterRoute.inputs,\n    ...(filterRoute?.variableFontControlSliders ?? []),\n  ].reduce(\n    (inputCollector, input) => {\n      inputCollector[input.name] = input.default;\n      return inputCollector;\n    },\n    { fontSize: null }\n  );\n  return collector;\n}, {});\n\nfunction getMaxFontSizes() {\n  return filterRoutes.reduce((collector, filterRoute) => {\n    collector[filterRoute.filterIdentifier] = Math.ceil(\n      getMaxFontSize(filterRoute.title, \"Times New Roman\")\n    );\n    return collector;\n  }, {});\n}\n\nconst contentOverlayRule = ({ contentIsVisible, navHeight }) => ({\n  position: \"fixed\",\n  bottom: 0,\n  width: \"100%\",\n  height: \"0px\",\n  left: 0,\n  background: \"#ccc\",\n  transition: `height ${350}ms`,\n  transform: \"translateZ(0)\",\n  transitionTimingFunction: contentIsVisible\n    ? \"cubic-bezier(.55,0,1,.45)\"\n    : \"cubic-bezier(0,.55,.45,1)\",\n  height: contentIsVisible ? 0 : `calc(100% - ${navHeight - 10}px)`,\n});\n\nconst contentBackgroundRule = ({ isTouching, transitionWidth }) => ({\n  zIndex: -1,\n  top: 0,\n  left: 0,\n  width: \"100%\",\n  position: \"absolute\",\n  background: \"#eee\",\n  overflow: \"hidden\",\n  transform: \"translateZ(0)\",\n  // \"@media(hover:none)\": {\n  //   height: \"100vh !important\",\n  // },\n  extend: [\n    {\n      condition: isTouching,\n      style: {\n        height: \"100%\",\n      },\n    },\n    {\n      condition: !isTouching,\n      style: {\n        width: \"100%\",\n      },\n    },\n    {\n      condition: transitionWidth,\n      style: {\n        transition: \"width .15s ease-in\",\n      },\n    },\n  ],\n});\n\nconst appRule = () => ({\n  fontSize: [\"22px\", \"18px\"],\n});\n\nfunction App() {\n  const [inputFont, setInputFont] = useState(null);\n  const [previewedInputFont, setPreviewedInputFont] = useState(null);\n  const [fontSizes, _setFontSize] = useState(getMaxFontSizes());\n  function setFontSize(filterIdentifier, value) {\n    let value_ = { ...fontSizes };\n    value_[filterIdentifier] = value;\n    _setFontSize(value_);\n  }\n  const [formInputValues, _setFormInputsValue] = useState(_formInputValues);\n  const [contentIsVisible, setContentIsVisible] = useState(true);\n  const [navHeight, setNavHeight] = useState(0);\n  const [isTouching, setIsTouching] = useState(false);\n  const [transitionWidth, setTransitionWidth] = useState(false);\n  const [cursorY, setCursorY] = useState(0);\n  const [dragX, setDragX] = useState(0);\n  const [listViewFontSize, setListViewFontSize] = useState(\n    Math.min(...Object.values(getMaxFontSizes()))\n  );\n  const [formHeight, setFormHeight] = useState(0);\n\n  const { css } = useFela({\n    contentIsVisible,\n    navHeight,\n    isTouching,\n    transitionWidth,\n  });\n\n  const contentBackground = useRef();\n  const lastTouchTimestamp = useRef(Date.now());\n\n  const [previewedOutputFonts, _setPreviewedOutputFonts] = useState(\n    filterRoutes.reduce((collector, filterRoute) => {\n      collector[filterRoute.filterIdentifier] = Array(\n        filterRoute.numberOfLayers\n      );\n      return collector;\n    }, {})\n  );\n\n  const [fontVariations, _setFontVariations] = useState(\n    filterRoutes.reduce((collector, filterRoute) => {\n      if (filterRoute.variableFontControlSliders) {\n        collector[filterRoute.filterIdentifier] =\n          filterRoute.variableFontControlSliders.reduce((collector, slider) => {\n            collector[slider.tag] = slider.default;\n            return collector;\n          }, {});\n      }\n      return collector;\n    }, {})\n  );\n\n  function setPreviewedOutputFonts(filterIdentifier, value) {\n    let collector = {};\n    collector[filterIdentifier] = value;\n    _setPreviewedOutputFonts({ ...previewedOutputFonts, ...collector });\n  }\n\n  function setFontVariations(filterIdentifier, tag, value) {\n    let collector = { ...fontVariations };\n    collector[filterIdentifier][tag] = parseInt(value);\n    _setFontVariations(collector);\n  }\n\n  function setFormInputValue(filterIdentifier, name, value) {\n    let collector = { ...formInputValues };\n    collector[filterIdentifier][name] = value;\n    _setFormInputsValue(collector);\n  }\n\n  function handleCursorY(e) {\n    if (Date.now() - lastTouchTimestamp.current > 500) {\n      setTransitionWidth(false);\n      setIsTouching(false);\n      setCursorY(e.pageY);\n    }\n  }\n\n  function handleTouchStart(e) {\n    lastTouchTimestamp.current = Date.now();\n    setTransitionWidth(true);\n    setIsTouching(true);\n    if (e.touches.length === 1) {\n      setDragX(e.touches[0].pageX);\n    }\n  }\n\n  function handleOnTouchMove(e) {\n    setTransitionWidth(false);\n    let value;\n    switch (e.touches.length) {\n      case 1:\n        value = e.touches[0].pageX;\n        break;\n      case 2:\n        const [{ pageX: x1 }, { pageX: x2 }] = e.touches;\n        value = Math.min(x1, x2) + Math.abs(x2 - x1) / 2;\n        break;\n    }\n    setDragX(value);\n  }\n\n  function handleOnResize(e) {\n    setListViewFontSize(Math.min(...Object.values(getMaxFontSizes())));\n  }\n\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleOnResize);\n    window.addEventListener(\"mousemove\", handleCursorY, false);\n    window.addEventListener(\"touchstart\", handleTouchStart);\n    window.addEventListener(\"touchmove\", handleOnTouchMove);\n    return () => {\n      window.removeEventListener(\"resize\", handleOnResize);\n      window.removeEventListener(\"mousemove\", handleCursorY);\n      window.removeEventListener(\"touchstart\", handleTouchStart);\n      window.removeEventListener(\"touchmove\", handleOnTouchMove);\n    };\n  }, []);\n\n  const [previewStrings, _setPreviewString] = useState(\n    filterRoutes.reduce((collector, filterRoute) => {\n      collector[filterRoute.filterIdentifier] = filterRoute.title;\n      return collector;\n    }, {})\n  );\n\n  function setPreviewString(filterIdentifier, value) {\n    let collector = { ...previewStrings };\n    collector[filterIdentifier] = value;\n    _setPreviewString(collector);\n  }\n\n  return (\n    <div className={css(appRule)}>\n      <PreviewStringsContext.Provider\n        value={{ previewStrings, setPreviewString }}\n      >\n        <PreviewedOutputFontsContext.Provider\n          value={{ previewedOutputFonts, setPreviewedOutputFonts }}\n        >\n          <FontVariationsContext.Provider\n            value={{ fontVariations, setFontVariations }}\n          >\n            <ContentVisibilityContext.Provider value={setContentIsVisible}>\n              <Nav setNavHeight={setNavHeight} filterRoutes={filterRoutes} />\n              <FormInputsContext.Provider\n                value={{ formInputValues, setFormInputValue }}\n              >\n                <InputFontContext.Provider value={{ inputFont, setInputFont }}>\n                  <PreviewedInputFontContext.Provider\n                    value={{ previewedInputFont, setPreviewedInputFont }}\n                  >\n                    <main>\n                      <Routes>\n                        {data.map((route, index) => {\n                          let element;\n                          switch (route.type) {\n                            case \"filterDetailView\":\n                              element = (\n                                <DetailView\n                                  {...route}\n                                  navHeight={navHeight}\n                                  key={route.route}\n                                  setFormHeight={setFormHeight}\n                                  formHeight={formHeight}\n                                  fontSize={fontSizes[route.filterIdentifier]}\n                                  setFontSize={(value) =>\n                                    setFontSize(route.filterIdentifier, value)\n                                  }\n                                ></DetailView>\n                              );\n                              break;\n                            case \"filterListView\":\n                              element = (\n                                <ListView\n                                  {...route}\n                                  filterRoutes={filterRoutes}\n                                  fontSize={listViewFontSize}\n                                ></ListView>\n                              );\n                              break;\n                            default:\n                              throw new Error(\"view not matched\");\n                          }\n                          return (\n                            <Route\n                              path={route.route}\n                              element={element}\n                              key={`route_${index}`}\n                            ></Route>\n                          );\n                        })}\n                        {filterRoutes.map((filterRoute, index) => (\n                          <Route\n                            key={`about_route_${index}`}\n                            path={`${filterRoute.route}/about`}\n                            element={<About identifier={filterRoute.filterIdentifier} />}\n                          ></Route>\n                        ))}\n                        <Route path={`/about`} element={<About identifier=\"foundry\"></About>}></Route>\n                      </Routes>\n                    </main>\n                  </PreviewedInputFontContext.Provider>\n                </InputFontContext.Provider>\n              </FormInputsContext.Provider>\n            </ContentVisibilityContext.Provider>\n            <div className={css(contentOverlayRule)}></div>\n            <div\n              ref={contentBackground}\n              className={css(contentBackgroundRule)}\n              style={{\n                ...(isTouching\n                  ? { width: `${dragX}px` }\n                  : { height: `${cursorY}px` }),\n              }}\n            >\n              <Routes>\n                {data.map((route, index) => {\n                  let element;\n                  switch (route.type) {\n                    case \"filterDetailView\":\n                      element = (\n                        <DetailViewOverlay\n                          {...route}\n                          navHeight={navHeight}\n                          key={route.route}\n                          setFormHeight={setFormHeight}\n                          formHeight={formHeight}\n                          fontSize={fontSizes[route.filterIdentifier]}\n                        />\n                      );\n                      break;\n                    case \"filterListView\":\n                      element = (\n                        <ListViewOverlay\n                          {...route}\n                          filterRoutes={filterRoutes}\n                          navHeight={navHeight}\n                          fontSize={listViewFontSize}\n                        />\n                      );\n                      break\n                    default:\n                      throw new Error(\"not matched\")\n                  }\n                  return (\n                    <Route\n                      path={route.route}\n                      element={element}\n                      key={`overlay_route_${index}`}\n                    />\n                  );\n                })}\n              </Routes>\n            </div>\n          </FontVariationsContext.Provider>\n        </PreviewedOutputFontsContext.Provider>\n      </PreviewStringsContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","export function getMaxFontSize(text, fontFamily) {\n  const span = document.createElement(\"span\");\n  span.innerHTML = text;\n  span.style.fontSize = \"200px\"\n  span.style.fontFamily = fontFamily\n  document.body.appendChild(span);\n  const { offsetWidth } = span;\n  document.body.removeChild(span);\n  return Math.floor(200 * ((document.body.clientWidth-20)/offsetWidth));\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { RendererProvider } from \"react-fela\";\nimport { createRenderer } from \"fela\";\nimport extend from \"fela-plugin-extend\";\nimport embedded from \"fela-plugin-embedded\";\nimport responsiveValue from \"fela-plugin-responsive-value\";\nimport multipleSelectors from \"fela-plugin-multiple-selectors\";\n\nconst getMediaQueries = (values, props) => {\n  switch (values.length) {\n    case 2:\n      return [\"@media (min-width: 570px)\"];\n    default:\n      return [];\n  }\n};\n\nconst renderer = createRenderer({\n  plugins: [\n    extend(),\n    embedded(),\n    multipleSelectors(),\n    responsiveValue(getMediaQueries, {\n      padding: true,\n      margin: true,\n      display: true,\n      fontSize: true,\n      gridTemplateColumns: true,\n      width: true,\n      height: true,\n    }),\n  ],\n});\n\nconst resetStyle = {\n  boxSizing: \"border-box\",\n  textDecoration: \"None\",\n  fontFamily: \"inherit\",\n  fontSize: \"inherit\",\n  color: \"inherit\",\n  \"-webkit-font-smoothing\": \"antialiased\",\n  \"-moz-osx-font-smoothing\": \"grayscale\",\n};\nrenderer.renderStatic(resetStyle, \"html,body,div,input,label,a,button\");\n\nconst headlineStyle = {\n  fontFamily: \"inherit\",\n  fontSize: \"inherit\",\n  fontWeight: \"inherit\"\n};\nrenderer.renderStatic(\n  headlineStyle,\n  \"h1,h2,h3,h4,h5,h6,h6,h8\"\n  );\n\nconst paddingMarginResetStyle = {\n  padding: 0,\n  margin: 0,\n};\n\nrenderer.renderStatic(\n  paddingMarginResetStyle,\n  \"html,body,div,input,label,a,button,h1,h2,h3,h4,h5,h6,h6,h8,p\"\n);\n\nconst bodyStyle = {\n  fontFamily: \"'Times New Roman', serif\",\n  maxWidth: \"100vw\",\n  minHeight: \"100vh\",\n  // maxHeight: \"100vh\",\n  position: \"relative\",\n  overscrollBehavior: \"contain\",\n  overflow: \"auto\",\n};\nrenderer.renderStatic(bodyStyle, \"body\");\n\nconst htmlStyle = {\n  height: \"100%\",\n  width: \"100%\",\n};\n\nrenderer.renderStatic(htmlStyle, \"html\");\n\nconst ulStyle = {\n  margin: 0,\n  listStyleType: \"None\",\n  padding: 0,\n};\nrenderer.renderStatic(ulStyle, \"ul\");\n\nconst buttonStyle = {\n  whiteSpace: \"nowrap\",\n  background: \"transparent\",\n  outline: \"none\",\n  border: \"none\",\n  appearance: \"none\",\n  textAlign: \"left\",\n  textDecoration: \"underline\",\n};\nrenderer.renderStatic(buttonStyle, \"button\");\n\nconst disabledStyle = {\n  color: \"gray\",\n  userSelect: \"none\",\n  pointerEvents: \"none\",\n};\nrenderer.renderStatic(disabledStyle, \"*[disabled]\");\n\nconst inputRule = {\n  minWidth: \"80px\",\n};\nrenderer.renderStatic(inputRule, \"input\");\n\nconst aActiveRule = {\n  textDecoration: \"underline\",\n};\n\nrenderer.renderStatic(aActiveRule, \"a.active\");\n\nconst fonts = [\"rasterizer-0\", \"rotorizer-0\", \"rotorizer-1\"];\nfonts.forEach((font) => renderer.renderFont(font, [`${font}.ttf`]));\n\nReactDOM.render(\n  <BrowserRouter>\n    <RendererProvider renderer={renderer}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </RendererProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}