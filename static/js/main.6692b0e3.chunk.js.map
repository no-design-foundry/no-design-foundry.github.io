{"version":3,"sources":["components/Link.js","components/NavLink.js","components/Nav.js","data.js","rules/rules.js","components/FileInput.js","components/RangeInput.js","components/TextInput.js","components/FontPreview.js","components/Log.js","templates/DetailView.js","templates/DetailViewOverlay.js","templates/ListView.js","templates/ListViewOverlay.js","App.js","misc.js","index.js"],"names":["linkRule","props","to","className","setContentIsVisible","useContext","ContentVisibilityContext","navigate","useNavigate","css","useFela","params","onClick","e","preventDefault","setTimeout","children","NavLink","Link","isActive","pattern","location","console","log","navRule","fontFamily","padding","menuItemRule","aboutRule","content","subUlRule","display","flexDirection","Nav","homeRef","useRef","setNavHeight","filterRoutes","useLocation","handleOnResize","height","current","getBoundingClientRect","useEffect","window","addEventListener","removeEventListener","ref","pathname","map","route","index","key","title","startsWith","type","filterIdentifier","numberOfLayers","layerColors","variableFontControlSliders","label","tag","min","max","default","inputs","name","column","nth","gridColumn","fullscreenDragRule","fileIsDragged","position","fontSize","top","backgroundColor","opacity","left","right","bottom","draggedRule","dropItRule","buttonRule","whiteSpace","FileInput","fileInputRef","dragState","useState","cursorDrag","setCursorDrag","InputFontContext","inputFont","setInputFont","setFileIsDragged","handleDrop","stopPropagation","dataTransfer","files","length","handleDragEnter","handleDragLeave","handleDragOver","clientX","clientY","document","body","querySelector","style","pointerEvents","removeProperty","onChange","target","accept","click","valueIndicatorRule","fontVariantNumeric","placeholderRule","visibility","RangeInput","value","animatable","disabled","rules","inputRef","animationInterval","animating","setAnimating","DetailViewContext","setFormInputValue","FormInputsContext","currentValue","setCurrentValue","clearInterval","counter","start","setInterval","Math","round","offset","cos","PI","aria-label","checkValidity","parseInt","inputRule","background","outline","border","TextInput","itemRule","previewedFontFamily","visible","color","inListView","formHeight","userSelect","transitionDuration","transitionProperty","transitionTimingFunction","textRendering","marginTop","extend","condition","filter","fontVariationSettings","containerRule","zIndex","width","overflow","alignItems","justifyContent","FontPreview","fontVariations","contentRef","setVisible","setPreviewedFontFamily","previewedChildren","setPreviewedChildren","opacityTransition","Object","keys","join","Log","lastTimeStamp","message","createContext","getRule","textAlign","formWrapperRule","formRule","gridTemplateColumns","gap","gridAutoRows","marginBottom","fullscreenRule","minHeight","isProcessingWrapperRule","isProcessingRule","animationName","paddingBottom","animationDuration","animationIterationCount","animationDirection","animationPlayState","isProcessing","fontSizeSliderRule","CancelToken","axios","DetailView","navHeight","setFormHeight","setFontSize","PreviewedInputFontContext","previewedInputFont","setPreviewedInputFont","formRef","previousDistance","logContent","setLogContent","setPreviewedOutputFonts","PreviewedOutputFontsContext","formInputValues","fontSizeRef","isMounted","cancel","undefined","PreviewStringsContext","previewStrings","setPreviewString","previewedString","setPreviewedString","getFormVisible","setGetFormVisible","setIsProcessing","FontVariationsContext","setFontVariations","handleOnTouchMove","touches","x1","pageX","y1","pageY","x2","y2","distance","hypot","handleOnTouchEnd","now","Date","formData","FormData","append","forEach","method","cancelToken","c","url","data","headers","then","response","warnings","outputFontsArrays","fonts","fontBase64","Uint8Array","from","atob","charCodeAt","Promise","all","arrayBuffer","inputFontBuffer","FontFace","outputFontArray","outputFonts","add","outputFont","family","catch","thrown","isCancel","finally","sendRequest","offsetHeight","touchAction","Provider","letter","animationDelay","input","Boolean","Error","DetailViewOverlay","previewedOutputFonts","layerColor","fontPreviewContainerRule","ListView","filterRoute","ListViewOverlay","_formInputValues","reduce","collector","inputCollector","getMaxFontSizes","ceil","text","span","createElement","innerHTML","appendChild","offsetWidth","removeChild","floor","clientWidth","getMaxFontSize","contentOverlayRule","contentIsVisible","transition","transform","contentBackgroundRule","isTouching","transitionWidth","appRule","App","fontSizes","_setFontSize","_setFormInputsValue","setIsTouching","setTransitionWidth","cursorY","setCursorY","dragX","setDragX","values","listViewFontSize","setListViewFontSize","contentBackground","lastTouchTimestamp","Array","_setPreviewedOutputFonts","slider","_setFontVariations","handleCursorY","handleTouchStart","abs","_setPreviewString","element","value_","path","renderer","createRenderer","plugins","embedded","multipleSelectors","responsiveValue","margin","renderStatic","boxSizing","textDecoration","maxWidth","overscrollBehavior","listStyleType","appearance","minWidth","font","renderFont","ReactDOM","render","RendererProvider","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6692b0e3.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { Link, NavLink, useNavigate } from \"react-router-dom\";\nimport { ContentVisibilityContext } from \"../App\";\n\nconst linkRule = () => ({\n  \"-webkit-tap-highlight-color\": \"transparent\",\n});\n\nexport default function (props) {\n  const { to, className = \"\" } = props;\n  const setContentIsVisible = useContext(ContentVisibilityContext);\n  const navigate = useNavigate();\n  const { css } = useFela();\n\n  function delayAndGo(e) {\n    e.preventDefault();\n    setContentIsVisible(false);\n    setTimeout(() => {\n      navigate(to);\n      setContentIsVisible(true);\n    }, 350 + 50);\n  }\n  const params = {\n    to,\n    onClick: delayAndGo,\n    className: `${css(linkRule)} ${className}`,\n  };\n  return (\n    <NavLink {...params}>{props.children}</NavLink>\n    // ) : (\n    // <Link {...params}>{props.children}</Link>\n  );\n}\n","import React from 'react'\nimport Link from './Link'\n\nfunction NavLink(props) {\n    const {to, className} = props\n    function isActive(pattern, location){\n        console.log(pattern, location)\n    }\n    return (\n        <Link to={to} className={className} NavLink={true} isActive={isActive}>{props.children}</Link>\n    )\n}\n\nexport default NavLink\n","import React, { useEffect, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { useLocation } from \"react-router\";\nimport Link from \"./Link\";\nimport NavLink from \"./NavLink\";\n\nconst navRule = () => ({\n  fontFamily: \"test\",\n  padding: \"10px\",\n  // position: \"sticky\",\n  // top: 0,\n});\n\nconst menuItemRule = () => ({});\n\nconst aboutRule = () => ({\n  \":before\": {\n    content: '\", \"',\n  },\n});\n\nconst subUlRule = () => ({\n  display: \"flex\",\n  flexDirection: \"row\"\n})\n\nfunction Nav(props) {\n  const homeRef = useRef();\n  const { setNavHeight, filterRoutes } = props;\n  const { css } = useFela();\n  const location = useLocation();\n\n  function handleOnResize() {\n    const { height } = homeRef.current.getBoundingClientRect();\n    setNavHeight(height + 20);\n  }\n\n  useEffect(() => {\n    handleOnResize();\n  }, [location]);\n\n  useEffect(() => {\n    handleOnResize();\n    window.addEventListener(\"resize\", handleOnResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleOnResize);\n    };\n  }, []);\n\n  return (\n    <nav className={css(navRule)}>\n      <ul>\n        <li ref={homeRef} className={css(menuItemRule)}>\n          <ul className={css(subUlRule)}>\n            <li>\n              <NavLink to={\"/\"}>no design foundry</NavLink>\n            </li>\n            {(location.pathname === \"/\" || location.pathname === \"/about\") &&\n            <li>\n              <NavLink to={\"/about\"} className={css(aboutRule)}>\n                about\n              </NavLink>\n            </li>\n            }\n          </ul>\n        </li>\n        {location.pathname !== \"/\" &&\n          filterRoutes.map((route, index) => (\n            <li key={`nav_${index}`}>\n              <ul className={css(subUlRule)}>\n                <li className={css(menuItemRule)}>\n                  <NavLink to={route.route}>{route.title}</NavLink>\n                </li>\n                {location.pathname.startsWith(route.route) &&\n                <li>\n                  <NavLink\n                    to={`${route.route}/about`}\n                    className={css(aboutRule)}\n                  >\n                    about\n                  </NavLink>\n                </li>\n                }\n              </ul>\n            </li>\n          ))}\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","export default [\n  {\n    type: \"filterListView\",\n    route: \"/\",\n  },\n  {\n    type: \"filterDetailView\",\n    title: \"Rotorizer\",\n    filterIdentifier: \"rotorizer\",\n    route: \"/rotorizer\",\n    numberOfLayers: 2,\n    layerColors: [\"gray\", \"#000\"],\n    variableFontControlSliders: [\n      {\n        label: \"rotation\",\n        tag: \"RTTX\",\n        min: 0,\n        max: 360,\n        default: 0,\n      },\n    ],\n    inputs: [\n      {\n        type: \"range\",\n        label: \"depth\",\n        name: \"depth\",\n        min: 2,\n        max: 600,\n        default: 20,\n      },\n    ],\n  },\n  {\n    type: \"filterDetailView\",\n    title: \"Rastr\",\n    filterIdentifier: \"rasterizer\",\n    route: \"/rasterizer\",\n    numberOfLayers: 1,\n    layerColors: [\"#000\"],\n    inputs: [\n      {\n        type: \"range\",\n        label: \"resolution\",\n        name: \"resolution\",\n        min: 10,\n        max: 150,\n        default: 20,\n      },\n    ],\n  },\n];\n","export const column = (nth) => () => ({\n    gridColumn: nth\n  })\n\nexport const width = (value) => () => ({\n    width: value\n  })","import React, { useContext, useRef, useEffect, useState } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { InputFontContext } from \"../App\";\nimport { column } from \"../rules/rules\";\n\nconst fullscreenDragRule = ({ fileIsDragged }) => ({\n  position: \"fixed\",\n  fontSize: \"4em\",\n  top: 0,\n  backgroundColor: \"#fff\",\n  opacity: 1,\n  left: 0,\n  right: 0,\n  bottom: 0,\n});\n\n\nconst draggedRule = () => ({\n  position: \"absolute\",\n  // transform: \"translate(-50%, -50%)\"\n});\n\nconst dropItRule = () => ({\n  display: [\"none\", \"inline\"],\n});\n\nconst buttonRule = () => ({\n  whiteSpace: \"no-wrap\"\n});\n\nfunction FileInput(props) {\n  const { label } = props;\n  const fileInputRef = useRef();\n  const dragState = useRef();\n  const [cursorDrag, setCursorDrag] = useState({});\n  const { inputFont, setInputFont } = useContext(InputFontContext);\n  const [fileIsDragged, setFileIsDragged] = useState(false);\n  const { css } = useFela({ fileIsDragged });\n\n  useEffect(() => {\n    if (fileIsDragged) {\n      document.body.querySelector(\"#root\").style.pointerEvents = \"none\";\n      dragState.current = \"moving\";\n    } else {\n      document.body\n        .querySelector(\"#root\")\n        .style.removeProperty(\"pointer-events\");\n    }\n  }, [fileIsDragged]);\n\n  function handleDrop(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.dataTransfer?.files.length === 1) {\n      setInputFont(e.dataTransfer.files[0]);\n      dragState.current = null;\n    }\n    setFileIsDragged(false);\n  }\n\n  function handleDragEnter(e) {\n    dragState.current = \"entered\";\n    e.preventDefault();\n    e.stopPropagation();\n    setFileIsDragged(true);\n  }\n\n  function handleDragLeave(e) {\n    if (dragState.current === \"moving\") {\n      e.preventDefault();\n      e.stopPropagation();\n      setFileIsDragged(false);\n      dragState.current = \"left\";\n    }\n  }\n\n  function handleDragOver(e) {\n    const { clientX: left, clientY: top } = e;\n    setCursorDrag({ left, top });\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  function handleOnChange(e) {\n    if (e.target.files.length === 1) {\n      setInputFont(e.target.files[0]);\n    }\n  }\n\n  function handleOnClick(e) {\n    fileInputRef.current.click();\n  }\n\n  useEffect(() => {\n    document.body.addEventListener(\"dragenter\", handleDragEnter);\n    document.body.addEventListener(\"dragleave\", handleDragLeave);\n    document.body.addEventListener(\"dragover\", handleDragOver);\n    document.body.addEventListener(\"drop\", handleDrop);\n    return () => {\n      document.body.removeEventListener(\"dragleave\", handleDragLeave);\n      document.body.removeEventListener(\"dragenter\", handleDragEnter);\n      document.body.removeEventListener(\"dragover\", handleDragOver);\n      document.body.removeEventListener(\"drop\", handleDrop);\n    };\n  }, []);\n  return (\n    <>\n      <label className={css(column(1))}>{label}</label>\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        onChange={handleOnChange}\n        style={{ display: \"none\" }}\n        accept=\".ttf,.otf,woff,woff2\"\n      ></input>\n      <button className={css(column(3), buttonRule)} onClick={handleOnClick}>\n        <span>{inputFont?.name ?? \"select file\"}</span>{!inputFont?.name && <span className={css(dropItRule)}> or drop it</span>}\n      </button>\n      {/* <span className={css(dropItRule, column(\"4 / span 2\"))}> or drop it</span> */}\n      {fileIsDragged && (\n        <div className={css(fullscreenDragRule)}>\n          <span className={css(draggedRule)} style={cursorDrag}>\n            Drop it\n          </span>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default FileInput;\n","import React, { useEffect, useRef, useContext, useState } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { FormInputsContext } from \"../App\";\nimport { column } from \"../rules/rules\";\nimport { DetailViewContext } from \"../templates/DetailView\";\n\nconst valueIndicatorRule = () => ({\n  fontVariantNumeric: \"tabular-nums\",\n  padding: \"0 .2em\",\n});\n\nconst buttonRule = () => ({\n  height: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n})\n\nconst placeholderRule = () => ({\n  visibility: \"hidden\"\n})\n\nfunction RangeInput(props) {\n  const {\n    label,\n    name,\n    min,\n    max,\n    value,\n    onChange,\n    animatable = false,\n    disabled = false,\n    rules = []\n  } = props;\n  const inputRef = useRef();\n  const animationInterval = useRef();\n  const [animating, setAnimating] = useState();\n  const { filterIdentifier } = useContext(DetailViewContext);\n  const { setFormInputValue } = useContext(FormInputsContext);\n  const [currentValue, setCurrentValue] = useState(value);\n  const { css } = useFela({animating});\n  \n  useEffect(() => {\n    inputRef.current.value = currentValue;\n    return () => {\n      clearInterval(animationInterval.current)\n    }\n  }, []);\n  \n  function handleOnChange(e) {\n    if (inputRef.current.checkValidity()) {\n      const value = parseInt(e.target.value);\n      setCurrentValue(value);\n      onChange(e.target.value);\n      if (name) {\n        setFormInputValue(filterIdentifier, name, value);\n      }\n    }\n  }\n\n  function handleOnClickAnimate() {\n    if (animating === true) {\n      clearInterval(animationInterval.current);\n    } else {\n      let counter = 0;\n      const start = currentValue;\n      animationInterval.current = setInterval(() => {\n        const position = (start + counter) % 720;\n        const value = Math.round(position - 360 < 0 ? position : 360 - (position % 360))\n        setCurrentValue(value)\n        inputRef.current.value = value;\n        if (onChange) {\n          onChange(value)\n        }\n        const offset =\n          10 - ((Math.cos((Math.PI * position) / 180) + 1) / 2) * 9;\n        counter += offset;\n      }, 1000 / 30);\n    }\n    setAnimating(!animating);\n  }\n\n  return (\n    <>\n      <label className={css(column(1), ...rules)}>{label}</label>\n      {animatable && (\n        <button className={css(buttonRule, column(2), ...rules)} onClick={handleOnClickAnimate}>\n          <span>{animating ? \"stop\" : \"play\"}</span>\n          <span className={css(placeholderRule)} aria-label=\"hidden\">play</span>\n          <span className={css(placeholderRule)} aria-label=\"hidden\">stop</span>\n        </button>\n      )}\n      <input\n        ref={inputRef}\n        className={css(column(3), ...rules)}\n        type=\"range\"\n        onChange={handleOnChange}\n        min={min}\n        max={max}\n        disabled={disabled}\n      ></input>\n      <div className={css(valueIndicatorRule, ...rules)} disabled={disabled}>\n        {currentValue}\n      </div>\n    </>\n  );\n}\n\nexport default RangeInput;\n","import React, { useEffect, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { column } from \"../rules/rules\";\n\nconst inputRule = () => ({\n  background: \"transparent\",\n  outline: \"none\",\n  border: \"none\"\n})\n\nfunction TextInput(props) {\n  const { label, value, onChange, disabled } = props;\n  const inputRef = useRef();\n  const { css } = useFela();\n  useEffect(() => {\n    inputRef.current.value = value\n  }, []);\n\n  function handleOnChange() {\n    if (inputRef.current.checkValidity()) {\n      if (onChange) {\n        onChange(inputRef.current.value);\n      }\n    }\n  }\n  return (\n    <>\n      <label className={css(column(1))}>{label}</label>\n      <input\n        ref={inputRef}\n        className={css(inputRule, column(3))}\n        type=\"text\"\n        onChange={handleOnChange}\n        disabled={disabled}\n      ></input>\n    </>\n  );\n}\n\nexport default TextInput;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\n\nconst opacityTransition = 350;\n\nconst itemRule = ({\n  previewedFontFamily,\n  visible,\n  color,\n  inListView,\n  formHeight,\n}) => ({\n  userSelect: \"none\",\n  padding: \"10px\",\n  transitionDuration: `${opacityTransition}ms`,\n  transitionProperty: \"opacity, filter\",\n  transitionTimingFunction: \"ease-in\",\n  whiteSpace: \"nowrap\",\n  textRendering: \"optimizeSpeed\",\n  marginTop: `${-formHeight/2}px`,\n  \"@media(hover:none)\": {\n    marginTop: `${-formHeight}px `\n  },\n  extend: [\n    {\n      condition: previewedFontFamily,\n      style: {\n        fontFamily: previewedFontFamily,\n      },\n    },\n    {\n      condition: color,\n      style: {\n        color,\n      },\n    },\n    {\n      condition: !visible,\n      style: {\n        opacity: 0,\n        filter: \"blur(.025em)\",\n      },\n    },\n    {\n      condition: inListView,\n      style: {\n        fontVariationSettings: '\"RTTX\" 150',\n      },\n    },\n  ],\n});\n\nconst containerRule = ({ inListView, formHeight }) => ({\n  zIndex: -1,\n  userSelect: \"none\",\n  pointerEvents: \"none\",\n  position: \"absolute\",\n  top: 0,\n  left: 0,\n  width: \"100vw\",\n  height: \"100vh\",\n  // marginTop: \"25px\",\n  overflow: \"hidden\",\n  // height: \"100%\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: inListView ? \"flex-start\" : \"center\",\n  extend: [\n    {\n      condition: inListView,\n      style: {\n        height: \"100%\",\n      },\n    },\n    {\n      condition: !inListView && !formHeight,\n      style: {\n        visibility: \"hidden\",\n      },\n    },\n  ],\n});\n\nfunction FontPreview(props) {\n  const {\n    fontSize,\n    inListView = false,\n    fontFamily,\n    fontVariations = {},\n    color,\n    formHeight,\n  } = props;\n  const contentRef = useRef();\n  const [visible, setVisible] = useState(true);\n  const [previewedFontFamily, setPreviewedFontFamily] = useState(fontFamily);\n  const [previewedChildren, setPreviewedChildren] = useState(props.children);\n\n  useEffect(() => {\n    if (fontFamily !== previewedFontFamily) {\n      setVisible(false);\n      setTimeout(() => {\n        setPreviewedFontFamily(fontFamily);\n        setPreviewedChildren(props.children);\n        setVisible(true);\n      }, opacityTransition + 50);\n    }\n  }, [fontFamily]);\n\n  const { css } = useFela({\n    visible,\n    inListView,\n    previewedFontFamily,\n    color,\n    formHeight,\n  });\n\n  return (\n    <div className={css(containerRule)} style={{ fontSize: `${fontSize}px` }}>\n      <span\n        ref={contentRef}\n        className={css(itemRule)}\n        style={{\n          fontVariationSettings: Object.keys(fontVariations)\n            .map((key) => `\"${key}\" ${fontVariations[key]}`)\n            .join(\", \"),\n        }}\n      >\n        {previewedChildren}\n      </span>\n    </div>\n  );\n}\n\nexport default FontPreview;\n","import React from \"react\";\n\nfunction Log(props) {\n  const { content } = props;\n  return <ul>\n    {content.map((message, index) => <li key={index}>{message}</li>)}\n  </ul>;\n}\n\nexport default Log;\n","import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport {\n  FormInputsContext,\n  InputFontContext,\n  PreviewedInputFontContext,\n  PreviewedOutputFontsContext,\n  PreviewStringsContext,\n  FontVariationsContext,\n} from \"../App\";\nimport FileInput from \"../components/FileInput\";\nimport RangeInput from \"../components/RangeInput\";\nimport TextInput from \"../components/TextInput\";\nimport { useFela } from \"react-fela\";\nimport { column, width } from \"../rules/rules\";\nimport FontPreview from \"../components/FontPreview\";\nimport axios from \"axios\";\nimport Log from \"../components/Log\";\n\nexport const DetailViewContext = createContext();\n\nconst getRule = () => ({\n  textAlign: \"right\"\n})\n\nconst formWrapperRule = () => ({\n  position: \"fixed\",\n  bottom: 0,\n  height: \"100vh\",\n  // background: \"red\",\n  display: \"flex\",\n  alignItems: \"flex-end\",\n});\nconst formRule = () => ({\n  pointerEvents: \"all\",\n  display: \"grid\",\n  gridTemplateColumns: [\n    \"min-content min-content auto 3ch 5ch\",\n    \"repeat(4, min-content) 3ch\",\n  ],\n  width: [\"calc(100% - 10px)\", \"auto\"],\n  gap: \"0px 6px\",\n  gridAutoRows: \"1.2em\",\n  whiteSpace: \"nowrap\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  marginBottom: \"10px\",\n});\n\nconst fullscreenRule = () => ({\n  minHeight: `100%`,\n  top: 0,\n  position: \"absolute\",\n  width: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  padding: \"10px\",\n  pointerEvents: \"none\",\n});\n\nconst isProcessingWrapperRule = () => ({\n  display: \"flex\",\n  alignItems: \"flex-end\",\n  flexDirection: \"row\",\n});\n\nconst isProcessingRule = ({ isProcessing }) => ({\n  display: \"block\",\n  animationName: {\n    \"0%\": { paddingBottom: \".5em\" },\n    \"40%\": { paddingBottom: \"0\" },\n    \"100%\": { paddingBottom: \"0\" },\n  },\n  animationDuration: \"1s\",\n  animationIterationCount: \"infinite\",\n  animationDirection: \"alternate-reverse\",\n  animationPlayState: isProcessing ? \"processing\" : \"paused\",\n});\n\nconst fontSizeSliderRule = () => ({\n  \"@media(hover:none)\": {\n    display: \"none\",\n  },\n});\n\nconst CancelToken = axios.CancelToken;\nlet lastTimeStamp;\n\nfunction DetailView(props) {\n  const {\n    inputs,\n    variableFontControlSliders,\n    filterIdentifier,\n    navHeight,\n    formHeight,\n    setFormHeight,\n    fontSize,\n    setFontSize\n  } = props;\n  const { previewedInputFont, setPreviewedInputFont } = useContext(\n    PreviewedInputFontContext\n  );\n  const formRef = useRef();\n  const previousDistance = useRef(null);\n  const [logContent, setLogContent] = useState([]);\n  const { setPreviewedOutputFonts } = useContext(PreviewedOutputFontsContext);\n  const { formInputValues } = useContext(FormInputsContext);\n  const fontSizeRef = useRef(fontSize);\n  const { inputFont } = useContext(InputFontContext);\n  const isMounted = useRef(false);\n  const cancel = useRef(undefined);\n  const { previewStrings, setPreviewString } = useContext(\n    PreviewStringsContext\n  );\n  const [previewedString, setPreviewedString] = useState(\n    previewStrings[filterIdentifier]\n  );\n  const [getFormVisible, setGetFormVisible] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const { fontVariations, setFontVariations } = useContext(\n    FontVariationsContext\n  );\n  const { css } = useFela({ navHeight, isProcessing });\n\n  function cancelRequest() {\n    if (cancel.current !== undefined) {\n      setIsProcessing(false);\n      cancel.current(\"cancelled by user\");\n      cancel.current = undefined;\n    }\n  }\n\n  function sendRequest() {\n    const formData = new FormData();\n    formData.append(\"font_file\", inputFont);\n    formData.append(\"preview_string\", previewedString);\n    Object.keys(formInputValues[filterIdentifier]).forEach((key) =>\n      formData.append(key, formInputValues[filterIdentifier][key])\n    );\n    setIsProcessing(true);\n    axios({\n      method: \"post\",\n      cancelToken: new CancelToken(function executor(c) {\n        cancel.current = c;\n      }),\n      url: `http://0.0.0.0:5000/filters/${filterIdentifier}`,\n      data: formData,\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    })\n      .then((response) => {\n        setLogContent(response.data.warnings);\n        const outputFontsArrays = response.data.fonts.map((fontBase64) =>\n          Uint8Array.from(atob(fontBase64), (c) => c.charCodeAt(0))\n        );\n        return Promise.all([inputFont.arrayBuffer(), outputFontsArrays]);\n      })\n      .then(([inputFontBuffer, outputFontsArrays]) => [\n        new FontFace(`preview-input-font-${Date.now()}`, inputFontBuffer),\n        outputFontsArrays.map(\n          (outputFontArray, index) =>\n            new FontFace(\n              `preview-output-font-${Date.now()}-${index}`,\n              outputFontArray\n            )\n        ),\n      ])\n      .then(([inputFont, outputFonts]) => {\n        document.fonts.add(inputFont);\n        outputFonts.map((outputFont) => document.fonts.add(outputFont));\n        return [inputFont, outputFonts];\n      })\n      .then(([inputFont, outputFonts]) => {\n        setPreviewedInputFont(inputFont.family);\n        setPreviewedOutputFonts(\n          filterIdentifier,\n          outputFonts.map((outputFont) => outputFont.family)\n        );\n      })\n      .catch((thrown) => {\n        if (axios.isCancel(thrown)) {\n          console.log(thrown.message);\n        } else {\n          console.log(thrown);\n        }\n      })\n      .finally(() => {\n        setIsProcessing(false);\n      });\n  }\n\n  // form auto-submit\n  useEffect(() => {\n    if (isMounted.current && inputFont) {\n      const now = Date.now();\n      lastTimeStamp = now;\n      setTimeout(function () {\n        if (now === lastTimeStamp) {\n          setPreviewString(filterIdentifier, previewedString);\n          sendRequest();\n        }\n      }, 500);\n    }\n  }, [formInputValues, inputFont, previewedString, filterIdentifier]);\n\n\n  function handleOnTouchMove(e) {\n    switch (e.touches.length) {\n      case 2:\n        const [{ pageX: x1, pageY: y1 }, { pageX: x2, pageY: y2 }] = e.touches;\n        const distance = Math.hypot(y2 - y1, x2 - x1) * 2;\n        if (previousDistance.current) {\n          const value =\n            fontSizeRef.current - (previousDistance.current - distance);\n          if (value > 20) {\n            setFontSize(value);\n            fontSizeRef.current = value;\n          }\n        }\n        previousDistance.current = distance;\n        break;\n    }\n  }\n\n  function handleOnTouchEnd(e) {\n    previousDistance.current = null;\n  }\n\n  useEffect(() => {\n    isMounted.current = true;\n    const { offsetHeight } = formRef.current;\n    setFormHeight(offsetHeight);\n    document.body.style.touchAction = \"none\";\n    window.addEventListener(\"touchmove\", handleOnTouchMove);\n    window.addEventListener(\"touchend\", handleOnTouchEnd);\n    return () => {\n      window.removeEventListener(\"touchmove\", handleOnTouchMove);\n      window.removeEventListener(\"touchend\", handleOnTouchEnd);\n      document.body.style.removeProperty(\"touch-action\");\n      isMounted.current = false;\n      setGetFormVisible(false);\n      cancelRequest();\n    };\n  }, []);\n  \n  return (\n    <DetailViewContext.Provider value={{ filterIdentifier }}>\n      <div className={css(fullscreenRule)}>\n        <FontPreview\n          fontFamily={previewedInputFont}\n          fontSize={fontSize}\n          formHeight={formHeight}\n        >\n          {previewStrings[filterIdentifier]}\n        </FontPreview>\n        <div className={css(formWrapperRule)}>\n          {isProcessing && (\n            <div className={css(isProcessingWrapperRule)}>\n              {[...\"processing...........\"].map((letter, index) => (\n                <span\n                  key={`processing-${index}`}\n                  className={css(isProcessingRule, () => ({\n                    animationDelay: `${index / 10}s`,\n                  }))}\n                >\n                  {letter}\n                </span>\n              ))}\n            </div>\n          )}\n          <Log content={logContent} />\n          <div ref={formRef} className={css(formRule)}>\n            {variableFontControlSliders?.map((input, index) => (\n              <RangeInput\n                label={input.label}\n                key={`font_ui_${index}`}\n                min={input.min}\n                max={input.max}\n                tag={input.tag}\n                value={fontVariations[filterIdentifier][input.tag]}\n                onChange={(value) =>\n                  setFontVariations(filterIdentifier, input.tag, value)\n                }\n                animatable={true}\n              />\n            ))}\n            <RangeInput\n              label={\"font size\"}\n              name=\"fontSize\"\n              min={20}\n              max={1000}\n              value={fontSize}\n              onChange={(value) => setFontSize(value)}\n              rules={[fontSizeSliderRule]}\n            />\n            <FileInput label=\"font file\"></FileInput>\n            <TextInput\n              label={\"preview\"}\n              value={previewStrings[filterIdentifier]}\n              onChange={(value) => setPreviewedString(value)}\n              disabled={!Boolean(inputFont)}\n            ></TextInput>\n            {inputs.map((input, index) => {\n              switch (input.type) {\n                case \"range\":\n                  return (\n                    <RangeInput\n                      label={input.label}\n                      name={input.name}\n                      key={`input_${filterIdentifier}_${index}`}\n                      min={input.min}\n                      max={input.max}\n                      value={formInputValues[filterIdentifier][input.name]}\n                      disabled={!Boolean(inputFont)}\n                    ></RangeInput>\n                  );\n                default:\n                  throw new Error(\"component not found\");\n              }\n            })}\n            <button\n              className={css(column(5), getRule)}\n              onClick={() => setGetFormVisible(!getFormVisible)}\n              disabled={!Boolean(inputFont)}\n            >\n              {getFormVisible ? \"hide\" : \"get\"}\n            </button>\n            {getFormVisible && (\n              <>\n                <hr className={css(column(\"1 / span 5\"), width(\"100%\"))} />\n                <TextInput label={\"font name\"} />\n                <button className={css(column(\"5\"))}>download</button>\n                <TextInput label={\"email\"} />\n                <button className={css(column(\"5\"))}>send</button>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </DetailViewContext.Provider>\n  );\n}\n\nexport default DetailView;\n","import React, { useContext } from \"react\";\nimport { useFela } from \"react-fela\";\nimport {\n  FontSizeContext,\n  FontVariationsContext,\n  PreviewedOutputFontsContext,\n  PreviewStringsContext,\n} from \"../App\";\nimport FontPreview from \"../components/FontPreview\";\n\nconst containerRule = ({ navHeight }) => ({\n  marginTop: `${navHeight}px`,\n});\n\n\nfunction DetailViewOverlay(props) {\n  const { filterIdentifier, navHeight, layerColors, formHeight, fontSize } = props;\n  const { previewStrings } = useContext(PreviewStringsContext);\n  const { previewedOutputFonts } = useContext(PreviewedOutputFontsContext);\n  const { fontVariations } = useContext(FontVariationsContext)\n  const { css } = useFela({ navHeight });\n  return (\n    <div className={css(containerRule)}>\n        {layerColors.map((layerColor, index) => (\n        <FontPreview \n          key={`${filterIdentifier}-overlay-${index}`}\n          fontFamily={previewedOutputFonts[filterIdentifier][index] || `${filterIdentifier}-${index}`}\n          fontSize={fontSize}\n          fontVariations={fontVariations[filterIdentifier]}\n          color={layerColor}\n          formHeight={formHeight}\n        >\n          {previewStrings[filterIdentifier]}\n        </FontPreview>\n        ))}\n    </div>\n  );\n}\n\nexport default DetailViewOverlay;\n","import React, { useState, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\nimport FontPreview from \"../components/FontPreview\";\nimport Link from \"../components/Link\";\n\nexport const fontPreviewContainerRule = ({ fontSize }) => ({\n  position: \"relative\",\n  height: `${fontSize * 0.8}px`,\n});\n\nfunction ListView(props) {\n  const { filterRoutes, fontSize } = props;\n  const { css } = useFela({ fontSize });\n  return (\n    <ul>\n      {filterRoutes.map((filterRoute, index) => (\n        <li key={`list-view-${filterRoute.route}`}>\n          <Link to={filterRoute.route}>\n            <div className={css(fontPreviewContainerRule)}>\n              <FontPreview\n                fontSize={fontSize}\n                inListView={true}\n              >\n                {filterRoute.title}\n              </FontPreview>\n            </div>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ListView;\n","import React from \"react\";\nimport { useFela } from \"react-fela\";\nimport FontPreview from \"../components/FontPreview\";\nimport Link from \"../components/Link\";\nimport { fontPreviewContainerRule } from \"./ListView\";\n\nconst containerRule = ({ navHeight }) => ({\n  marginTop: `${navHeight}px`,\n});\n\nfunction ListViewOverlay(props) {\n  const { filterRoutes, navHeight, fontSize } = props;\n  const { css } = useFela({ navHeight, fontSize });\n  return (\n    <ul className={css(containerRule)}>\n      {filterRoutes.map((filterRoute) => (\n        <li key={`overlay-link-${filterRoute.route}`}>\n          <Link to={filterRoute.route}>\n            <div className={css(fontPreviewContainerRule)}>\n              {filterRoute.layerColors.map((color, index) => (\n                <FontPreview\n                  key={`overlay-font-preview-${index}`}\n                  fontSize={fontSize}\n                  inListView={true}\n                  fontFamily={`${filterRoute.filterIdentifier}-${index}`}\n                  color={color}\n                >\n                  {filterRoute.title}\n                </FontPreview>\n              ))}\n            </div>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ListViewOverlay;\n","import React, { createContext, useState, useEffect, useRef } from \"react\";\nimport { useFela } from \"react-fela\";\nimport { Route, Routes } from \"react-router\";\nimport Nav from \"./components/Nav\";\nimport data from \"./data\";\nimport { getMaxFontSize } from \"./misc\";\nimport DetailView from \"./templates/DetailView\";\nimport DetailViewOverlay from \"./templates/DetailViewOverlay\";\nimport ListView from \"./templates/ListView\";\nimport ListViewOverlay from \"./templates/ListViewOverlay\";\n\nexport const FormInputsContext = createContext();\nexport const InputFontContext = createContext();\nexport const PreviewStringsContext = createContext();\nexport const FontSizeContext = createContext();\nexport const ContentVisibilityContext = createContext();\nexport const PreviewedInputFontContext = createContext();\nexport const PreviewedOutputFontsContext = createContext();\nexport const FontVariationsContext = createContext();\n\nconst filterRoutes = data.filter((route) => route.type === \"filterDetailView\");\nconst _formInputValues = filterRoutes.reduce((collector, filterRoute) => {\n  collector[filterRoute.filterIdentifier] = [\n    ...filterRoute.inputs,\n    ...(filterRoute?.variableFontControlSliders ?? []),\n  ].reduce(\n    (inputCollector, input) => {\n      inputCollector[input.name] = input.default;\n      return inputCollector;\n    },\n    { fontSize: null }\n  );\n  return collector;\n}, {});\n\nfunction getMaxFontSizes() {\n  return filterRoutes.reduce((collector, filterRoute) => {\n    collector[filterRoute.filterIdentifier] = Math.ceil(\n      getMaxFontSize(filterRoute.title, \"Times New Roman\")\n    );\n    return collector;\n  }, {});\n}\n\nconst contentOverlayRule = ({ contentIsVisible, navHeight }) => ({\n  position: \"fixed\",\n  bottom: 0,\n  width: \"100%\",\n  height: \"0px\",\n  left: 0,\n  background: \"#ccc\",\n  transition: `height ${350}ms`,\n  transform: \"translateZ(0)\",\n  transitionTimingFunction: contentIsVisible\n    ? \"cubic-bezier(.55,0,1,.45)\"\n    : \"cubic-bezier(0,.55,.45,1)\",\n  height: contentIsVisible ? 0 : `calc(100% - ${navHeight - 10}px)`,\n});\n\nconst contentBackgroundRule = ({ isTouching, transitionWidth }) => ({\n  zIndex: -1,\n  top: 0,\n  left: 0,\n  width: \"100%\",\n  position: \"absolute\",\n  background: \"#eee\",\n  overflow: \"hidden\",\n  transform: \"translateZ(0)\",\n  \"@media(hover:none)\": {\n    height: \"100% !important\",\n  },\n  extend: [\n    {\n      condition: isTouching,\n      style: {\n        height: \"100%\",\n      },\n    },\n    {\n      condition: !isTouching,\n      style: {\n        width: \"100%\",\n      },\n    },\n    {\n      condition: transitionWidth,\n      style: {\n        transition: \"width .15s ease-in\",\n      },\n    },\n  ],\n});\n\nconst appRule = () => ({\n  fontSize: [\"22px\", \"18px\"],\n});\n\nfunction App() {\n  const [inputFont, setInputFont] = useState(null);\n  const [previewedInputFont, setPreviewedInputFont] = useState(null);\n  const [fontSizes, _setFontSize] = useState(getMaxFontSizes());\n  function setFontSize(filterIdentifier, value){\n    let value_ = {...fontSizes}\n    value_[filterIdentifier] = value\n    _setFontSize(value_)\n  }\n  const [formInputValues, _setFormInputsValue] = useState(_formInputValues);\n  const [contentIsVisible, setContentIsVisible] = useState(true);\n  const [navHeight, setNavHeight] = useState(0);\n  const [isTouching, setIsTouching] = useState(false);\n  const [transitionWidth, setTransitionWidth] = useState(false);\n  const [cursorY, setCursorY] = useState(0);\n  const [dragX, setDragX] = useState(0);\n  const [listViewFontSize, setListViewFontSize] = useState(\n    Math.min(...Object.values(getMaxFontSizes()))\n  );\n  const [formHeight, setFormHeight] = useState(0);\n\n  const { css } = useFela({\n    contentIsVisible,\n    navHeight,\n    isTouching,\n    transitionWidth,\n  });\n\n  const contentBackground = useRef();\n  const lastTouchTimestamp = useRef(Date.now());\n\n  const [previewedOutputFonts, _setPreviewedOutputFonts] = useState(\n    filterRoutes.reduce((collector, filterRoute) => {\n      collector[filterRoute.filterIdentifier] = Array(\n        filterRoute.numberOfLayers\n      );\n      return collector;\n    }, {})\n  );\n\n  const [fontVariations, _setFontVariations] = useState(\n    filterRoutes.reduce((collector, filterRoute) => {\n      if (filterRoute.variableFontControlSliders) {\n        collector[filterRoute.filterIdentifier] =\n          filterRoute.variableFontControlSliders.reduce((collector, slider) => {\n            collector[slider.tag] = slider.default;\n            return collector;\n          }, {});\n      }\n      return collector;\n    }, {})\n  );\n\n  function setPreviewedOutputFonts(filterIdentifier, value) {\n    let collector = {};\n    collector[filterIdentifier] = value;\n    _setPreviewedOutputFonts({ ...previewedOutputFonts, ...collector });\n  }\n\n  function setFontVariations(filterIdentifier, tag, value) {\n    let collector = { ...fontVariations };\n    collector[filterIdentifier][tag] = parseInt(value);\n    _setFontVariations(collector);\n  }\n\n  function setFormInputValue(filterIdentifier, name, value) {\n    let collector = { ...formInputValues };\n    collector[filterIdentifier][name] = value;\n    _setFormInputsValue(collector);\n  }\n\n  function handleCursorY(e) {\n    if (Date.now() - lastTouchTimestamp.current > 500) {\n      setTransitionWidth(false);\n      setIsTouching(false);\n      setCursorY(e.pageY);\n    }\n  }\n\n  function handleTouchStart(e) {\n    lastTouchTimestamp.current = Date.now();\n    setTransitionWidth(true);\n    setIsTouching(true);\n    if (e.touches.length === 1) {\n      setDragX(e.touches[0].pageX);\n    }\n  }\n\n  function handleOnTouchMove(e) {\n    setTransitionWidth(false);\n    let value;\n    switch (e.touches.length) {\n      case 1:\n        value = e.touches[0].pageX;\n        break;\n      case 2:\n        const [{ pageX: x1 }, { pageX: x2 }] = e.touches;\n        value = Math.min(x1, x2) + Math.abs(x2 - x1) / 2;\n        break;\n    }\n    setDragX(value);\n  }\n\n  function handleOnResize(e) {\n    setListViewFontSize(Math.min(...Object.values(getMaxFontSizes())))\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleOnResize);\n    window.addEventListener(\"mousemove\", handleCursorY, false);\n    window.addEventListener(\"touchstart\", handleTouchStart);\n    window.addEventListener(\"touchmove\", handleOnTouchMove);\n    return () => {\n      window.removeEventListener(\"resize\", handleOnResize);\n      window.removeEventListener(\"mousemove\", handleCursorY);\n      window.removeEventListener(\"touchstart\", handleTouchStart);\n      window.removeEventListener(\"touchmove\", handleOnTouchMove);\n    };\n  }, []);\n\n  const [previewStrings, _setPreviewString] = useState(\n    filterRoutes.reduce((collector, filterRoute) => {\n      collector[filterRoute.filterIdentifier] = filterRoute.title;\n      return collector;\n    }, {})\n  );\n\n  function setPreviewString(filterIdentifier, value) {\n    let collector = { ...previewStrings };\n    collector[filterIdentifier] = value;\n    _setPreviewString(collector);\n  }\n\n  return (\n    <div className={css(appRule)}>\n      <PreviewStringsContext.Provider\n        value={{ previewStrings, setPreviewString }}\n      >\n        <PreviewedOutputFontsContext.Provider\n          value={{ previewedOutputFonts, setPreviewedOutputFonts }}\n        >\n          <FontVariationsContext.Provider\n            value={{ fontVariations, setFontVariations }}\n          >\n            <ContentVisibilityContext.Provider value={setContentIsVisible}>\n              <Nav setNavHeight={setNavHeight} filterRoutes={filterRoutes} />\n              <FormInputsContext.Provider\n                value={{ formInputValues, setFormInputValue }}\n              >\n                <InputFontContext.Provider value={{ inputFont, setInputFont }}>\n                  <PreviewedInputFontContext.Provider\n                    value={{ previewedInputFont, setPreviewedInputFont }}\n                  >\n                    <main>\n                      <Routes>\n                        {data.map((route, index) => {\n                          let element;\n                          switch (route.type) {\n                            case \"filterDetailView\":\n                              element = (\n                                <DetailView\n                                  {...route}\n                                  navHeight={navHeight}\n                                  key={route.route}\n                                  setFormHeight={setFormHeight}\n                                  formHeight={formHeight}\n                                  fontSize={fontSizes[route.filterIdentifier]}\n                                  setFontSize={(value) => setFontSize(route.filterIdentifier, value)}\n                                ></DetailView>\n                              );\n                              break;\n                            case \"filterListView\":\n                              element = (\n                                <ListView\n                                  {...route}\n                                  filterRoutes={filterRoutes}\n                                  fontSize={listViewFontSize}\n                                ></ListView>\n                              );\n                              break;\n                            default:\n                              throw new Error(\"view not matched\");\n                          }\n                          return (\n                            <Route\n                              path={route.route}\n                              element={element}\n                              key={`route_${index}`}\n                            ></Route>\n                          );\n                        })}\n                      </Routes>\n                    </main>\n                  </PreviewedInputFontContext.Provider>\n                </InputFontContext.Provider>\n              </FormInputsContext.Provider>\n            </ContentVisibilityContext.Provider>\n            <div className={css(contentOverlayRule)}></div>\n            <div\n              ref={contentBackground}\n              className={css(contentBackgroundRule)}\n              style={{\n                ...(isTouching\n                  ? { width: `${dragX}px` }\n                  : { height: `${cursorY}px` }),\n              }}\n            >\n              <Routes>\n                {data.map((route, index) => {\n                  let element;\n                  switch (route.type) {\n                    case \"filterDetailView\":\n                      element = (\n                        <DetailViewOverlay\n                          {...route}\n                          navHeight={navHeight}\n                          key={route.route}\n                          setFormHeight={setFormHeight}\n                          formHeight={formHeight}\n                          fontSize={fontSizes[route.filterIdentifier]}\n                        />\n                      );\n                      break;\n                    default:\n                      element = (\n                        <ListViewOverlay\n                          {...route}\n                          filterRoutes={filterRoutes}\n                          navHeight={navHeight}\n                          fontSize={listViewFontSize}\n                        />\n                      );\n                  }\n                  return (\n                    <Route\n                      path={route.route}\n                      element={element}\n                      key={`overlay_route_${index}`}\n                    />\n                  );\n                })}\n              </Routes>\n            </div>\n          </FontVariationsContext.Provider>\n        </PreviewedOutputFontsContext.Provider>\n      </PreviewStringsContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","export function getMaxFontSize(text, fontFamily) {\n  const span = document.createElement(\"span\");\n  span.innerHTML = text;\n  span.style.fontSize = \"200px\"\n  span.style.fontFamily = fontFamily\n  document.body.appendChild(span);\n  const { offsetWidth } = span;\n  document.body.removeChild(span);\n  return Math.floor(200 * ((document.body.clientWidth-20)/offsetWidth));\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { RendererProvider } from \"react-fela\";\nimport { createRenderer } from \"fela\";\nimport extend from \"fela-plugin-extend\";\nimport embedded from \"fela-plugin-embedded\";\nimport responsiveValue from \"fela-plugin-responsive-value\";\nimport multipleSelectors from 'fela-plugin-multiple-selectors'\n\n\nconst getMediaQueries = (values, props) => {\n  switch(values.length) {\n   case 2:\n     return [\"@media (min-width: 570px)\"];\n    default:\n      return []\n  }\n};\n\nconst renderer = createRenderer({\n  plugins: [\n    extend(),\n    embedded(),\n    multipleSelectors(),\n    responsiveValue(getMediaQueries, {\n      padding: true,\n      margin: true,\n      display: true,\n      fontSize: true,\n      gridTemplateColumns: true,\n      width: true,\n      height: true\n    }),\n  ],\n});\n\nconst resetStyle = {\n  padding: 0,\n  margin: 0,\n  boxSizing: \"border-box\",\n  textDecoration: \"None\",\n  fontFamily: \"inherit\",\n  fontSize: \"inherit\",\n  color: \"inherit\",\n  \"-webkit-font-smoothing\": \"antialiased\",\n  \"-moz-osx-font-smoothing\": \"grayscale\",\n};\nrenderer.renderStatic(resetStyle, \"html,body,div,input,label,a,button\");\n\nconst bodyStyle = {\n  fontFamily: \"'Times New Roman', serif\",\n  maxWidth: \"100vw\",\n  minHeight: \"100vh\",\n  position: \"relative\",\n  overscrollBehavior: \"contain\",\n  overflow: \"scroll\",\n};\nrenderer.renderStatic(bodyStyle, \"body\");\n\nconst htmlStyle = {\n  overflow: \"hidden\",\n  height: \"100vh\",\n  width: \"100vw\",\n  position: \"fixed\"\n};\n\nrenderer.renderStatic(htmlStyle, \"html\");\n\nconst ulStyle = {\n  margin: 0,\n  listStyleType: \"None\",\n  padding: 0,\n};\nrenderer.renderStatic(ulStyle, \"ul\");\n\nconst buttonStyle = {\n  whiteSpace: \"nowrap\",\n  background: \"transparent\",\n  outline: \"none\",\n  border: \"none\",\n  appearance: \"none\",\n  textAlign: \"left\",\n  textDecoration: \"underline\"\n};\nrenderer.renderStatic(buttonStyle, \"button\");\n\nconst disabledStyle = {\n  color: \"gray\",\n  userSelect: \"none\",\n  pointerEvents: \"none\",\n};\nrenderer.renderStatic(disabledStyle, \"*[disabled]\");\n\nconst inputRule = {\n  minWidth: \"80px\"\n}\nrenderer.renderStatic(inputRule, \"input\");\n\nconst aActiveRule = {\n  textDecoration: \"underline\"\n}\n\nrenderer.renderStatic(aActiveRule, \"a.active\")\n\n\nconst fonts = [\"rasterizer-0\", \"rotorizer-0\", \"rotorizer-1\"]\nfonts.forEach(font => \n  renderer.renderFont(font, [`${font}.ttf`])\n)\n\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <RendererProvider renderer={renderer}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </RendererProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}